{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\crm_front\\\\src\\\\Components\\\\Navbar\\\\Topnav.DarkSwitch.js\";\nimport React, { Component } from \"react\";\nimport Switch from \"rc-switch\";\nimport \"rc-switch/assets/index.css\";\nimport { Tooltip } from \"reactstrap\";\nimport { defaultColor, themeColorStorageKey } from \"../../constants/defaultValues\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TopnavDarkSwitch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        tooltipOpen: !prevState.tooltipOpen\n      }));\n    };\n\n    this.getColor = () => {\n      return localStorage.getItem(themeColorStorageKey) ? localStorage.getItem(themeColorStorageKey) : defaultColor;\n    };\n\n    this.changeMode = () => {\n      let color = this.getColor();\n\n      if (color.indexOf('dark') > -1) {\n        color = color.replace('dark', 'light');\n      } else if (color.indexOf('light') > -1) {\n        color = color.replace('light', 'dark');\n      }\n\n      this.setState({\n        switchChecked: color.indexOf('dark') > -1\n      }, () => {\n        localStorage.setItem(themeColorStorageKey, color);\n        setTimeout(() => {\n          window.location.reload();\n        }, 500);\n      });\n    };\n\n    this.state = {\n      switchChecked: false,\n      tooltipOpen: false\n    };\n  }\n\n  componentDidMount() {\n    const color = this.getColor();\n    this.setState({\n      switchChecked: color.indexOf('dark') > -1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-none d-md-inline-block align-middle mr-3\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        id: \"Tooltip-Switch\",\n        className: \"custom-switch custom-switch-primary custom-switch-small\",\n        checked: this.state.switchChecked,\n        onChange: this.changeMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        placement: \"left\",\n        isOpen: this.state.tooltipOpen,\n        target: \"Tooltip-Switch\",\n        toggle: this.toggle,\n        children: \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/projects/crm_front/src/Components/Navbar/Topnav.DarkSwitch.js"],"names":["React","Component","Switch","Tooltip","defaultColor","themeColorStorageKey","TopnavDarkSwitch","constructor","props","toggle","setState","prevState","tooltipOpen","getColor","localStorage","getItem","changeMode","color","indexOf","replace","switchChecked","setItem","setTimeout","window","location","reload","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,+BAAnD;;AAEA,eAAe,MAAMC,gBAAN,SAA+BL,SAA/B,CAAyC;AACpDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,MAdmB,GAcV,MAAM;AACX,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBC,QAAAA,WAAW,EAAE,CAACD,SAAS,CAACC;AADA,OAAL,CAAvB;AAGH,KAlBkB;;AAAA,SAoBnBC,QApBmB,GAoBR,MAAM;AACb,aAAOC,YAAY,CAACC,OAAb,CAAqBV,oBAArB,IACDS,YAAY,CAACC,OAAb,CAAqBV,oBAArB,CADC,GAEDD,YAFN;AAGH,KAxBkB;;AAAA,SAyBnBY,UAzBmB,GAyBN,MAAM;AACf,UAAIC,KAAK,GAAG,KAAKJ,QAAL,EAAZ;;AAEA,UAAII,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA7B,EAAgC;AAC5BD,QAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,MAAd,EAAsB,OAAtB,CAAR;AACH,OAFD,MAEO,IAAIF,KAAK,CAACC,OAAN,CAAc,OAAd,IAAyB,CAAC,CAA9B,EAAiC;AACpCD,QAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,OAAd,EAAuB,MAAvB,CAAR;AACH;;AAED,WAAKT,QAAL,CAAc;AACVU,QAAAA,aAAa,EAAEH,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC;AAD9B,OAAd,EAEG,MAAM;AACLJ,QAAAA,YAAY,CAACO,OAAb,CAAqBhB,oBAArB,EAA2CY,KAA3C;AACAK,QAAAA,UAAU,CAAC,MAAM;AACbC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAPD;AAQH,KA1CkB;;AAEf,SAAKC,KAAL,GAAa;AACTN,MAAAA,aAAa,EAAE,KADN;AAETR,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AACDe,EAAAA,iBAAiB,GAAG;AAChB,UAAMV,KAAK,GAAG,KAAKJ,QAAL,EAAd;AACA,SAAKH,QAAL,CAAc;AACVU,MAAAA,aAAa,EAAEH,KAAK,CAACC,OAAN,CAAc,MAAd,IAAwB,CAAC;AAD9B,KAAd;AAGH;;AAgCDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,EAAE,EAAC,gBADP;AAEI,QAAA,SAAS,EAAC,yDAFd;AAGI,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWN,aAHxB;AAII,QAAA,QAAQ,EAAE,KAAKJ;AAJnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,OAAD;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,MAAM,EAAE,KAAKU,KAAL,CAAWd,WAFvB;AAGI,QAAA,MAAM,EAAE,gBAHZ;AAII,QAAA,MAAM,EAAE,KAAKH,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA9DmD","sourcesContent":["import React, { Component } from \"react\";\r\nimport Switch from \"rc-switch\";\r\nimport \"rc-switch/assets/index.css\";\r\nimport { Tooltip } from \"reactstrap\";\r\n\r\nimport { defaultColor, themeColorStorageKey } from \"../../constants/defaultValues\";\r\n\r\nexport default class TopnavDarkSwitch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            switchChecked: false,\r\n            tooltipOpen: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const color = this.getColor();\r\n        this.setState({\r\n            switchChecked: color.indexOf('dark') > -1\r\n        })\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            tooltipOpen: !prevState.tooltipOpen\r\n        }));\r\n    };\r\n\r\n    getColor = () => {\r\n        return localStorage.getItem(themeColorStorageKey)\r\n            ? localStorage.getItem(themeColorStorageKey)\r\n            : defaultColor;\r\n    };\r\n    changeMode = () => {\r\n        let color = this.getColor();\r\n\r\n        if (color.indexOf('dark') > -1) {\r\n            color = color.replace('dark', 'light')\r\n        } else if (color.indexOf('light') > -1) {\r\n            color = color.replace('light', 'dark')\r\n        }\r\n\r\n        this.setState({\r\n            switchChecked: color.indexOf('dark') > -1\r\n        }, () => {\r\n            localStorage.setItem(themeColorStorageKey, color)\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 500);\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n                <Switch\r\n                    id=\"Tooltip-Switch\"\r\n                    className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n                    checked={this.state.switchChecked}\r\n                    onChange={this.changeMode}/>\r\n                <Tooltip\r\n                    placement=\"left\"\r\n                    isOpen={this.state.tooltipOpen}\r\n                    target={\"Tooltip-Switch\"}\r\n                    toggle={this.toggle}>\r\n                    Dark Mode\r\n                </Tooltip>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}