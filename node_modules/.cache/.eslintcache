[{"C:\\projects\\crm_front\\src\\index.js":"1","C:\\projects\\crm_front\\src\\reportWebVitals.js":"2","C:\\projects\\crm_front\\src\\App.js":"3","C:\\projects\\crm_front\\src\\Pages\\Login.js":"4","C:\\projects\\crm_front\\src\\Pages\\AdminPages\\Home\\Home.js":"5","C:\\projects\\crm_front\\src\\Components\\NavBar\\AdminNavBar.js":"6","C:\\projects\\crm_front\\src\\Pages\\AdminPages\\CLientsManagment\\AddClient\\AddClient.js":"7","C:\\projects\\crm_front\\src\\Components\\Inputs\\Inputs.js":"8","C:\\projects\\crm_front\\src\\Components\\forms\\FormAdd.js":"9","C:\\projects\\crm_front\\src\\Components\\Buttons\\CustomButton.js":"10","C:\\projects\\crm_front\\src\\Components\\UserTopNav\\UserTopNav.js":"11","C:\\projects\\crm_front\\src\\Pages\\CompanyPages\\AllCompanyPage\\AllCompanyPage.js":"12","C:\\projects\\crm_front\\src\\Pages\\CompanyPages\\AddCompanyPage\\AddCompanyPage.js":"13","C:\\projects\\crm_front\\src\\Components\\Tables\\CustomTable.js":"14","C:\\projects\\crm_front\\src\\Store\\ConfigureStore.js":"15","C:\\projects\\crm_front\\src\\Reducers\\RootReducer.js":"16","C:\\projects\\crm_front\\src\\Reducers\\Auth.js":"17","C:\\projects\\crm_front\\src\\Actions\\index.js":"18","C:\\projects\\crm_front\\src\\Actions\\Auth.js":"19","C:\\projects\\crm_front\\src\\constants\\BackendConstants.js":"20","C:\\projects\\crm_front\\src\\Pages\\NotFoundPage\\NotFound.js":"21","C:\\projects\\crm_front\\src\\Pages\\FeaturePages\\AddFeaturePage\\AddFeaturePage.js":"22","C:\\projects\\crm_front\\src\\Pages\\PackPages\\AddPack\\AddPack.js":"23"},{"size":602,"mtime":1615468699385,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1613557448742,"results":"26","hashOfConfig":"25"},{"size":908,"mtime":1616145865708,"results":"27","hashOfConfig":"25"},{"size":2132,"mtime":1616074128429,"results":"28","hashOfConfig":"25"},{"size":453,"mtime":1616088237166,"results":"29","hashOfConfig":"25"},{"size":3577,"mtime":1616154282524,"results":"30","hashOfConfig":"25"},{"size":1450,"mtime":1615968794538,"results":"31","hashOfConfig":"25"},{"size":479,"mtime":1615968794200,"results":"32","hashOfConfig":"25"},{"size":286,"mtime":1615968794536,"results":"33","hashOfConfig":"25"},{"size":274,"mtime":1615886298400,"results":"34","hashOfConfig":"25"},{"size":1874,"mtime":1616146685066,"results":"35","hashOfConfig":"25"},{"size":1052,"mtime":1615968794779,"results":"36","hashOfConfig":"25"},{"size":2586,"mtime":1615968794612,"results":"37","hashOfConfig":"25"},{"size":10769,"mtime":1615968794534,"results":"38","hashOfConfig":"25"},{"size":1198,"mtime":1616087872035,"results":"39","hashOfConfig":"25"},{"size":115,"mtime":1615987654361,"results":"40","hashOfConfig":"25"},{"size":2159,"mtime":1616146551533,"results":"41","hashOfConfig":"25"},{"size":298,"mtime":1616077216578,"results":"42","hashOfConfig":"25"},{"size":1711,"mtime":1616146625734,"results":"43","hashOfConfig":"25"},{"size":48,"mtime":1616055546744,"results":"44","hashOfConfig":"25"},{"size":819,"mtime":1616086831679,"results":"45","hashOfConfig":"25"},{"size":2710,"mtime":1616154282661,"results":"46","hashOfConfig":"25"},{"size":5487,"mtime":1616154282707,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1ydvuum",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\crm_front\\src\\index.js",["99"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTable from \"react-table-6/react-table.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["100","101"],"C:\\projects\\crm_front\\src\\reportWebVitals.js",[],"C:\\projects\\crm_front\\src\\App.js",["102","103"],"C:\\projects\\crm_front\\src\\Pages\\Login.js",["104","105"],"import React, { useState } from 'react'\r\nimport './Login.css'\r\nimport Logo from \"../assets/pictures/logo-ilis.svg\"\r\nimport { connect } from 'react-redux';\r\nimport {LoginAuthAction} from \"../Actions/Auth\"\r\nfunction Login(props) {\r\nconst {user,login}=props;\r\nconst [userState,setUserState]=useState({});\r\n\r\nconst  login1=()=>{\r\nlogin(userState)\r\n}\r\nconst onChange = (attribute, value) => {\r\n   let user1=userState;\r\n   user1[attribute]=value;\r\n    \r\n    setUserState(user1);\r\n  };\r\n    return (\r\n        <div className=\"login\">\r\n         <div className=\"login_container\">\r\n\r\n         <div className=\"login_side\">\r\n             <div className=\"login_side_data\" >\r\n                <img className=\"login_side_data_picture\" src={Logo} />\r\n                 <p className=\"login_side_slogan\">salut sqfq  sqfsqf qs dsqsq qsdfsqf qssq f salut sqfq  sqfsqf qs dsqsq qsdfsqf qssq f salut sqfq  sqfsqf qs dsqsq qsdfsqf qssq f </p>\r\n                 \r\n             </div>\r\n         </div>\r\n            <div className=\"login_form\">\r\n                <label className=\"label_form_title\" >Se connecter</label>\r\n                <label className=\"label_field_indicator\" >Adresse électronique:</label>\r\n                <input type=\"email\" className=\"form-control\" value={userState.email} placeholder=\"Adresse électronique\" onChange={(e)=>{onChange(\"email\",e.target.value);}}></input>\r\n                <label className=\"label_field_indicator\" >Mot de passe:</label>\r\n                <input type=\"password\" className=\"form-control\"  value={userState.password} placeholder=\"Mot de passe\" onChange={(e)=>{onChange(\"password\",e.target.value);}} ></input>\r\n                <button type=\"submit\" className=\"login_button\" onClick={()=>{login1();}} >Se connecter</button>\r\n            </div>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    console.log(\"in state\",state);\r\nreturn {user:state};\r\n};\r\n\r\n\r\nconst mapDispatchProps=(dispatch)=>{\r\nreturn {login: (userState)=>{\r\n//console.log(\"userstate\",userState);\r\ndispatch(LoginAuthAction(userState))\r\n}\r\n}\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchProps)(Login)\r\n","C:\\projects\\crm_front\\src\\Pages\\AdminPages\\Home\\Home.js",[],"C:\\projects\\crm_front\\src\\Components\\NavBar\\AdminNavBar.js",["106"],"C:\\projects\\crm_front\\src\\Pages\\AdminPages\\CLientsManagment\\AddClient\\AddClient.js",[],"C:\\projects\\crm_front\\src\\Components\\Inputs\\Inputs.js",[],"C:\\projects\\crm_front\\src\\Components\\forms\\FormAdd.js",[],"C:\\projects\\crm_front\\src\\Components\\Buttons\\CustomButton.js",[],"C:\\projects\\crm_front\\src\\Components\\UserTopNav\\UserTopNav.js",["107","108"],"C:\\projects\\crm_front\\src\\Pages\\CompanyPages\\AllCompanyPage\\AllCompanyPage.js",[],"C:\\projects\\crm_front\\src\\Pages\\CompanyPages\\AddCompanyPage\\AddCompanyPage.js",["109"],"import { TextField } from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport React, { useState } from \"react\";\r\nimport CustomButton from \"../../../Components/Buttons/CustomButton\";\r\nimport FormAdd from \"../../../Components/forms/FormAdd\";\r\nimport CustomformInput from \"../../../Components/Inputs/Inputs\";\r\n\r\nexport default function AddCompanyPage() {\r\n  const [company, setCompany] = useState({});\r\n\r\n  const onChange = (attribute, value) => {\r\n    let company1 = company;\r\n    company1[attribute] = value;\r\n    setCompany(company1);\r\n  };\r\n\r\n  let FormContent = [\r\n    <TextField\r\n      id=\"title\"\r\n      className=\"col-md-6\"\r\n      variant=\"outlined\"\r\n      label=\"Nom de la société\"\r\n      value={company.title}\r\n      margin=\"normal\"\r\n      placeholder=\"Nom de la société\"\r\n      onChange={(event) => {\r\n        onChange(\"title\", event.target.value);\r\n      }}\r\n    />,\r\n    <TextField\r\n      className=\"col-md-6\"\r\n      id=\"description\"\r\n      label=\"Description de la société\"\r\n      placeholder=\"Description de la société\"\r\n      margin=\"normal\"\r\n      multiline\r\n      variant=\"outlined\"\r\n      value={company.description}\r\n      onChange={(event) => {\r\n        onChange(\"discription\", event.target.value);\r\n      }}\r\n    />,\r\n\r\n    <div\r\n      className=\"col-md-12\"\r\n      style={{\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <TextField\r\n        className=\"col-md-6\"\r\n        id=\"description\"\r\n        label=\"Description de la société\"\r\n        placeholder=\"Description de la société\"\r\n        margin=\"normal\"\r\n        multiline\r\n        variant=\"outlined\"\r\n        value={company.description}\r\n        onChange={(event) => {\r\n          onChange(\"discription\", event.target.value);\r\n        }}\r\n      />\r\n      <CustomButton\r\n        value=\"Ajouter\"\r\n        onClick={() => {\r\n          console.log(\"clicked : \", company);\r\n        }}\r\n      ></CustomButton>\r\n    </div>,\r\n    <DropzoneArea\r\n      className=\"col-md-6\"\r\n      acceptedFiles={[\"image/*\"]}\r\n      dropzoneText={\"Faites glisser et déposez une image ici ou cliquez\"}\r\n      onChange={(files) => console.log(\"Files:\", files)}\r\n      filesLimit={1}\r\n      classes=\"DropzoneArea\"\r\n      showAlerts={false}\r\n    />,\r\n    <CustomButton\r\n      value=\"Ajouter\"\r\n      onClick={() => {\r\n        console.log(\"clicked : \", company);\r\n      }}\r\n    ></CustomButton>,\r\n  ];\r\n\r\n  return (\r\n    <FormAdd Title=\"Ajout d'une société\" FormContent={FormContent}></FormAdd>\r\n  );\r\n}\r\n","C:\\projects\\crm_front\\src\\Components\\Tables\\CustomTable.js",["110"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./CustomTable.css\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    headCells,\r\n    alignhead,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={alignhead}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className=\"visuallyHidden\"></span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { numSelected, title } = props;\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar\r\n        className={\r\n          numSelected > 0 ? \" highlight\" : \"root-EnhancedTableToolbar \"\r\n        }\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography\r\n            className=\"title\"\r\n            color=\"inherit\"\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n          >\r\n            {numSelected} sélectionné\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            className=\"title\"\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n        )}\r\n\r\n        {numSelected > 0 ? (\r\n          <div className=\"containerBtn\">\r\n            <Tooltip title=\"Supprimer\">\r\n              <IconButton aria-label=\"supprimer\" onClick={handleClickOpen}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {numSelected == 1 ? (\r\n              <Tooltip title=\"Modifier\">\r\n                <IconButton aria-label=\"modifier\">\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </Toolbar>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable(props) {\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const { rows, headCells, title, alignRow, alignhead } = props;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Paper className=\"paper\">\r\n        <EnhancedTableToolbar numSelected={selected.length} title={title} />\r\n        <TableContainer>\r\n          <Table className=\"table\" size={\"medium\"}>\r\n            <EnhancedTableHead\r\n              alignhead={alignhead}\r\n              headCells={headCells}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      className=\"tableRow\"\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      {headCells.map((cell) => {\r\n                        return (\r\n                          <TableCell align={alignRow}>{row[cell.id]}</TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 75, 100]}\r\n          labelRowsPerPage=\"Lignes par page\"\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\projects\\crm_front\\src\\Store\\ConfigureStore.js",[],"C:\\projects\\crm_front\\src\\Reducers\\RootReducer.js",[],"C:\\projects\\crm_front\\src\\Reducers\\Auth.js",["111","112"],"C:\\projects\\crm_front\\src\\Actions\\index.js",[],"C:\\projects\\crm_front\\src\\Actions\\Auth.js",["113"],"C:\\projects\\crm_front\\src\\constants\\BackendConstants.js",[],"C:\\projects\\crm_front\\src\\Pages\\NotFoundPage\\NotFound.js",["114","115","116"],"C:\\projects\\crm_front\\src\\Pages\\FeaturePages\\AddFeaturePage\\AddFeaturePage.js",[],"C:\\projects\\crm_front\\src\\Pages\\PackPages\\AddPack\\AddPack.js",["117","118","119","120"],{"ruleId":"121","severity":1,"message":"122","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"121","severity":1,"message":"129","line":2,"column":17,"nodeType":"123","messageId":"124","endLine":2,"endColumn":21},{"ruleId":"121","severity":1,"message":"130","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":17},{"ruleId":"121","severity":1,"message":"131","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":25,"column":17,"nodeType":"134","endLine":25,"endColumn":71},{"ruleId":"121","severity":1,"message":"135","line":2,"column":23,"nodeType":"123","messageId":"124","endLine":2,"endColumn":29},{"ruleId":"121","severity":1,"message":"136","line":8,"column":20,"nodeType":"123","messageId":"124","endLine":8,"endColumn":34},{"ruleId":"132","severity":1,"message":"133","line":26,"column":46,"nodeType":"134","endLine":26,"endColumn":181},{"ruleId":"121","severity":1,"message":"137","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":162,"column":26,"nodeType":"140","messageId":"141","endLine":162,"endColumn":28},{"ruleId":"121","severity":1,"message":"142","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":69,"column":13,"nodeType":"145","messageId":"146","endLine":69,"endColumn":19},{"ruleId":"121","severity":1,"message":"142","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":20},{"ruleId":"121","severity":1,"message":"129","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":13,"column":9,"nodeType":"134","endLine":13,"endColumn":63},{"ruleId":"132","severity":1,"message":"133","line":15,"column":13,"nodeType":"134","endLine":17,"endColumn":13},{"ruleId":"121","severity":1,"message":"147","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":17},{"ruleId":"121","severity":1,"message":"148","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":19},{"ruleId":"121","severity":1,"message":"149","line":10,"column":8,"nodeType":"123","messageId":"124","endLine":10,"endColumn":17},{"ruleId":"121","severity":1,"message":"150","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":24},"no-unused-vars","'ReactTable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'Link' is defined but never used.","'AddClient' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'CustomformInput' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'FormLabel' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]