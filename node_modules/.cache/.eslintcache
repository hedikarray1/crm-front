[{"D:\\Agence 2i works\\front\\src\\index.js":"1","D:\\Agence 2i works\\front\\src\\reportWebVitals.js":"2","D:\\Agence 2i works\\front\\src\\App.js":"3","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\Home\\Home.js":"4","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\CLientsManagment\\AddClient\\AddClient.js":"5","D:\\Agence 2i works\\front\\src\\Components\\forms\\FormAdd.js":"6","D:\\Agence 2i works\\front\\src\\Components\\Inputs\\Inputs.js":"7","D:\\Agence 2i works\\front\\src\\Components\\NavBar\\AdminNavBar.js":"8","D:\\Agence 2i works\\front\\src\\Components\\Buttons\\CustomButton.js":"9","D:\\Agence 2i works\\front\\src\\Components\\Tables\\CustomTable.js":"10","D:\\Agence 2i works\\front\\src\\Components\\UserTopNav\\UserTopNav.js":"11","D:\\Agence 2i works\\front\\src\\Store\\ConfigureStore.js":"12","D:\\Agence 2i works\\front\\src\\Actions\\Auth.js":"13","D:\\Agence 2i works\\front\\src\\Reducers\\RootReducer.js":"14","D:\\Agence 2i works\\front\\src\\Actions\\index.js":"15","D:\\Agence 2i works\\front\\src\\constants\\BackendConstants.js":"16","D:\\Agence 2i works\\front\\src\\Reducers\\Auth.js":"17","D:\\Agence 2i works\\front\\src\\Reducers\\Feature.js":"18","D:\\Agence 2i works\\front\\src\\Actions\\Feature.js":"19","D:\\Agence 2i works\\front\\src\\Components\\CurrentUserPersonalInfo\\CurrentUserPersonnalInfo.js":"20","D:\\Agence 2i works\\front\\src\\Components\\CurrentUserCompanyInfo\\CurrentUserCompanyInfo.js":"21","D:\\Agence 2i works\\front\\src\\Components\\Cards\\CustomCards.js":"22","D:\\Agence 2i works\\front\\src\\Pages\\ClientPages\\ProductPages\\AddProductPage\\AddProductPage.js":"23","D:\\Agence 2i works\\front\\src\\Pages\\ClientPages\\ProductPages\\AllProductsPage\\AllProductsPage.js":"24","D:\\Agence 2i works\\front\\src\\Components\\List\\ThumbListView\\ThumbListView.js":"25","D:\\Agence 2i works\\front\\src\\Components\\List\\ImageListView\\ImageListView.js":"26","D:\\Agence 2i works\\front\\src\\Components\\CustomBootstrap\\CustomBootstrap.js":"27","D:\\Agence 2i works\\front\\src\\Components\\List\\ListPageHeading\\ListPageHeading.js":"28","D:\\Agence 2i works\\front\\src\\assets\\svg\\index.js":"29","D:\\Agence 2i works\\front\\src\\assets\\svg\\ThumbListIcon.js":"30","D:\\Agence 2i works\\front\\src\\assets\\svg\\ImageListIcon.js":"31","D:\\Agence 2i works\\front\\src\\assets\\svg\\DataListIcon.js":"32","D:\\Agence 2i works\\front\\src\\assets\\svg\\MenuIcon.js":"33","D:\\Agence 2i works\\front\\src\\assets\\svg\\MobileMenuIcon.js":"34","D:\\Agence 2i works\\front\\src\\Reducers\\Company.js":"35","D:\\Agence 2i works\\front\\src\\Actions\\Company.js":"36","D:\\Agence 2i works\\front\\src\\Components\\Tables\\CollapsibleTable.js":"37","D:\\Agence 2i works\\front\\src\\Data\\ProductData.js":"38","D:\\Agence 2i works\\front\\src\\Pages\\PublicPages\\NotFoundPage\\NotFound.js":"39","D:\\Agence 2i works\\front\\src\\Pages\\PublicPages\\LoginPage\\Login.js":"40","D:\\Agence 2i works\\front\\src\\Pages\\PublicPages\\ProfilePage\\Profile.js":"41","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\CompanyPages\\AllCompanyPage\\AllCompanyPage.js":"42","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\CompanyPages\\AddCompanyPage\\AddCompanyPage.js":"43","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\FeaturePages\\AddFeaturePage\\AddFeaturePage.js":"44","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\FeaturePages\\AllFeaturePage\\AllFeaturePage.js":"45","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\PackPages\\AddPack\\AddPack.js":"46","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\PackPages\\AllPackPage\\AllPackPage.js":"47","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\LicencePages\\AddLicencePage\\AddLicencePage.js":"48","D:\\Agence 2i works\\front\\src\\Pages\\ClientPages\\ProductPages\\DetailProductPage\\DetailProductPage.js":"49","D:\\Agence 2i works\\front\\src\\Components\\carousel\\GlideComponentThumbs.js":"50","D:\\Agence 2i works\\front\\src\\Reducers\\Product.js":"51","D:\\Agence 2i works\\front\\src\\Actions\\Product.js":"52","D:\\Agence 2i works\\front\\src\\Reducers\\Category.js":"53","D:\\Agence 2i works\\front\\src\\Actions\\Category.js":"54","D:\\Agence 2i works\\front\\src\\Reducers\\Tags.js":"55","D:\\Agence 2i works\\front\\src\\Actions\\Tags.js":"56","D:\\Agence 2i works\\front\\src\\Pages\\CaissePage\\CaissePage.js":"57","D:\\Agence 2i works\\front\\src\\Reducers\\Customer.js":"58","D:\\Agence 2i works\\front\\src\\Reducers\\PictureWordPress.js":"59","D:\\Agence 2i works\\front\\src\\Pages\\CustomersPages\\CustomersList\\CustomersList.js":"60","D:\\Agence 2i works\\front\\src\\Pages\\CategoryPages\\CategoryList\\CategoryList.js":"61","D:\\Agence 2i works\\front\\src\\Components\\CartCaisse\\CartCaisse.js":"62","D:\\Agence 2i works\\front\\src\\Components\\AllProductsCaisse\\AllProductsCaisse.js":"63","D:\\Agence 2i works\\front\\src\\Components\\AllUsersCardCaisse\\AllUsersListCaisse.js":"64","D:\\Agence 2i works\\front\\src\\Actions\\PictureWordPress.js":"65","D:\\Agence 2i works\\front\\src\\Components\\ProductCaisse\\ProductCaisse.js":"66","D:\\Agence 2i works\\front\\src\\Components\\ProductCart\\ProductCart.js":"67","D:\\Agence 2i works\\front\\src\\Actions\\Customer.js":"68"},{"size":679,"mtime":1616759451434,"results":"69","hashOfConfig":"70"},{"size":375,"mtime":1615899702889,"results":"71","hashOfConfig":"70"},{"size":895,"mtime":1619621333130,"results":"72","hashOfConfig":"70"},{"size":438,"mtime":1616666864412,"results":"73","hashOfConfig":"70"},{"size":7777,"mtime":1616402846245,"results":"74","hashOfConfig":"70"},{"size":281,"mtime":1616161778716,"results":"75","hashOfConfig":"70"},{"size":479,"mtime":1615904945865,"results":"76","hashOfConfig":"70"},{"size":6554,"mtime":1619621622910,"results":"77","hashOfConfig":"70"},{"size":595,"mtime":1616152339447,"results":"78","hashOfConfig":"70"},{"size":10769,"mtime":1615903381010,"results":"79","hashOfConfig":"70"},{"size":1894,"mtime":1616517307861,"results":"80","hashOfConfig":"70"},{"size":1204,"mtime":1619606531000,"results":"81","hashOfConfig":"70"},{"size":2088,"mtime":1616667621329,"results":"82","hashOfConfig":"70"},{"size":472,"mtime":1619606688236,"results":"83","hashOfConfig":"70"},{"size":3879,"mtime":1619688638533,"results":"84","hashOfConfig":"70"},{"size":394,"mtime":1619609435537,"results":"85","hashOfConfig":"70"},{"size":1518,"mtime":1616517327804,"results":"86","hashOfConfig":"70"},{"size":2010,"mtime":1616495380332,"results":"87","hashOfConfig":"70"},{"size":2839,"mtime":1616517055693,"results":"88","hashOfConfig":"70"},{"size":2695,"mtime":1616517307856,"results":"89","hashOfConfig":"70"},{"size":1344,"mtime":1616664471875,"results":"90","hashOfConfig":"70"},{"size":235,"mtime":1616517307694,"results":"91","hashOfConfig":"70"},{"size":27360,"mtime":1619693252571,"results":"92","hashOfConfig":"70"},{"size":4774,"mtime":1619427354612,"results":"93","hashOfConfig":"70"},{"size":3598,"mtime":1618478029255,"results":"94","hashOfConfig":"70"},{"size":2471,"mtime":1618560954455,"results":"95","hashOfConfig":"70"},{"size":295,"mtime":1616603804974,"results":"96","hashOfConfig":"70"},{"size":4036,"mtime":1618840970491,"results":"97","hashOfConfig":"70"},{"size":298,"mtime":1559610044000,"results":"98","hashOfConfig":"70"},{"size":1122,"mtime":1559610044000,"results":"99","hashOfConfig":"70"},{"size":881,"mtime":1559610044000,"results":"100","hashOfConfig":"70"},{"size":542,"mtime":1559610044000,"results":"101","hashOfConfig":"70"},{"size":686,"mtime":1561723764000,"results":"102","hashOfConfig":"70"},{"size":359,"mtime":1559610044000,"results":"103","hashOfConfig":"70"},{"size":735,"mtime":1617009239661,"results":"104","hashOfConfig":"70"},{"size":917,"mtime":1616664471688,"results":"105","hashOfConfig":"70"},{"size":4981,"mtime":1616665409249,"results":"106","hashOfConfig":"70"},{"size":38280,"mtime":1616759213844,"results":"107","hashOfConfig":"70"},{"size":801,"mtime":1616667771839,"results":"108","hashOfConfig":"70"},{"size":2491,"mtime":1616667660395,"results":"109","hashOfConfig":"70"},{"size":1501,"mtime":1616667554715,"results":"110","hashOfConfig":"70"},{"size":1055,"mtime":1616667535243,"results":"111","hashOfConfig":"70"},{"size":3731,"mtime":1616667832093,"results":"112","hashOfConfig":"70"},{"size":3527,"mtime":1616667848094,"results":"113","hashOfConfig":"70"},{"size":3181,"mtime":1616667447222,"results":"114","hashOfConfig":"70"},{"size":6626,"mtime":1618916177509,"results":"115","hashOfConfig":"70"},{"size":7631,"mtime":1616667516310,"results":"116","hashOfConfig":"70"},{"size":2396,"mtime":1616667465798,"results":"117","hashOfConfig":"70"},{"size":9326,"mtime":1617014234437,"results":"118","hashOfConfig":"70"},{"size":8306,"mtime":1616759290649,"results":"119","hashOfConfig":"70"},{"size":3056,"mtime":1619690149299,"results":"120","hashOfConfig":"70"},{"size":5142,"mtime":1619691049428,"results":"121","hashOfConfig":"70"},{"size":1677,"mtime":1619606725006,"results":"122","hashOfConfig":"70"},{"size":1661,"mtime":1619606858839,"results":"123","hashOfConfig":"70"},{"size":1031,"mtime":1619084556353,"results":"124","hashOfConfig":"70"},{"size":1593,"mtime":1619105089961,"results":"125","hashOfConfig":"70"},{"size":4057,"mtime":1619606530975,"results":"126","hashOfConfig":"70"},{"size":1752,"mtime":1619688777603,"results":"127","hashOfConfig":"70"},{"size":1674,"mtime":1619606530980,"results":"128","hashOfConfig":"70"},{"size":47160,"mtime":1619606530979,"results":"129","hashOfConfig":"70"},{"size":23687,"mtime":1619606530977,"results":"130","hashOfConfig":"70"},{"size":755,"mtime":1619606530758,"results":"131","hashOfConfig":"70"},{"size":718,"mtime":1619606530747,"results":"132","hashOfConfig":"70"},{"size":1371,"mtime":1619606530751,"results":"133","hashOfConfig":"70"},{"size":3113,"mtime":1619606530733,"results":"134","hashOfConfig":"70"},{"size":1708,"mtime":1619606530932,"results":"135","hashOfConfig":"70"},{"size":1017,"mtime":1619606530974,"results":"136","hashOfConfig":"70"},{"size":5049,"mtime":1619621683863,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"17ck4og",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"140"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"140"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"140"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"140"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"140"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"140"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"140"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"140"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"140"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"140"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"140"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"140"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"140"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"140"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"140"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"140"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"140"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"140"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"140"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"140"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"140"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"140"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"140"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"140"},"D:\\Agence 2i works\\front\\src\\index.js",[],["307","308"],"D:\\Agence 2i works\\front\\src\\reportWebVitals.js",[],"D:\\Agence 2i works\\front\\src\\App.js",["309"],"import \"./App.css\";\r\nimport { Route, Link, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./Store/ConfigureStore\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport Home from \"./Pages/AdminPages/Home/Home\";\r\nimport Login from \"./Pages/PublicPages/LoginPage/Login\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/home\" component={Home}></Route>\r\n              <Route path=\"/\" exact component={Home}></Route>\r\n              <Route path=\"/login\" exact component={Login}></Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\Home\\Home.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\CLientsManagment\\AddClient\\AddClient.js",["310","311","312","313","314","315","316","317"],"import {\r\n  FormControl,\r\n  FormControlLabel,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  CustomButton,\r\n  CustomFormButton,\r\n} from \"../../../../Components/Buttons/CustomButton\";\r\nimport FormAdd from \"../../../../Components/forms/FormAdd\";\r\nimport CustomformInput from \"../../../../Components/Inputs/Inputs\";\r\nimport \"./AddClient.css\";\r\nfunction AddClient() {\r\n  const [client, setClient] = useState({});\r\n  const [showPassword, setshowPassword] = useState(false);\r\n  const [showSlectCompany, setshowSlectCompany] = useState(false);\r\n\r\n  const onChange = (attribute, value) => {\r\n    let client1 = client;\r\n    client1[attribute] = value;\r\n    setClient(client1);\r\n    if (attribute == \"role\" && (value == \"admin\" || value == \"employee\")) {\r\n      setshowSlectCompany(true);\r\n    }\r\n\r\n    if (attribute == \"role\" && value == \"super_admin\") {\r\n      setshowSlectCompany(false);\r\n    }\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setshowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <FormAdd Title=\"Ajout d'un client\" className=\"col-md-6\">\r\n      <div>\r\n        <TextField\r\n          id=\"firstname\"\r\n          required\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Nom\"\r\n          value={client.firstname}\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"firstname\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"lastname\"\r\n          required\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Prénom\"\r\n          value={client.lastname}\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"lastname\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"email\"\r\n          required\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          value={client.email}\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"email\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <FormControl\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">\r\n            Mots de passe\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            style={{ width: \"100%\" }}\r\n            id=\"outlined-adornment-password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={client.password}\r\n            onChange={(event) => {\r\n              onChange(\"password\", event.target.value);\r\n            }}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={70}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">\r\n            Mots de passe\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            style={{ width: \"100%\" }}\r\n            id=\"outlined-adornment-password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={client.password}\r\n            onChange={(event) => {\r\n              onChange(\"password\", event.target.value);\r\n            }}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={70}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"birthdate\"\r\n          required\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Date de naissance\"\r\n          type=\"date\"\r\n          value={client.birthdate}\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"birthdate\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"phone\"\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Téléphone\"\r\n          value={client.phone}\r\n          type=\"number\"\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"phone\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          margin=\"normal\"\r\n        >\r\n          <InputLabel>Role</InputLabel>\r\n          <Select\r\n            native\r\n            value={client.role}\r\n            onChange={(event) => {\r\n              onChange(\"role\", event.target.value);\r\n            }}\r\n            label=\"role\"\r\n            inputProps={{\r\n              name: \"role\",\r\n              id: \"outlined-pack-native-simple\",\r\n            }}\r\n          >\r\n            <option aria-label=\"None\" value=\"\" />\r\n            <option value=\"super_admin\">Administrateur 2i</option>\r\n            <option value=\"admin\">Administrateur</option>\r\n            <option value=\"employee\">Employé</option>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      {showSlectCompany ? (\r\n        <div>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            margin=\"normal\"\r\n          >\r\n            <InputLabel>Societé</InputLabel>\r\n            <Select\r\n              native\r\n              value={client.company}\r\n              onChange={(event) => {\r\n                onChange(\"company\", event.target.value);\r\n              }}\r\n              label=\"company\"\r\n              inputProps={{\r\n                name: \"company\",\r\n                id: \"outlined-company-native-simple\",\r\n              }}\r\n            >\r\n              <option aria-label=\"None\" value=\"\" />\r\n              <option value=\"2i\">2i</option>\r\n              <option value=\"tresors\">tresors</option>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      ) : null}\r\n      <div>\r\n        <DropzoneArea\r\n          acceptedFiles={[\"image/*\"]}\r\n          dropzoneText={\"Faites glisser et déposez une image ici ou cliquez\"}\r\n          onChange={(files) => console.log(\"Files:\", files)}\r\n          filesLimit={1}\r\n          classes=\"DropzoneArea\"\r\n          showAlerts={false}\r\n        />\r\n      </div>\r\n      <div>\r\n        <CustomFormButton\r\n          value=\"Ajouter\"\r\n          width=\"50%\"\r\n          onClick={() => {\r\n            console.log(\"ajouter :\", client);\r\n          }}\r\n        ></CustomFormButton>\r\n      </div>\r\n    </FormAdd>\r\n  );\r\n}\r\n\r\nexport default AddClient;\r\n","D:\\Agence 2i works\\front\\src\\Components\\forms\\FormAdd.js",[],"D:\\Agence 2i works\\front\\src\\Components\\Inputs\\Inputs.js",[],"D:\\Agence 2i works\\front\\src\\Components\\NavBar\\AdminNavBar.js",["318"],"import React, { useState } from \"react\";\r\nimport { Link, Route, Router, Switch } from \"react-router-dom\";\r\nimport \"./AdminNavBar.css\";\r\nimport * as IoiIcons from \"react-icons/io\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport UserTopNav from \"../UserTopNav/UserTopNav\";\r\n\r\nimport CustomersList from \"../../Pages/CustomersPages/CustomersList/CustomersList\";\r\nimport CategoryList from \"../../Pages/CategoryPages/CategoryList/CategoryList\";\r\nimport AddClient from \"../../Pages/AdminPages/CLientsManagment/AddClient/AddClient\";\r\nimport Login from \"../../Pages/PublicPages/LoginPage/Login\";\r\nimport AllCompanyPage from \"../../Pages/AdminPages/CompanyPages/AllCompanyPage/AllCompanyPage\";\r\nimport AddCompanyPage from \"../../Pages/AdminPages/CompanyPages/AddCompanyPage/AddCompanyPage\";\r\nimport AddFeaturePage from \"../../Pages/AdminPages/FeaturePages/AddFeaturePage/AddFeaturePage\";\r\nimport AddPack from \"../../Pages/AdminPages/PackPages/AddPack/AddPack\";\r\nimport AllPackPage from \"../../Pages/AdminPages/PackPages/AllPackPage/AllPackPage\";\r\nimport AddLicencePage from \"../../Pages/AdminPages/LicencePages/AddLicencePage/AddLicencePage\";\r\nimport AllFeaturePage from \"../../Pages/AdminPages/FeaturePages/AllFeaturePage/AllFeaturePage\";\r\nimport Profile from \"../../Pages/PublicPages/ProfilePage/Profile\";\r\nimport AddProductPage from \"../../Pages/ClientPages/ProductPages/AddProductPage/AddProductPage\";\r\nimport AllProductsPage from \"../../Pages/ClientPages/ProductPages/AllProductsPage/AllProductsPage\";\r\nimport DetailProductPage from \"../../Pages/ClientPages/ProductPages/DetailProductPage/DetailProductPage\";\r\n\r\nfunction AdminNavBar() {\r\n  const [AdminSideBar, setAdminSideBar] = useState(false);\r\n  const showSideBar = () => {\r\n    setAdminSideBar(!AdminSideBar);\r\n  };\r\n\r\n  return (\r\n    <div style={{ overflow: \"scroll\" }}>\r\n      <div className=\"top-bar-menu\">\r\n        <Link to=\"#\" className=\"\">\r\n          <IoiIcons.IoIosMenu\r\n            size=\"25\"\r\n            className=\"toggle_menu_sidebar\"\r\n            onClick={() => {\r\n              showSideBar();\r\n            }}\r\n          ></IoiIcons.IoIosMenu>\r\n        </Link>\r\n        <UserTopNav></UserTopNav>\r\n      </div>\r\n\r\n      <nav className={AdminSideBar ? \"nav-menu active\" : \"nav-menu\"}>\r\n        <ul className=\"menu-bars-ul\">\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/addClient\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>Clients</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AddPack\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>AddPack</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AddProductPage\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>Add Product</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AllProductsPage\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>All Products</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AllFeaturePage\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>AllFeaturePage</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AllCompany\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>Sociétés</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AddCompanyPage\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>add Sociétés</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AddFeaturePage\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>AddFeaturePage</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AllPack\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>AllPack</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/home/AddLicencePage\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>AddLicencePage</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/login\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />{\" \"}\r\n              <span>login</span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <div\r\n        className={AdminSideBar ? \"pages-content\" : \"pages-content hiddenslide\"}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/home/addClient\" component={AddClient}></Route>\r\n          <Route path=\"/home/login\" component={Login}></Route>\r\n          <Route path=\"/home/AllCompany\" component={AllCompanyPage}></Route>\r\n          <Route path=\"/home/AddCompanyPage\" component={AddCompanyPage}></Route>\r\n          <Route path=\"/home/AddFeaturePage\" component={AddFeaturePage}></Route>\r\n          <Route path=\"/home/AddPack\" component={AddPack}></Route>\r\n          <Route path=\"/home/AllPack\" component={AllPackPage}></Route>\r\n\r\n          <Route path=\"/home/AddLicencePage\" component={AddLicencePage}></Route>\r\n          <Route path=\"/home/AllFeaturePage\" component={AllFeaturePage}></Route>\r\n          <Route path=\"/home/profil\" component={Profile}></Route>\r\n          <Route path=\"/home/customers\" component={CustomersList}></Route>\r\n          <Route path=\"/home/categories\" component={CategoryList}></Route>\r\n          <Route path=\"/home/AddProductPage\" component={AddProductPage}></Route>\r\n          <Route\r\n            path=\"/home/DetailProductPage\"\r\n            component={DetailProductPage}\r\n          ></Route>\r\n          <Route\r\n            path=\"/home/AllProductsPage\"\r\n            component={AllProductsPage}\r\n          ></Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminNavBar;\r\n","D:\\Agence 2i works\\front\\src\\Components\\Buttons\\CustomButton.js",[],"D:\\Agence 2i works\\front\\src\\Components\\Tables\\CustomTable.js",["319"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./CustomTable.css\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    headCells,\r\n    alignhead,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={alignhead}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className=\"visuallyHidden\"></span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { numSelected, title } = props;\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar\r\n        className={\r\n          numSelected > 0 ? \" highlight\" : \"root-EnhancedTableToolbar \"\r\n        }\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography\r\n            className=\"title\"\r\n            color=\"inherit\"\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n          >\r\n            {numSelected} sélectionné\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            className=\"title\"\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n        )}\r\n\r\n        {numSelected > 0 ? (\r\n          <div className=\"containerBtn\">\r\n            <Tooltip title=\"Supprimer\">\r\n              <IconButton aria-label=\"supprimer\" onClick={handleClickOpen}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {numSelected == 1 ? (\r\n              <Tooltip title=\"Modifier\">\r\n                <IconButton aria-label=\"modifier\">\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </Toolbar>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable(props) {\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const { rows, headCells, title, alignRow, alignhead } = props;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Paper className=\"paper\">\r\n        <EnhancedTableToolbar numSelected={selected.length} title={title} />\r\n        <TableContainer>\r\n          <Table className=\"table\" size={\"medium\"}>\r\n            <EnhancedTableHead\r\n              alignhead={alignhead}\r\n              headCells={headCells}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      className=\"tableRow\"\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      {headCells.map((cell) => {\r\n                        return (\r\n                          <TableCell align={alignRow}>{row[cell.id]}</TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 75, 100]}\r\n          labelRowsPerPage=\"Lignes par page\"\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Components\\UserTopNav\\UserTopNav.js",["320","321"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { LogoutAuth } from '../../Actions/Auth';\r\nimport \"./UserTopNav.css\"\r\nfunction UserTopNav(props) {\r\nconst [AccountDropDown,setAccountDropDown]=useState(false);\r\nconst [CurrentUser,setCurrentUser]=useState({firstname:\"hedi\",lastname:\"karray\",role:\"admin\"});\r\n\r\nconst history=useHistory();\r\n\r\n    const showAccountDropDown=()=>{\r\n       setAccountDropDown(!AccountDropDown);\r\n      \r\n    }\r\n    return (\r\n       <>\r\n             <div className=\"account-component\" onClick={()=>{\r\n            \r\n             showAccountDropDown();\r\n            }}>\r\n            \r\n            <div className=\"username\">\r\n            {CurrentUser.firstname+\" \"+CurrentUser.lastname}\r\n            </div>\r\n            <div className=\"account-picture\"><img className=\"user-picture\" src=\"https://www.atlassian.com/fr/dam/jcr:ba03a215-2f45-40f5-8540-b2015223c918/Max-R_Headshot%20(1).jpg\"></img> </div>\r\n         \r\n             \r\n            \r\n        </div> \r\n           <ul className={AccountDropDown? 'drop-down': \"drop-down hidden\"}>\r\n           <li className=\"drop-down-choices\">Mon profil</li>\r\n           <li className=\"drop-down-choices\">Déconnexion</li>\r\n           <li className=\"drop-down-choices\">Mon profil</li>\r\n           <li className=\"drop-down-choices big\"  onClick={()=>{\r\n             \r\n               props.logout()\r\n               history.push(\"/login\");\r\n               }}>Déconnexion</li>\r\n       </ul>\r\n       </>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchProps=(dispatch)=>{\r\n    return {\r\n        logout: ()=>{\r\n   \r\n    dispatch(LogoutAuth())\r\n    }\r\n    }\r\n    };\r\n\r\n    const mapStateToProps=(state)=>{\r\n       // console.log(\"in state\",state);\r\n    return {};\r\n    };\r\n    \r\nexport default connect(mapStateToProps,mapDispatchProps)(UserTopNav) \r\n","D:\\Agence 2i works\\front\\src\\Store\\ConfigureStore.js",[],"D:\\Agence 2i works\\front\\src\\Actions\\Auth.js",["322"],"import axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SERVER_URL } from \"../constants/BackendConstants\";\r\n\r\nimport * as ActionTypes from \"./index\";\r\n\r\nexport const LoginAuthAction = (userState) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let data = new FormData();\r\n      data.append(\"email\", userState.email);\r\n      data.append(\"password\", userState.password);\r\n      axios\r\n        .post(SERVER_URL + \"login\", data)\r\n        .then((response) => {\r\n          console.log(\"login response: \", response.data.Authorization);\r\n          dispatch({\r\n            type: ActionTypes.LOGIN_SUCCESS,\r\n            payload: { authorization: response.data.Authorization },\r\n          });\r\n          dispatch(GetCurrentUserDataWithToken(response.data.Authorization));\r\n        })\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: ActionTypes.LOGIN_FAILURE,\r\n            payload: {\r\n              errors: \"addresse électronique ou mot de passe incorrect\",\r\n            },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ActionTypes.LOGIN_FAILURE,\r\n        payload: { errors: \"addresse électronique ou mot de passe incorrect\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const LogoutAuth = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: ActionTypes.LOGOUT });\r\n  };\r\n};\r\n\r\nexport const GetCurrentUserDataWithToken = (auth) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      axios\r\n        .get(SERVER_URL + \"api/users/profile\", {\r\n          headers: { Authorization: auth },\r\n        })\r\n        .then((response) => {\r\n          dispatch({\r\n            type: ActionTypes.GET_CURRENT_USER_SUCCESS,\r\n            payload: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: ActionTypes.GET_CURRENT_USER_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ActionTypes.GET_CURRENT_USER_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n","D:\\Agence 2i works\\front\\src\\Reducers\\RootReducer.js",[],"D:\\Agence 2i works\\front\\src\\Actions\\index.js",[],"D:\\Agence 2i works\\front\\src\\constants\\BackendConstants.js",[],"D:\\Agence 2i works\\front\\src\\Reducers\\Auth.js",["323","324"],"import { useHistory } from \"react-router\";\r\nimport * as ActionTypes from \"../Actions/index\";\r\n\r\nconst authtate = {\r\n  isLoggedIn: false,\r\n  Authorization: localStorage.getItem(\"Authorization\"),\r\n  current_user: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function Auth(state = authtate, action = {}) {\r\n  switch (action.type) {\r\n    case ActionTypes.LOGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errors: action.error ? action.payload.errors : null,\r\n      };\r\n\r\n    case ActionTypes.LOGIN_SUCCESS:\r\n      localStorage.setItem(\"Authorization\", action.payload.authorization);\r\n      return {\r\n        ...state,\r\n        Authorization: action.payload.authorization,\r\n        loading: false,\r\n        isLoggedIn: true,\r\n\r\n        errors: action.error ? action.payload.errors : null,\r\n      };\r\n    case ActionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isLoggedIn: false,\r\n        errors: action.payload.errors,\r\n      };\r\n\r\n    case ActionTypes.GET_CURRENT_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current_user: action.payload,\r\n\r\n        loading: false,\r\n        isLoggedIn: true,\r\n\r\n        errors: action.error ? action.payload.errors : null,\r\n      };\r\n    case ActionTypes.GET_CURRENT_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n\r\n        errors: action.payload.errors,\r\n      };\r\n\r\n    case ActionTypes.LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Reducers\\Feature.js",[],"D:\\Agence 2i works\\front\\src\\Actions\\Feature.js",["325"],"import axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SERVER_URL } from \"../constants/BackendConstants\";\r\nimport * as ActionTypes from \"./index\";\r\n\r\nexport const GetAllFeatures = (auth) => {\r\n  return async (dispatch) => {\r\n    console.log(\"in reQUEST GET ALL FEATURES\");\r\n    try {\r\n      axios\r\n        .get(SERVER_URL + \"api/features/get_all\", {\r\n          headers: { Authorization: auth },\r\n        })\r\n        .then((response) => {\r\n          console.log(\"GetAllFeatures success data :\", response.data);\r\n          dispatch({\r\n            type: ActionTypes.GET_ALL_FEATURE_SUCCESS,\r\n            payload: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.GET_ALL_FEATURE_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.GET_ALL_FEATURE_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const GetAllGroupeName = (auth) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      axios\r\n        .get(SERVER_URL + \"api/features/get_all_groupe_name\", {\r\n          headers: { Authorization: auth },\r\n        })\r\n        .then((response) => {\r\n          console.log(\"GetAllGroupeName success data :\", response.data);\r\n          dispatch({\r\n            type: ActionTypes.GET_ALL_GROUP_NAME_SUCCESS,\r\n            payload: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.GET_ALL_GROUP_NAME_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.GET_ALL_GROUP_NAME_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const AddFeature = (auth, data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      axios\r\n        .post(SERVER_URL + \"api/features/create\", data, {\r\n          headers: { Authorization: auth },\r\n        })\r\n        .then((response) => {\r\n          console.log(\"success data :\", response.data);\r\n          dispatch({\r\n            type: ActionTypes.ADD_FEATURE_SUCCESS,\r\n            payload: response.data,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.ADD_FEATURE_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.ADD_FEATURE_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n","D:\\Agence 2i works\\front\\src\\Components\\CurrentUserPersonalInfo\\CurrentUserPersonnalInfo.js",["326","327"],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { USER_PICTURE_URL } from '../../constants/BackendConstants'\r\nimport CustomCards from '../Cards/CustomCards'\r\nimport \"./CurrentUserPersonnalInfo.css\"\r\nfunction CurrentUserPersonnalInfo(props) {\r\n\r\n    function formatDate(date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const [currentUser,setCurrentUser]=useState(props.user)\r\n\r\n    return (\r\n<div className=\"current-page\">\r\n<CustomCards>\r\n            <div className=\"user-picture-username\">\r\n                <img className=\"user-picture\" src={USER_PICTURE_URL+currentUser.picture}></img>\r\n                <div className=\"user-username\">\r\n                {currentUser.firstname+ \" \"+currentUser.lastname}\r\n                </div>\r\n            </div>\r\n            <div className=\"user-infos\">\r\n            <div className=\"single-user-info\">\r\n                <div className=\"single-user-info-label\">Nom:</div>\r\n                <div className=\"single-user-info-value\">{currentUser.lastname}</div>\r\n\r\n            </div>\r\n\r\n            <div className=\"single-user-info\">\r\n                <div className=\"single-user-info-label\">Prénom:</div>\r\n                <div className=\"single-user-info-value\">{currentUser.firstname}</div>\r\n\r\n            </div>\r\n            <div className=\"single-user-info\">\r\n                <div className=\"single-user-info-label\">Adresse électronique:</div>\r\n                <div className=\"single-user-info-value\">{currentUser.email}</div>\r\n\r\n            </div>\r\n            <div className=\"single-user-info\">\r\n                <div className=\"single-user-info-label\">Date de naissance:</div>\r\n                <div className=\"single-user-info-value\">{formatDate(Date.parse(currentUser.birthdate))}</div>\r\n\r\n            </div>\r\n            <div className=\"single-user-info\">\r\n                <div className=\"single-user-info-label\">Téléphone:</div>\r\n                <div className=\"single-user-info-value\">{currentUser.phone}</div>\r\n\r\n            </div>\r\n            </div>\r\n        </CustomCards>\r\n</div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(\"in state\",state);\r\n    return { user: state.Auth.current_user };\r\n};\r\n\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {}\r\n\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(CurrentUserPersonnalInfo)\r\n","D:\\Agence 2i works\\front\\src\\Components\\CurrentUserCompanyInfo\\CurrentUserCompanyInfo.js",["328","329","330","331","332","333"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport CustomCards from '../Cards/CustomCards'\r\nimport \"./CurrentUserCompanyInfo.css\"\r\nimport NoContent from \"../../assets/pictures/bad-review.svg\"\r\nimport {getMyCompany} from \"../../Actions/Company\"\r\n\r\nfunction CurrentUserCompanyInfo(props) {\r\nconst {token,user}=props;\r\nconst [MyCompany,setMyCompany]=useState(props.my_company)\r\n//const role=props.user.current_user.role;\r\nuseEffect(() => {\r\n    props.getMyCompany(token);\r\n    \r\n  }, []);\r\n\r\n    return (\r\n        <div className=\"current-page\">\r\n{props.my_company!=null?<CustomCards>\r\n<div className=\"my-company-infos\">\r\n    <img></img>\r\n</div>\r\n</CustomCards>:<CustomCards>\r\n    <img className=\"no-content-picture\" src={NoContent}></img>\r\n<p className=\"no-content-text\"> Vous n'appartenez à aucune société... </p>\r\n</CustomCards>}\r\n</div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(\"in state\",state);\r\n    return { user: state.Auth.current_user,token: state.Auth.Authorization,my_company:state.Company.my_company };\r\n};\r\n\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        getMyCompany:(token)=>{\r\n            dispatch(getMyCompany(token))\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(CurrentUserCompanyInfo)\r\n","D:\\Agence 2i works\\front\\src\\Components\\Cards\\CustomCards.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\ClientPages\\ProductPages\\AddProductPage\\AddProductPage.js",["334","335","336","337","338","339","340","341","342","343"],"import { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FormAdd from \"../../../../Components/forms/FormAdd\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { ClientGetAllCategories } from \"../../../../Actions/Category\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport { ClientGetAllTags } from \"../../../../Actions/Tags\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport \"./AddProductPage.css\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport { ClientGetAllProducts, AddProduct } from \"../../../../Actions/Product\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nfunction AddProductPage(props) {\r\n  const {\r\n    allCategories,\r\n    token,\r\n    totalCategory,\r\n    totalPagesCategory,\r\n    allTags,\r\n    totalTags,\r\n    totalPagesTags,\r\n    allProducts,\r\n    totalProducts,\r\n    totalPages,\r\n  } = props;\r\n  const [product, setproduct] = useState({});\r\n\r\n  const [attributes, setattributes] = useState([\r\n    { nom: \"contenance\", valeurs: [\"jfjhf\", \"jfjf\", \"didf\"] },\r\n  ]);\r\n\r\n  const onChange = (attribute, value) => {\r\n    let product1 = product;\r\n    product1[attribute] = value;\r\n    setproduct(product1);\r\n  };\r\n\r\n  const handleAddAttribute = (value) => {};\r\n  const handleDelete = (data) => {\r\n    let att = attributes;\r\n    // att[0].valeurs.slice(index, 1);\r\n    setattributes(att);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let prod = product;\r\n    prod.type = \"simple\";\r\n    setproduct(prod);\r\n    console.log(\"in use effect\");\r\n    props.GetAllCategories(token, 1, 100);\r\n    props.GetAllTags(token, 1, 100);\r\n    props.GetAllProducts(token);\r\n  }, []);\r\n\r\n  const getSteps = () => {\r\n    return [\r\n      \"Informations générale\",\r\n      \"Catégories et étiquettes\",\r\n      \"Informations du produit\",\r\n      \"Image du produit\",\r\n    ];\r\n  };\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const AddProduct = () => {\r\n    console.log(\"product ajouter :\", product);\r\n    props.AddProduct(product);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Card>\r\n        <Card.Body>\r\n          <div>\r\n            <Stepper activeStep={activeStep} alternativeLabel>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n          </div>\r\n          {activeStep === 0 ? (\r\n            <div className=\"col-md-12\">\r\n              <Form>\r\n                <Form.Group controlId=\"name\">\r\n                  <Form.Label>Nom du produit</Form.Label>\r\n                  <Form.Control\r\n                    defaultValue={product.name}\r\n                    onChange={(event) => {\r\n                      onChange(\"name\", event.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"slug\">\r\n                  <Form.Label>Slug du produit</Form.Label>\r\n                  <Form.Control\r\n                    defaultValue={product.slug}\r\n                    onChange={(event) => {\r\n                      onChange(\"slug\", event.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"description\">\r\n                  <Form.Label>Description du produit</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={5}\r\n                    defaultValue={product.description}\r\n                    onChange={(event) => {\r\n                      onChange(\"description\", event.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"short_description\">\r\n                  <Form.Label>Description courte du produit</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    defaultValue={product.short_description}\r\n                    onChange={(event) => {\r\n                      onChange(\"short_description\", event.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          ) : null}\r\n\r\n          {activeStep === 1 ? (\r\n            <div>\r\n              <div>\r\n                <Autocomplete\r\n                  multiple\r\n                  id=\"checkboxes-categories\"\r\n                  options={allCategories}\r\n                  onChange={(event, value) => {\r\n                    onChange(\"categories\", value);\r\n                    console.log(\"Autocomplete :\", value);\r\n                  }}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderOption={(option, { selected }) => (\r\n                    <React.Fragment>\r\n                      <Checkbox\r\n                        icon={icon}\r\n                        checkedIcon={checkedIcon}\r\n                        style={{ marginRight: 8 }}\r\n                        //color=\"pramiry\"\r\n                        checked={selected}\r\n                      />\r\n                      {option.name}\r\n                    </React.Fragment>\r\n                  )}\r\n                  style={{ width: \"100%\" }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      label=\"Catégories\"\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Autocomplete\r\n                  multiple\r\n                  id=\"checkboxes-tags\"\r\n                  options={allTags}\r\n                  onChange={(event, value) => {\r\n                    onChange(\"tags\", value);\r\n                    console.log(\"Autocomplete :\", value);\r\n                  }}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderOption={(option, { selected }) => (\r\n                    <React.Fragment>\r\n                      <Checkbox\r\n                        icon={icon}\r\n                        checkedIcon={checkedIcon}\r\n                        style={{ marginRight: 8 }}\r\n                        //color=\"pramiry\"\r\n                        checked={selected}\r\n                      />\r\n                      {option.name}\r\n                    </React.Fragment>\r\n                  )}\r\n                  style={{ width: \"100%\" }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      label=\"Etiquettes\"\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {activeStep === 2 ? (\r\n            <Form>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                  <Form.Label>Type de produit</Form.Label>\r\n                  <Form.Control\r\n                    onChange={(event) => {\r\n                      onChange(\"type\", event.target.value);\r\n                    }}\r\n                    as=\"select\"\r\n                    defaultValue={product.type}\r\n                  >\r\n                    <option value=\"simple\">Produit simple</option>\r\n                    <option value=\"variable\">Produit variable</option>\r\n                    <option value=\"groupés\">Produits groupés</option>\r\n                    <option value=\"externe\">Produit externe/affiliation</option>\r\n                    <option value=\"intelligent\">Lot intelligent</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Général</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className=\"col-md-12\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Tarif régulier</Form.Label>\r\n                        <Form.Control />\r\n                      </Form.Group>\r\n\r\n                      <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label>Tarif promo</Form.Label>\r\n                        <Form.Control />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Label>Dates de promo</Form.Label>\r\n\r\n                    <div className=\"col-md-12\">\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                          <Form.Label>Debut</Form.Label>\r\n                          <Form.Control type=\"date\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                          <Form.Label>Fin</Form.Label>\r\n                          <Form.Control type=\"date\" />\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n                    </div>\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>URL du produit</Form.Label>\r\n                        <Form.Control />\r\n                        <Form.Text className=\"text-muted\">\r\n                          Saisir l’URL externe vers le produit.\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label>Libelle du bouton</Form.Label>\r\n                        <Form.Control />\r\n                        <Form.Text className=\"text-muted\">\r\n                          Ce texte sera visible dans le bouton de lien vers le\r\n                          produit externe.\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                  </div>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Inventaire</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className=\"col-md-12\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group controlId=\"formGridPassword\">\r\n                      <Form.Label>Unité de Gestion de Stock</Form.Label>\r\n                      <Form.Control />\r\n                      <Form.Text className=\"text-muted\">\r\n                        UGS fait référence à l’Unité de Gestion de Stock, un\r\n                        identifiant unique pour chaque produit/service distinct\r\n                        qui peut être vendu.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>État du stock</Form.Label>\r\n                      <Form.Control as=\"select\">\r\n                        <option>En stock</option>\r\n                        <option>Repture de stock</option>\r\n                        <option>En réapprovisionnement</option>\r\n                      </Form.Control>\r\n                      <Form.Text className=\"text-muted\">\r\n                        Contrôle si le produit est listé comme « en stock » ou «\r\n                        en rupture » sur le site.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Label>Quantité en stock </Form.Label>\r\n                        <Form.Control />\r\n                        <Form.Text className=\"text-muted\">\r\n                          Quantité du stock. Si c’est un produit variable cette\r\n                          valeur sera utilisée pour contrôler le stock pour\r\n                          toutes les variations, à moins que vous définissiez le\r\n                          stock au niveau de la variation.\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Label>\r\n                          Autoriser les commandes en réapprovisionnement ?\r\n                        </Form.Label>\r\n                        <Form.Control />\r\n                        <Form.Text className=\"text-muted\">\r\n                          En cas de gestion de stock, cela définit si les\r\n                          ruptures de stock sont autorisées ou non. Si actif, la\r\n                          quantité de stock peut être inférieure à 0.\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Seuil de stock faible</Form.Label>\r\n                        <Form.Control />\r\n                        <Form.Text className=\"text-muted\">\r\n                          Lorsque le stock atteindra cette valeur, vous recevrez\r\n                          une notification par e-mail.\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                  </div>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Expédition</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className=\"col-md-12\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group controlId=\"formGridPassword\">\r\n                      <Form.Label>Poids (kg)</Form.Label>\r\n                      <Form.Control />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Poids au format décimal\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Label>Dimensions (cm)</Form.Label>\r\n\r\n                    <div className=\"col-md-12\">\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCity\">\r\n                          <Form.Label>Longueur</Form.Label>\r\n                          <Form.Control />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridCity\">\r\n                          <Form.Label>Largeur</Form.Label>\r\n                          <Form.Control />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridZip\">\r\n                          <Form.Label>Hauteur</Form.Label>\r\n                          <Form.Control />\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n                    </div>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Classe d’expédition</Form.Label>\r\n                      <Form.Control as=\"select\">\r\n                        <option>Pas de classe d'expédition</option>\r\n                      </Form.Control>\r\n                      <Form.Text className=\"text-muted\">\r\n                        Les classes d’expédition sont utilisées par certains\r\n                        modes d’expédition pour grouper des produits similaires.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </div>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Produits liés</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className=\"col-md-12\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Produits suggérés</Form.Label>\r\n                      <Autocomplete\r\n                        multiple\r\n                        id=\"checkboxes-tags\"\r\n                        options={allProducts}\r\n                        onChange={(event, value) => {\r\n                          // onChange(\"tags\", event.target.value);\r\n                          console.log(\"Autocomplete :\", value);\r\n                        }}\r\n                        getOptionLabel={(option) => option.name}\r\n                        renderOption={(option, { selected }) => (\r\n                          <React.Fragment>\r\n                            <Checkbox\r\n                              icon={icon}\r\n                              checkedIcon={checkedIcon}\r\n                              style={{ marginRight: 8 }}\r\n                              //color=\"pramiry\"\r\n                              checked={selected}\r\n                            />\r\n                            {option.name}\r\n                          </React.Fragment>\r\n                        )}\r\n                        style={{ width: \"100%\" }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                          />\r\n                        )}\r\n                      />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Les produits suggérés sont des produits que vous\r\n                        recommandez à la place de ceux actuellement vus, par\r\n                        exemple, les produits qui sont plus rentables, de\r\n                        meilleure qualité ou plus chers.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Ventes croisées</Form.Label>\r\n                      <Autocomplete\r\n                        multiple\r\n                        id=\"checkboxes-tags\"\r\n                        options={allProducts}\r\n                        onChange={(event, value) => {\r\n                          // onChange(\"tags\", event.target.value);\r\n                          console.log(\"Autocomplete :\", value);\r\n                        }}\r\n                        getOptionLabel={(option) => option.name}\r\n                        renderOption={(option, { selected }) => (\r\n                          <React.Fragment>\r\n                            <Checkbox\r\n                              icon={icon}\r\n                              checkedIcon={checkedIcon}\r\n                              style={{ marginRight: 8 }}\r\n                              //color=\"pramiry\"\r\n                              checked={selected}\r\n                            />\r\n                            {option.name}\r\n                          </React.Fragment>\r\n                        )}\r\n                        style={{ width: \"100%\" }}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                          />\r\n                        )}\r\n                      />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Les ventes croisées sont des produits que vous mettez en\r\n                        avant dans le panier, basés sur le produit actuel.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </div>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Attributs</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className=\"col-md-12\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Nom</Form.Label>\r\n                      <Form.Control />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Nom</Form.Label>\r\n                      <Form.Control />\r\n                      <button className=\"add-chip-button\" onClick>\r\n                        Ajouter un attribut\r\n                      </button>\r\n                    </Form.Group>\r\n                    <Row>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"add-chip-input\"\r\n                        placeholder=\"longueur\"\r\n                      />\r\n\r\n                      <button className=\"add-chip-button\" onClick>\r\n                        Ajouter un attribut\r\n                      </button>\r\n                    </Row>\r\n                    <div className=\"col-md-12 container-chips-attributes\">\r\n                      {attributes[0].valeurs.map((data) => {\r\n                        return (\r\n                          <Chip\r\n                            label={data}\r\n                            onDelete={handleDelete}\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                          />\r\n                        );\r\n                      })}\r\n                    </div>\r\n\r\n                    <div className=\"container_add_attribut\">\r\n                      <Button variant=\"outline-success\">\r\n                        Ajouter un attribut\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Variations</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className=\"col-md-12\"></AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Produits groupés</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className=\"col-md-12\"></AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography>Avancé</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className=\"col-md-12\">\r\n                  <div className=\"col-md-12\">\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Note de commande</Form.Label>\r\n                      <Form.Control />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Saisissez une note facultative à envoyer au client après\r\n                        l’achat.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Ordre du menu</Form.Label>\r\n                      <Form.Control />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Ordre personnalisé.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                  </div>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Form>\r\n          ) : null}\r\n          <div className=\"col-md-12\">\r\n            <Button disabled={activeStep === 0} onClick={handleBack}>\r\n              Précédant\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n              {activeStep === steps.length - 1 ? \"Terminer\" : \"Suivant\"}\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={AddProduct}>\r\n              Ajouter\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allCategories: state.Category.allCategories,\r\n    totalCategory: state.Category.totalCategory,\r\n    totalPagesCategory: state.Category.totalPagesCategory,\r\n    allTags: state.Tags.allTags,\r\n    totalTags: state.Tags.totalTags,\r\n    totalPagesTags: state.Tags.totalPagesTags,\r\n    token: state.Auth.Authorization,\r\n    allProducts: state.Product.allProducts,\r\n    totalProducts: state.Product.totalProducts,\r\n    totalPages: state.Product.totalPages,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    GetAllCategories: (token, page, per_page) => {\r\n      dispatch(ClientGetAllCategories(token, page, per_page));\r\n    },\r\n    GetAllTags: (token, page, per_page) => {\r\n      dispatch(ClientGetAllTags(token, page, per_page));\r\n    },\r\n    GetAllProducts: (token) => {\r\n      dispatch(ClientGetAllProducts(token));\r\n    },\r\n    AddProduct: (product) => {\r\n      dispatch(AddProduct(product));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(AddProductPage);\r\n","D:\\Agence 2i works\\front\\src\\Pages\\ClientPages\\ProductPages\\AllProductsPage\\AllProductsPage.js",["344","345","346","347","348","349","350","351","352","353","354","355","356"],"import React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport { Tab, Tabs, Typography } from \"@material-ui/core\";\r\nimport ImageListView from \"../../../../Components/List/ImageListView/ImageListView\";\r\nimport ThumbListView from \"../../../../Components/List/ThumbListView/ThumbListView\";\r\nimport * as BsIcons from \"react-icons/bs\";\r\nimport \"./AllProductsPage.css\";\r\nimport ListPageHeading from \"../../../../Components/List/ListPageHeading/ListPageHeading\";\r\nimport { Separator } from \"../../../../Components/CustomBootstrap/CustomBootstrap\";\r\nimport { productData } from \"../../../../Data/ProductData\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {\r\n  ClientGetAllProducts,\r\n  ClientGetDetailProduct,\r\n  ClientGetProductsPerPage,\r\n} from \"../../../../Actions/Product\";\r\nimport Product from \"../../../../Reducers/Product\";\r\n\r\nfunction AllProductsPage(props) {\r\n  const { allProducts, token, totalProducts, totalPages } = props;\r\n  const history = useHistory();\r\n\r\n  const [pageSizes, setpageSizes] = useState([10, 20, 30, 50]);\r\n  const [selectedOrderOption, setselectedOrderOption] = useState({\r\n    column: \"name\",\r\n    label: \"Nom du produit\",\r\n  });\r\n\r\n  const [orderOptions, setorderOptions] = useState([\r\n    { column: \"name\", label: \"Nom du produit\" },\r\n    { column: \"price\", label: \"Prix\" },\r\n  ]);\r\n\r\n  const [selectedPageSize, setselectedPageSize] = useState(10);\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const [totalItemCount, settotalItemCount] = useState(totalProducts);\r\n  const [search, setsearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"in use effect\");\r\n    props.GetAllProducts(token, 1, selectedPageSize);\r\n    settotalItemCount(totalProducts);\r\n    console.log(\"totalProducts\", totalProducts);\r\n  }, []);\r\n\r\n  const handleClick = (event, product) => {\r\n    console.log(\"click go to detail prooduct :\", product);\r\n    props.GetDetailProduct(token, product.id);\r\n    history.push({\r\n      pathname: \"/home/DetailProductPage\",\r\n    });\r\n  };\r\n\r\n  const changeOrderBy = (column) => {\r\n    setselectedOrderOption(orderOptions.find((x) => x.column === column));\r\n    dataListRender();\r\n  };\r\n\r\n  const changePageSize = (size) => {\r\n    setselectedPageSize(size);\r\n    setcurrentPage(1);\r\n    dataListRender();\r\n  };\r\n\r\n  const onSearchKey = (e) => {\r\n    setsearch(e.target.value.toLowerCase());\r\n    dataListRender();\r\n  };\r\n\r\n  const dataListRender = async () => {\r\n    await props.GetAllProducts(token, currentPage, selectedPageSize);\r\n\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const onChangePage = (event, value) => {\r\n    setcurrentPage(value);\r\n    dataListRender();\r\n  };\r\n\r\n  const startIndex = (currentPage - 1) * selectedPageSize;\r\n  const endIndex = currentPage * selectedPageSize;\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <ListPageHeading\r\n        heading=\"Tous les produits\"\r\n        changeOrderBy={changeOrderBy}\r\n        changePageSize={changePageSize}\r\n        selectedPageSize={selectedPageSize}\r\n        totalItemCount={totalItemCount}\r\n        selectedOrderOption={selectedOrderOption}\r\n        startIndex={startIndex}\r\n        endIndex={endIndex}\r\n        onSearchKey={onSearchKey}\r\n        orderOptions={orderOptions}\r\n        pageSizes={pageSizes}\r\n      />\r\n      <Separator className=\"mb-5\" />\r\n      <Row>\r\n        {allProducts.map((product) => {\r\n          return (\r\n            <ThumbListView\r\n              key={product.id}\r\n              product={product}\r\n              collect={collect}\r\n              onCheckItem={handleClick}\r\n            />\r\n          );\r\n        })}\r\n      </Row>\r\n      <div className=\"mb-5\" />\r\n      <div className=\"col-12 display_center\">\r\n        <Pagination\r\n          count={totalPages}\r\n          variant=\"outlined\"\r\n          page={currentPage}\r\n          shape=\"rounded\"\r\n          color=\"primary\"\r\n          onChange={onChangePage}\r\n        />\r\n      </div>\r\n      <div className=\"mb-5\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction collect(props) {\r\n  return { data: props.data };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allProducts: state.Product.allProducts,\r\n    totalProducts: state.Product.totalProducts,\r\n    totalPages: state.Product.totalPages,\r\n    token: state.Auth.Authorization,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    GetAllProducts: (token, page, per_page) => {\r\n      dispatch(ClientGetProductsPerPage(token, page, per_page));\r\n    },\r\n    GetDetailProduct: (token, id) => {\r\n      dispatch(ClientGetDetailProduct(token, id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(AllProductsPage);\r\n","D:\\Agence 2i works\\front\\src\\Components\\List\\ThumbListView\\ThumbListView.js",["357","358","359","360","361","362"],"import React from \"react\";\r\nimport { Card, CustomInput, Badge, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport \"./ThumbListView.css\";\r\nimport { Colxx, Separator } from \"../../CustomBootstrap/CustomBootstrap\";\r\n\r\nexport default function ThumbListView(props) {\r\n  const { product, isSelect, collect, onCheckItem } = props;\r\n  return (\r\n    <Colxx\r\n      xxs=\"12\"\r\n      key={product.id}\r\n      className=\"mb-3 col_min_width rounded_card\"\r\n    >\r\n      <Card\r\n        className={classnames(\"d-flex flex-row rounded_card\", {\r\n          active: isSelect,\r\n        })}\r\n      >\r\n        <NavLink\r\n          to={`?p=${product.id}`}\r\n          className=\"d-flex img_border\"\r\n          onClick={(event) => onCheckItem(event, product)}\r\n        >\r\n          <img\r\n            onClick={(event) => onCheckItem(event, product)}\r\n            alt={product.name}\r\n            src={product.images.length > 0 ? product.images[0].src : \"\"}\r\n            className=\"list-thumbnail responsive border-0 card-img-left img_round\"\r\n          />\r\n        </NavLink>\r\n        <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n          <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center card_body_padding\">\r\n            <NavLink\r\n              to={`?p=${product.id}`}\r\n              className=\"w-30 w-sm-100\"\r\n              onClick={(event) => onCheckItem(event, product)}\r\n            >\r\n              <p className=\"list-item-heading mb-1 truncate\">{product.name}</p>\r\n            </NavLink>\r\n            <p\r\n              className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n              onClick={(event) => onCheckItem(event, product)}\r\n            >\r\n              {product.categories.map((cat) => {\r\n                return (\r\n                  <Badge color=\"outline-secondary mb-1 mr-1\" pill>\r\n                    {cat.name.replace(\"&amp;\", \"&\")}\r\n                  </Badge>\r\n                );\r\n              })}\r\n            </p>\r\n            <p\r\n              className=\"mb-1 text-muted text-small w-15 w-sm-100\"\r\n              onClick={(event) => onCheckItem(event, product)}\r\n            >\r\n              {product.price}\r\n              {\" DT\"}\r\n            </p>\r\n            <div\r\n              className=\"w-15 w-sm-100\"\r\n              onClick={(event) => onCheckItem(event, product)}\r\n            >\r\n              <Badge\r\n                color={product.stock_status == \"instock\" ? \"success\" : \"danger\"}\r\n                pill\r\n              >\r\n                {product.stock_status == \"instock\"\r\n                  ? \"En stock\"\r\n                  : \"Rupture de stock\"}\r\n              </Badge>\r\n            </div>\r\n            <div className=\"w-14 w-sm-100 container_btn\">\r\n              <Button\r\n                outline\r\n                color=\"warning\"\r\n                className=\"mb-2 btn_product\"\r\n                onClick={() => {\r\n                  console.log(\"btn modifier clicked\");\r\n                }}\r\n              >\r\n                Modifier\r\n              </Button>\r\n              <Button\r\n                outline\r\n                color=\"danger\"\r\n                className=\"mb-2 btn_product margin_btn_delete\"\r\n                onClick={() => {\r\n                  console.log(\"btn supprimer clicked\");\r\n                }}\r\n              >\r\n                Supprimer\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Colxx>\r\n  );\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Components\\List\\ImageListView\\ImageListView.js",["363","364","365","366"],"import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardImg,\r\n  CardText,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport \"./ImageListView.css\";\r\nimport { Colxx, Separator } from \"../../CustomBootstrap/CustomBootstrap\";\r\n\r\nexport default function ImageListView(props) {\r\n  const { product, isSelect, collect, onCheckItem } = props;\r\n  return (\r\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={(event) => onCheckItem(event, product)}\r\n          className={classnames(\"rounded_card card_size\", {\r\n            active: isSelect,\r\n          })}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100 \">\r\n              <CardImg\r\n                className=\"img_round_card img_border2\"\r\n                top\r\n                alt={product.name}\r\n                src={product.images.length > 0 ? product.images[0].src : \"\"}\r\n              \r\n              />\r\n            </NavLink>\r\n            <Badge\r\n              color={product.stock_status == \"instock\" ? \"success\" : \"danger\"}\r\n              pill\r\n              className=\"position-absolute badge-top-left\"\r\n            >\r\n              {product.stock_status == \"instock\"\r\n                ? \"En stock\"\r\n                : \"Rupture de stock\"}\r\n            </Badge>\r\n          </div>\r\n          <CardBody>\r\n            <Row>\r\n              <Colxx xxs=\"12\">\r\n                <CardSubtitle>{product.name}</CardSubtitle>\r\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\r\n                  {product.categories.map((cat) => {\r\n                    return (\r\n                      <Badge color=\"outline-secondary mb-1 mr-1\" pill>\r\n                        {cat.name.replace(\"&amp;\", \"&\")}\r\n                      </Badge>\r\n                    );\r\n                  })}\r\n                </CardText>\r\n                <CardText></CardText>\r\n                <p className=\"txt_price color-theme-2\">\r\n                  {product.price}\r\n                  {\" DT\"}\r\n                </p>\r\n              </Colxx>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Components\\CustomBootstrap\\CustomBootstrap.js",[],"D:\\Agence 2i works\\front\\src\\Components\\List\\ListPageHeading\\ListPageHeading.js",["367","368","369","370","371","372"],"import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Button,\r\n  ButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  CustomInput,\r\n  Collapse,\r\n} from \"reactstrap\";\r\n\r\nimport { Colxx, Separator } from \"../../CustomBootstrap/CustomBootstrap\";\r\n\r\nimport {\r\n  DataListIcon,\r\n  ThumbListIcon,\r\n  ImageListIcon,\r\n} from \"../../../assets/svg\";\r\nclass ListPageHeading extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      dropdownSplitOpen: false,\r\n      displayOptionsIsOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState((prevState) => ({\r\n      displayOptionsIsOpen: !prevState.displayOptionsIsOpen,\r\n    }));\r\n  };\r\n  toggleSplit = () => {\r\n    this.setState((prevState) => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      changeOrderBy,\r\n      changePageSize,\r\n      selectedPageSize,\r\n      totalItemCount,\r\n      selectedOrderOption,\r\n      startIndex,\r\n      endIndex,\r\n      onSearchKey,\r\n      orderOptions,\r\n      pageSizes,\r\n      heading,\r\n    } = this.props;\r\n\r\n    const { displayOptionsIsOpen } = this.state;\r\n    return (\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <h1>{heading}</h1>\r\n\r\n          <div className=\"mb-2\">\r\n            <Button\r\n              color=\"empty\"\r\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n              onClick={this.toggleDisplayOptions}\r\n            >\r\n              option d'affichage\r\n              <i className=\"simple-icon-arrow-down align-middle\" />\r\n            </Button>\r\n            <Collapse\r\n              isOpen={displayOptionsIsOpen}\r\n              className=\"d-md-block\"\r\n              id=\"displayOptions\"\r\n            >\r\n              <div className=\"d-block d-md-inline-block pt-1\">\r\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    orderby {\" \" + selectedOrderOption.label}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {orderOptions.map((order, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changeOrderBy(order.column)}\r\n                        >\r\n                          {order.label}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"keyword\"\r\n                    id=\"search\"\r\n                    placeholder=\"rechercher\"\r\n                    onKeyPress={(e) => onSearchKey(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"float-md-right pt-1\">\r\n                <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    {selectedPageSize}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    {pageSizes.map((size, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changePageSize(size)}\r\n                        >\r\n                          {size}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </Collapse>\r\n          </div>\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListPageHeading;\r\n","D:\\Agence 2i works\\front\\src\\assets\\svg\\index.js",[],"D:\\Agence 2i works\\front\\src\\assets\\svg\\ThumbListIcon.js",[],"D:\\Agence 2i works\\front\\src\\assets\\svg\\ImageListIcon.js",[],"D:\\Agence 2i works\\front\\src\\assets\\svg\\DataListIcon.js",[],"D:\\Agence 2i works\\front\\src\\assets\\svg\\MenuIcon.js",[],"D:\\Agence 2i works\\front\\src\\assets\\svg\\MobileMenuIcon.js",[],"D:\\Agence 2i works\\front\\src\\Reducers\\Company.js",["373","374"],"import * as ActionTypes from \"../Actions/index\";\r\n\r\nconst companyState = {\r\n  loading: false,\r\n  my_company: null,\r\n  all_companies: [],\r\n  role: null,\r\n  selected_company: null,\r\n  errors: null,\r\n};\r\n\r\nexport default function Company(state = companyState, action = {}) {\r\n  switch (action.type) {\r\n    case ActionTypes.GET_CURRENT_USER_COMPANY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        errors: null,\r\n        my_company: action.payload.company,\r\n        role: action.payload.role,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case ActionTypes.GET_CURRENT_USER_COMPANY_FAILURE:\r\n      return { ...state, errors: action.payload.errors, loading: false };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Actions\\Company.js",["375"],"import axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SERVER_URL } from \"../constants/BackendConstants\";\r\nimport * as ActionTypes from \"./index\";\r\n\r\n\r\nexport const getMyCompany =(authToken)=>{\r\n    return async (dispatch)=>{\r\n   console.log(\"in get company function\")\r\n       try {\r\n         \r\n          \r\n           axios.get(SERVER_URL+\"api/companies/my_company\",{headers:{\"Authorization\":authToken}}).then((response)=>{\r\n               console.log(\"data: \",response.data)\r\n   dispatch({type:ActionTypes.GET_CURRENT_USER_COMPANY_SUCCESS,payload:response.data});\r\n           }).catch((error)=>{\r\n               dispatch({type:ActionTypes.GET_CURRENT_USER_COMPANY_FAILURE,payload:{errors:error}});\r\n           }); \r\n           \r\n          } catch (error) {\r\n              dispatch({type:ActionTypes.GET_CURRENT_USER_COMPANY_FAILURE,payload:{errors:error}});\r\n          }\r\n    }\r\n   \r\n   }\r\n","D:\\Agence 2i works\\front\\src\\Components\\Tables\\CollapsibleTable.js",[],"D:\\Agence 2i works\\front\\src\\Data\\ProductData.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\PublicPages\\NotFoundPage\\NotFound.js",["376","377"],"import React from \"react\";\r\nimport \"./NotFound.css\";\r\nimport BACKGROUND from \"../../../assets/pictures/login_background_blurred.png\";\r\nimport LOGO_ILIS from \"../../../assets/pictures/logo-ilis.svg\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction NotFound() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"my-page-container\">\r\n      <img src={BACKGROUND} className=\"background-picture\"></img>\r\n\r\n      <img\r\n        src={LOGO_ILIS}\r\n        className=\"logo-picture\"\r\n        onClick={() => {\r\n          history.push(\"/login\");\r\n        }}\r\n      ></img>\r\n      <p className=\"not-found-number\">404</p>\r\n      <p className=\"not-found-description\">\r\n        Désolé, la page que vous cherchez est introuvable\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","D:\\Agence 2i works\\front\\src\\Pages\\PublicPages\\LoginPage\\Login.js",["378","379"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"../../../assets/pictures/logo-ilis.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoginAuthAction } from \"../../../Actions/Auth\";\r\nfunction Login(props) {\r\n  const { user, login } = props;\r\n  const [userState, setUserState] = useState({});\r\n\r\n  const login1 = () => {\r\n    login(userState);\r\n  };\r\n  const onChange = (attribute, value) => {\r\n    let user1 = userState;\r\n    user1[attribute] = value;\r\n\r\n    setUserState(user1);\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_container\">\r\n        <div className=\"login_side\">\r\n          <div className=\"login_side_data\">\r\n            <img className=\"login_side_data_picture\" src={Logo} />\r\n            <p className=\"login_side_slogan\">\r\n              salut sqfq sqfsqf qs dsqsq qsdfsqf qssq f salut sqfq sqfsqf qs\r\n              dsqsq qsdfsqf qssq f salut sqfq sqfsqf qs dsqsq qsdfsqf qssq f{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login_form\">\r\n          <label className=\"label_form_title\">Se connecter</label>\r\n          <label className=\"label_field_indicator\">Adresse électronique:</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={userState.email}\r\n            placeholder=\"Adresse électronique\"\r\n            onChange={(e) => {\r\n              onChange(\"email\", e.target.value);\r\n            }}\r\n          ></input>\r\n          <label className=\"label_field_indicator\">Mot de passe:</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            value={userState.password}\r\n            placeholder=\"Mot de passe\"\r\n            onChange={(e) => {\r\n              onChange(\"password\", e.target.value);\r\n            }}\r\n          ></input>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"login_button\"\r\n            onClick={() => {\r\n              login1();\r\n            }}\r\n          >\r\n            Se connecter\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"in state\", state);\r\n  return { user: state };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    login: (userState) => {\r\n      //console.log(\"userstate\",userState);\r\n      dispatch(LoginAuthAction(userState));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Login);\r\n","D:\\Agence 2i works\\front\\src\\Pages\\PublicPages\\ProfilePage\\Profile.js",["380","381","382"],"import { Tab, Tabs, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport CurrentUserCompanyInfo from \"../../../Components/CurrentUserCompanyInfo/CurrentUserCompanyInfo\";\r\nimport CurrentUserPersonnalInfo from \"../../../Components/CurrentUserPersonalInfo/CurrentUserPersonnalInfo\";\r\nimport \"./Profile.css\";\r\nfunction Profile() {\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const handleTabSelectChange = (index) => {\r\n    setSelectedTab(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"whole_page\">\r\n      <Tabs\r\n        className=\"tabs-custom\"\r\n        onChange={(e, index) => {\r\n          console.log(index);\r\n          handleTabSelectChange(index);\r\n        }}\r\n      >\r\n        <Tab\r\n          label=\"Mon profil\"\r\n          className={selectedTab == 0 ? \"tab-custom selected\" : \"tab-custom\"}\r\n        />\r\n\r\n        <Tab\r\n          label=\"Informations de la société\"\r\n          className={selectedTab == 1 ? \"tab-custom selected\" : \"tab-custom\"}\r\n        />\r\n      </Tabs>\r\n      <Typography />\r\n\r\n      <img\r\n        className=\"user-cover\"\r\n        src=\"https://gogo-react.coloredstrategies.com/assets/img/social/header.jpg\"\r\n      ></img>\r\n\r\n      <div className=\"user-info-component col-md-3\">\r\n        <CurrentUserPersonnalInfo></CurrentUserPersonnalInfo>\r\n      </div>\r\n      <div className=\"user-info-component col-md-8\">\r\n        <CurrentUserCompanyInfo></CurrentUserCompanyInfo>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\CompanyPages\\AllCompanyPage\\AllCompanyPage.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\CompanyPages\\AddCompanyPage\\AddCompanyPage.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\FeaturePages\\AddFeaturePage\\AddFeaturePage.js",["383","384"],"import React, { useEffect, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport { AddFeature, GetAllGroupeName } from \"../../../../Actions/Feature\";\r\nimport FormAdd from \"../../../../Components/forms/FormAdd\";\r\nimport { CustomFormButton } from \"../../../../Components/Buttons/CustomButton\";\r\nconst gg = [];\r\n\r\nfunction AddFeaturePage(props) {\r\n  const { token, groupNames } = props;\r\n  const [feature, setFeature] = useState({});\r\n\r\n  const onChange = (attribute, value) => {\r\n    let feature1 = feature;\r\n    feature1[attribute] = value;\r\n    setFeature(feature1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.GetGroupName(token);\r\n  }, []);\r\n\r\n  const add = () => {\r\n    props.AddFeature(token, feature);\r\n  };\r\n\r\n  return (\r\n    <FormAdd Title=\"Ajout d'une fonctionnalité\" className=\"col-md-12\">\r\n      <div>\r\n        <TextField\r\n          id=\"name\"\r\n          required\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Nom\"\r\n          value={feature.name}\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"name\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Autocomplete\r\n          id=\"groupName\"\r\n          style={{ width: \"100%\" }}\r\n          freeSolo\r\n          value={feature.groupName}\r\n          onChange={(event, value) => {\r\n            onChange(\"groupName\", value);\r\n          }}\r\n          options={groupNames.map((option) => option.group_name)}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              required\r\n              value={feature.groupName}\r\n              onChange={(event) => {\r\n                onChange(\"groupName\", event.target.value);\r\n              }}\r\n              label=\"Nom du groupe\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"prix\"\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Prix\"\r\n          value={feature.price}\r\n          type=\"number\"\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"price\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"description\"\r\n          style={{ width: \"100%\" }}\r\n          label=\"Description\"\r\n          margin=\"normal\"\r\n          multiline\r\n          variant=\"outlined\"\r\n          value={feature.description}\r\n          onChange={(event) => {\r\n            onChange(\"description\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <CustomFormButton\r\n          value=\"Ajouter\"\r\n          width=\"50%\"\r\n          onClick={() => {\r\n            console.log(\"feature jouter :\", feature);\r\n            add();\r\n          }}\r\n        ></CustomFormButton>\r\n      </div>\r\n    </FormAdd>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.Auth.Authorization,\r\n    groupNames: state.Feature.groupNames,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    AddFeature: (token, data) => {\r\n      dispatch(AddFeature(token, data));\r\n    },\r\n    GetGroupName: (token) => {\r\n      dispatch(GetAllGroupeName(token));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(AddFeaturePage);\r\n","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\FeaturePages\\AllFeaturePage\\AllFeaturePage.js",["385"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { GetAllFeatures } from \"../../../../Actions/Feature\";\r\nimport { CustomFormButton } from \"../../../../Components/Buttons/CustomButton\";\r\nimport FormAdd from \"../../../../Components/forms/FormAdd\";\r\nimport EnhancedTable from \"../../../../Components/Tables/CustomTable\";\r\nimport AddFeaturePage from \"../AddFeaturePage/AddFeaturePage\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Nom\",\r\n  },\r\n  {\r\n    id: \"groupName\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Nom du groupe\",\r\n  },\r\n  {\r\n    id: \"description\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Description\",\r\n  },\r\n  { id: \"price\", numeric: true, disablePadding: true, label: \"Prix\" },\r\n];\r\n\r\nfunction AllFeaturePage(props) {\r\n  const { features, token } = props;\r\n\r\n  const [showAdd, setshowAdd] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"in use effect\");\r\n    props.GetAllFeatures(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n        className=\"col-md-12\"\r\n      >\r\n        <CustomFormButton\r\n          value=\"Ajouter\"\r\n          width=\"20%\"\r\n          onClick={() => {\r\n            setshowAdd(!showAdd);\r\n          }}\r\n        ></CustomFormButton>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n        className=\"col-md-12\"\r\n      >\r\n        {showAdd ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              flexWrap: \"wrap\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n            className=\"col-md-12\"\r\n          >\r\n            <FormAdd Title=\"Fonctionnalités\" className=\"col-md-8\">\r\n              <EnhancedTable\r\n                rows={features}\r\n                headCells={headCells}\r\n                title=\"\"\r\n                alignRow=\"center\"\r\n                alignhead=\"center\"\r\n              ></EnhancedTable>\r\n            </FormAdd>\r\n            <div className=\"col-md-4\">\r\n              <AddFeaturePage></AddFeaturePage>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <FormAdd Title=\"Fonctionnalités\" className=\"col-md-12\">\r\n            <EnhancedTable\r\n              rows={features}\r\n              headCells={headCells}\r\n              title=\"\"\r\n              alignRow=\"center\"\r\n              alignhead=\"center\"\r\n            ></EnhancedTable>\r\n          </FormAdd>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    features: state.Feature.features,\r\n    token: state.Auth.Authorization,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    GetAllFeatures: (token) => {\r\n      dispatch(GetAllFeatures(token));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(AllFeaturePage);\r\n","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\PackPages\\AddPack\\AddPack.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\PackPages\\AllPackPage\\AllPackPage.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\LicencePages\\AddLicencePage\\AddLicencePage.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\ClientPages\\ProductPages\\DetailProductPage\\DetailProductPage.js",["386","387","388","389","390","391","392","393","394","395"],"import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardTitle,\r\n  CardBody,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  TabContent,\r\n  TabPane,\r\n  Badge,\r\n  CardHeader,\r\n  Table,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classnames from \"classnames\";\r\nimport GlideComponentThumbs from \"../../../../Components/carousel/GlideComponentThumbs\";\r\nimport {\r\n  Colxx,\r\n  Separator,\r\n} from \"../../../../Components/CustomBootstrap/CustomBootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction DetailProductPage(props) {\r\n  const { product, token } = props;\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <h1>{product.name}</h1>\r\n\r\n          <Separator className=\"mb-5\" />\r\n\r\n          <Row>\r\n            <Colxx xxs=\"12\" xl=\"8\" className=\"col-left\">\r\n              <Card className=\"mb-4 card\">\r\n                <CardBody>\r\n                  <GlideComponentThumbs\r\n                    settingsImages={{\r\n                      bound: true,\r\n                      rewind: false,\r\n                      focusAt: 0,\r\n                      startAt: 0,\r\n                      gap: 5,\r\n                      perView: 1,\r\n                      data: product.images,\r\n                    }}\r\n                    settingsThumbs={{\r\n                      bound: true,\r\n                      rewind: false,\r\n                      focusAt: 0,\r\n                      startAt: 0,\r\n                      gap: 10,\r\n                      perView: 5,\r\n                      data: product.images,\r\n                      breakpoints: {\r\n                        576: {\r\n                          perView: 4,\r\n                        },\r\n                        420: {\r\n                          perView: 3,\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n              <Card className=\"mb-4\">\r\n                <CardHeader>\r\n                  <Nav tabs className=\"card-header-tabs \">\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({\r\n                          active: true,\r\n                          \"nav-link\": true,\r\n                        })}\r\n                        to=\"#\"\r\n                      >\r\n                        Details\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </Nav>\r\n                </CardHeader>\r\n\r\n                <TabContent activeTab=\"1\">\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Colxx sm=\"12\">\r\n                        <CardBody>\r\n                          <p className=\"font-weight-bold\">Description</p>\r\n                          <p\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: product.description,\r\n                            }}\r\n                          />\r\n\r\n                          <br />\r\n                          <p className=\"font-weight-bold\">\r\n                            Phasellus Efficitur\r\n                          </p>\r\n                          <p>\r\n                            Tellus a sem condimentum, vitae convallis sapien\r\n                            feugiat.Aenean non nibh nec nunc aliquam iaculis. Ut\r\n                            quis suscipit nunc. Duis at lectusa est aliquam\r\n                            venenatis vitae eget arcu. Sed egestas felis eget\r\n                            convallismaximus. Curabitur maximus, ligula vel\r\n                            sagittis iaculis, risus nisi tinciduntsem, ut\r\n                            ultricies libero nulla eu ligula. Nam ultricies\r\n                            mollis nulla, sedlaoreet leo convallis ac. Mauris\r\n                            nisl risus, tincidunt ac diam aliquet,convallis\r\n                            pellentesque nisi. Nam sit amet libero at odio\r\n                            malesuada ultricies avitae dolor. Cras in viverra\r\n                            felis, non consequat quam. Praesent a orci\r\n                            enim.Vivamus porttitor nisi at nisl egestas iaculis.\r\n                            Nullam commodo eget duisollicitudin sagittis. Duis\r\n                            id nibh mollis, hendrerit metus\r\n                            consectetur,ullamcorper risus. Morbi elementum\r\n                            ultrices nunc, quis porta nisi ornare sitamet.\r\n                            <br />\r\n                            <br />\r\n                            Etiam tincidunt orci in nisi aliquam placerat.\r\n                            Aliquam finibus in sem utvehicula. Morbi eget\r\n                            consectetur leo. Quisque consectetur lectus eros,\r\n                            sedsodales libero ornare cursus. Etiam elementum ut\r\n                            dolor eget hendrerit.Suspendisse eu lacus eu eros\r\n                            lacinia feugiat sit amet non purus.\r\n                            <br />\r\n                            <br />\r\n                            Pellentesque quis cursus mauris. Nam in ornare erat.\r\n                            Vestibulum convallis enim ac massa dapibus\r\n                            consectetur. Maecenas facilisis eros ac felis\r\n                            mattis, eget auctor sapien varius.\r\n                          </p>\r\n                          <br />\r\n                          <p className=\"font-weight-bold\">Elementum Ultrices</p>\r\n                          <Table borderless>\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">First</th>\r\n                                <th scope=\"col\">Last</th>\r\n                                <th scope=\"col\">Handle</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              <tr>\r\n                                <th scope=\"row\">1</th>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>@mdo</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <th scope=\"row\">2</th>\r\n                                <td>Jacob</td>\r\n                                <td>Thornton</td>\r\n                                <td>@fat</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <th scope=\"row\">3</th>\r\n                                <td colSpan=\"2\">Larry the Bird</td>\r\n                                <td>@twitter</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </Table>\r\n                        </CardBody>\r\n                      </Colxx>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </Card>\r\n            </Colxx>\r\n\r\n            <Colxx xxs=\"12\" xl=\"4\" className=\"col-right\">\r\n              <Card className=\"mb-4\">\r\n                <CardBody>\r\n                  <p className=\"mb-3\">\r\n                    Vivamus ultricies augue vitae commodo condimentum. Nullam\r\n                    faucibus eros eu mauris feugiat, eget consectetur tortor\r\n                    tempus.\r\n                    <br />\r\n                    <br />\r\n                    Sed volutpat mollis dui eget fringilla. Vestibulum blandit\r\n                    urna ut tellus lobortis tristique. Vestibulum ante ipsum\r\n                    primis in faucibus orci luctus et ultrices posuere cubilia\r\n                    Curae; Pellentesque quis cursus mauris.\r\n                    <br />\r\n                    <br />\r\n                    Nulla non purus fermentum, pulvinar dui condimentum,\r\n                    malesuada nibh. Sed viverra quam urna, at condimentum ante\r\n                    viverra non. Mauris posuere erat sapien, a convallis libero\r\n                    lobortis sit amet. Suspendisse in orci tellus.\r\n                  </p>\r\n                  <p className=\"text-muted text-small mb-2\">categories</p>\r\n                  <p className=\"mb-3\">\r\n                    <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n                      FRONTEND\r\n                    </Badge>\r\n                    <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n                      JAVASCRIPT\r\n                    </Badge>\r\n                    <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n                      SECURITY\r\n                    </Badge>\r\n                    <Badge color=\"outline-secondary\" className=\"mb-1 mr-1\" pill>\r\n                      DESIGN\r\n                    </Badge>\r\n                  </p>\r\n                </CardBody>\r\n              </Card>\r\n            </Colxx>\r\n          </Row>\r\n        </Colxx>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    product: state.Product.detailProduct,\r\n    token: state.Auth.Authorization,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DetailProductPage);\r\n","D:\\Agence 2i works\\front\\src\\Components\\carousel\\GlideComponentThumbs.js",[],"D:\\Agence 2i works\\front\\src\\Reducers\\Product.js",["396"],"D:\\Agence 2i works\\front\\src\\Actions\\Product.js",["397","398","399"],"D:\\Agence 2i works\\front\\src\\Reducers\\Category.js",["400"],"import React from \"react\";\r\nimport * as ActionTypes from \"../Actions/index\";\r\n\r\nconst categoryState = {\r\n  allCategories: [],\r\n  totalCategory: 0,\r\n  totalPagesCategory: 0,\r\n};\r\n\r\nexport default function Category(state = categoryState, action = {}) {\r\n  switch (action.type) {\r\n    case ActionTypes.CLIENT_GET_ALL_CATEGORY:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errors: action.error ? action.payload.errors : null,\r\n      };\r\n    case ActionTypes.CLIENT_GET_ALL_CATEGORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allCategories: action.payload.data,\r\n        totalCategory: action.payload.headers[\"x-wp-total\"],\r\n        totalPagesCategory: action.payload.headers[\"x-wp-totalpages\"],\r\n        loading: false,\r\n        errors: action.error ? action.payload.errors : null,\r\n      };\r\n    case ActionTypes.CLIENT_GET_ALL_CATEGORY_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload.errors,\r\n      };\r\n    case ActionTypes.CATEGORY_UPLOAD_PICTURE_SUCCESS:\r\n      return {\r\n        ...state,\r\n\r\n        loading: false,\r\n      };\r\n    case ActionTypes.CATEGORY_UPLOAD_PICTURE_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload.errors,\r\n      };\r\n    case ActionTypes.CATEGORY_UPLOAD_PICTURE_TOKEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.CATEGORY_UPLOAD_PICTURE_TOKEN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload.errors,\r\n      };\r\n    /******************************************* */\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Actions\\Category.js",["401","402","403"],"import axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SERVER_URL } from \"../constants/BackendConstants\";\r\nimport * as ActionTypes from \"./index\";\r\nconst woocommerce_server_url =\r\n  \"https://stupefied-johnson.51-210-46-0.plesk.page/wp-json/wc/v3/\";\r\n\r\nconst wp_server_url =\r\n  \"https://stupefied-johnson.51-210-46-0.plesk.page/wp-json\";\r\nconst woocommerce_customer_signature =\r\n  \"?consumer_key=ck_a28470d1e5102f9afb461de8b87decb1fa2c9501&consumer_secret=cs_3e6b011c13c51129ddc74a5c1d7cd1074eb397a5\";\r\nexport const ClientGetAllCategories = (auth, page, per_page) => {\r\n  return async (dispatch) => {\r\n    console.log(\"in reQUEST GET ALL categories\");\r\n    const request = {\r\n      url:\r\n        woocommerce_server_url +\r\n        \"products/categories\" +\r\n        woocommerce_customer_signature +\r\n        \"&page=\" +\r\n        page +\r\n        \"&per_page=\" +\r\n        per_page,\r\n      method: \"GET\",\r\n    };\r\n\r\n    try {\r\n      axios\r\n        .get(request.url)\r\n        .then((response) => {\r\n          console.log(\"Get All categories success data :\", response);\r\n          dispatch({\r\n            type: ActionTypes.CLIENT_GET_ALL_CATEGORY_SUCCESS,\r\n            payload: response,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.CLIENT_GET_ALL_CATEGORY_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.CLIENT_GET_ALL_CATEGORY_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n","D:\\Agence 2i works\\front\\src\\Reducers\\Tags.js",["404"],"import React from \"react\";\r\nimport * as ActionTypes from \"../Actions/index\";\r\n\r\nconst tagsState = {\r\n  allTags: [],\r\n  totalTags: 0,\r\n  totalPagesTags: 0,\r\n};\r\n\r\nexport default function Tags(state = tagsState, action = {}) {\r\n  switch (action.type) {\r\n    case ActionTypes.CLIENT_GET_ALL_TAGS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errors: action.error ? action.payload.errors : null,\r\n      };\r\n    case ActionTypes.CLIENT_GET_ALL_TAGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allTags: action.payload.data,\r\n        totalTags: action.payload.headers[\"x-wp-total\"],\r\n        totalPagesTags: action.payload.headers[\"x-wp-totalpages\"],\r\n        loading: false,\r\n        errors: action.error ? action.payload.errors : null,\r\n      };\r\n    case ActionTypes.CLIENT_GET_ALL_TAGS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload.errors,\r\n      };\r\n    /******************************************* */\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Actions\\Tags.js",["405","406","407"],"import axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SERVER_URL } from \"../constants/BackendConstants\";\r\nimport { productData } from \"../Data/ProductData\";\r\nimport * as ActionTypes from \"./index\";\r\n\r\nconst woocommerce_server_url =\r\n  \"https://stupefied-johnson.51-210-46-0.plesk.page/wp-json/wc/v3/\";\r\nconst woocommerce_customer_signature =\r\n  \"?consumer_key=ck_a28470d1e5102f9afb461de8b87decb1fa2c9501&consumer_secret=cs_3e6b011c13c51129ddc74a5c1d7cd1074eb397a5\";\r\n\r\nexport const ClientGetAllTags = (auth, page, per_page) => {\r\n  return async (dispatch) => {\r\n    console.log(\"in reQUEST GET ALL tags\");\r\n    const request = {\r\n      url:\r\n        woocommerce_server_url +\r\n        \"products/tags\" +\r\n        woocommerce_customer_signature +\r\n        \"&page=\" +\r\n        page +\r\n        \"&per_page=\" +\r\n        per_page,\r\n      method: \"GET\",\r\n    };\r\n\r\n    try {\r\n      axios\r\n        .get(request.url)\r\n        .then((response) => {\r\n          console.log(\"Get All tags success data :\", response);\r\n          dispatch({\r\n            type: ActionTypes.CLIENT_GET_ALL_TAGS_SUCCESS,\r\n            payload: response,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.CLIENT_GET_ALL_TAGS_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.CLIENT_GET_ALL_TAGS_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n","D:\\Agence 2i works\\front\\src\\Pages\\CaissePage\\CaissePage.js",["408"],"D:\\Agence 2i works\\front\\src\\Reducers\\Customer.js",["409","410","411","412","413","414","415","416"],"import * as ActionTypes from \"../Actions/index\"\r\n\r\nconst customerState = {\r\n    customers: [],\r\n    loading: false,\r\n    errors: null\r\n\r\n}\r\n\r\nexport default function Customer(state = customerState, action = {}) {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_ALL_CUSTOMERS_SUCCESS:\r\n            return { ...state, errors: null, customers: action.payload.data, total: action.payload.headers[\"x-wp-total\"], total_pages: action.payload.headers[\"x-wp-totalpages\"], loading: false }\r\n            break;\r\n\r\n        case ActionTypes.GET_ALL_CUSTOMERS_FAILURE:\r\n            return { ...state, errors: action.payload.errors, loading: false }\r\n            break;\r\n            case ActionTypes.DELETE_CUSTOMER_SUCCESS:\r\n                return { ...state, errors: null, loading: false }\r\n                break;\r\n    \r\n            case ActionTypes.DELETE_CUSTOMER_FAILURE:\r\n                return { ...state, errors: action.payload.errors, loading: false }\r\n                break;\r\n\r\n                case ActionTypes.ADD_CUSTOMER_SUCCESS:\r\n                    return { ...state, errors: null, loading: false }\r\n                    break;\r\n        \r\n                case ActionTypes.ADD_CUSTOMER_FAILURE:\r\n                    return { ...state, errors: action.payload.errors, loading: false }\r\n                    break;\r\n                    case ActionTypes.UPDATE_CUSTOMER_SUCCESS:\r\n                        return { ...state, errors: null, loading: false }\r\n                        break;\r\n            \r\n                    case ActionTypes.UPDATE_CUSTOMER_FAILURE:\r\n                        return { ...state, errors: action.payload.errors, loading: false }\r\n                        break;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Reducers\\PictureWordPress.js",["417"],"import React from \"react\";\r\nimport * as ActionTypes from \"../Actions/index\";\r\n\r\nconst pictureState ={\r\n  allPictures: [],\r\n  totalPictures: 0,\r\n  totalPagesPictures: 0,\r\n};\r\n\r\nexport default function Category(state = pictureState, action = {}) {\r\n  switch (action.type) {\r\n  \r\n      case ActionTypes.CATEGORY_UPLOAD_PICTURE_SUCCESS:\r\n        return {\r\n          ...state,\r\n    \r\n          loading: false,\r\n        };\r\n      case ActionTypes.CATEGORY_UPLOAD_PICTURE_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          errors: action.payload.errors,\r\n        };\r\n        case ActionTypes.CATEGORY_UPLOAD_PICTURE_TOKEN_SUCCESS:\r\n            return {\r\n            ...state,\r\n              loading: false,\r\n             \r\n            };\r\n          case ActionTypes.CATEGORY_UPLOAD_PICTURE_TOKEN_FAILURE:\r\n            return {\r\n              ...state,\r\n              loading: false,\r\n              errors: action.payload.errors,\r\n            };\r\n\r\n            case ActionTypes.GET_ALL_PICTURES_SUCCESS:\r\n                return {\r\n                ...state,\r\n                  loading: false,\r\n                  allPictures:action.payload.data,\r\n                  totalPictures:action.payload.headers[\"x-wp-total\"],\r\n                  totalPagesPictures:action.payload.headers[\"x-wp-totalpages\"]\r\n                 \r\n                };\r\n              case ActionTypes.GET_ALL_PICTURES_FAILURE:\r\n                return {\r\n                  ...state,\r\n                  loading: false,\r\n                  errors: action.payload.errors,\r\n                };\r\n    /******************************************* */\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\Agence 2i works\\front\\src\\Pages\\CustomersPages\\CustomersList\\CustomersList.js",["418","419","420","421","422","423","424","425"],"import React, { useEffect, useState } from 'react'\r\nimport { AddCustomer, DeleteCustomer, GetAllCustomers, UpdateCustomer } from '../../../Actions/Customer';\r\nimport \"./CustomersList.css\"\r\nimport * as IConAi from \"react-icons/ai\"\r\nimport * as IConBi from \"react-icons/bi\"\r\nimport * as IConBs from \"react-icons/bs\"\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Accordion, Button, Card, Form, Modal } from 'react-bootstrap';\r\nimport { render } from '@testing-library/react';\r\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport * as IoiIcons from \"react-icons/io\";\r\n\r\nfunction TablePaginationActions(props) {\r\n    // const classes = useStyles1();\r\n    // const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"première page\"\r\n            >\r\n                {<LastPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"page précédente\">\r\n                {<KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"page suivante\"\r\n            >\r\n                {<KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {/*theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />*/}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    /* count: propTypes.number.isRequired,\r\n     onChangePage: propTypes.func.isRequired,\r\n     page: propTypes.number.isRequired,\r\n     rowsPerPage: propTypes.number.isRequired,\r\n     */\r\n};\r\n\r\n\r\nfunction CustomersList(props) {\r\n\r\n    const [customers, setCustomers] = useState([]);\r\n    const [ModalAddState, setModalAddState] = useState(false);\r\n    const [customerDataUpdate, setCustomerDataUpdate] = useState({ billing: {}, shipping: {} });\r\n    const [customerAddData, setCustomerAddData] = useState({ billing: {}, shipping: {} });\r\n    const [ModalDetailsState, setModalDetailsState] = useState(false);\r\n    const [ModalDeleteState, setModalDeleteState] = useState(false);\r\n    const [ModalUpdateState, setModalUpdateState] = useState(false);\r\n    const [totalpages, setTotalPages] = useState(1);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(1);\r\n    const [selectedCustomer, setSelectedCustomer] = useState({});\r\n    const toggleDeleteCustomer = (customer) => { setModalDeleteState(!ModalDeleteState); setSelectedCustomer(customer); };\r\n    const toggleUpdateCustomer = (customer) => { setModalUpdateState(!ModalUpdateState); setCustomerDataUpdate(customer); };\r\n\r\n    const toggleAddCustomer = () => { setModalAddState(!ModalAddState) };\r\n    const toggleDetailsCustomer = (customer) => {\r\n        setModalDetailsState(!ModalDetailsState);\r\n        setSelectedCustomer(customer)\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        setRowsPerPage(10);\r\n    }, []);\r\n    const getData = () => {\r\n        props.getCustomers(rowsPerPage, page);\r\n        setCustomers(props.customers);\r\n        setTotalPages(props.total_customer_pages);\r\n    };\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, customers.length - page * rowsPerPage);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(1);\r\n        props.getCustomers(rowsPerPage, page);\r\n        setCustomers((props.customers));\r\n    };\r\n\r\n    const onChangeFormAdd = (attribute, value) => {\r\n        let customer1 = customerAddData;\r\n        customer1[attribute] = value;\r\n        setCustomerAddData(customer1);\r\n    };\r\n    const onChangeFormAddBilling = (attribute, value) => {\r\n        let customer1 = customerAddData;\r\n        customer1.billing[attribute] = value;\r\n        setCustomerAddData(customer1);\r\n    };\r\n    const onChangeFormAddShipping = (attribute, value) => {\r\n        let customer1 = customerAddData;\r\n        customer1.shipping[attribute] = value;\r\n        setCustomerAddData(customer1);\r\n    };\r\n\r\n    const onChangeFormUpdate = (attribute, value) => {\r\n        let customer1 = customerDataUpdate;\r\n        customer1[attribute] = value;\r\n        setCustomerDataUpdate(customer1);\r\n    };\r\n    const onChangeFormUpdateBilling = (attribute, value) => {\r\n        let customer1 = customerDataUpdate;\r\n        customer1.billing[attribute] = value;\r\n        setCustomerDataUpdate(customer1);\r\n    };\r\n    const onChangeFormUpdateShipping = (attribute, value) => {\r\n        let customer1 = customerDataUpdate;\r\n        customer1.shipping[attribute] = value;\r\n        setCustomerDataUpdate(customer1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <button type=\"button\" className=\"btn btn-outline-primary col-md-2 offset-9 mt-5\" data-toggle=\"modal\" onClick={() => { toggleAddCustomer(); }}>\r\n                    Ajouter un client\r\n            </button>\r\n            </div>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{ width: 160 }} align=\"left\">Nom</TableCell>\r\n                            <TableCell style={{ width: 160 }} align=\"left\">Prénom</TableCell>\r\n                            <TableCell style={{ width: 160 }} align=\"left\">Nom d'utilisateur</TableCell>\r\n                            <TableCell style={{ width: 160 }} align=\"left\">Adresse électronique</TableCell>\r\n                            <TableCell style={{ width: 190 }} align=\"left\">Points de fidélité</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            customers.map((customer) => (\r\n                                <TableRow key={customers.lastname}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {customer.name}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 160 }} align=\"left\">\r\n                                        {customer.firstname}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 160 }} align=\"left\">\r\n                                        {customer.username}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 160 }} align=\"left\">\r\n                                        {customer.email}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 160 }} align=\"left\">\r\n                                        {customer.meta_data[0].value}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 50 }} align=\"left\" onClick={() => { toggleDetailsCustomer(customer) }}>\r\n                                        <IConBi.BiDetail color=\"#013264\" size=\"20\" />\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 50 }} align=\"left\">\r\n                                        <IConBs.BsTrash color=\"#b90000\" size=\"20\" onClick={() => { toggleDeleteCustomer(customer); }} />\r\n\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 50 }} align=\"left\">\r\n                                        <IConBi.BiEdit onClick={() => { toggleUpdateCustomer(customer); }} color=\"#ffc31f\" size=\"20\" className=\"icon-edit-hover \" />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                    <TableFooter>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25]}\r\n                                colSpan={3}\r\n                                count={customers.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                    native: true,\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Modal dialogClassName=\"dialog-right\" scrollable=\"true\" onHide={() => setModalAddState(false)} show={ModalAddState}>\r\n                <Modal.Header><Modal.Title>Ajout d'un client</Modal.Title></Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Adresse électronique</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"foulen.benfoulen@gmail.com\" onChange={(e) => { onChangeFormAdd(\"email\", e.target.value) }} />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Nom</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"ben foulen\" onChange={(e) => { onChangeFormAdd(\"last_name\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Prenom</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"foulen\" onChange={(e) => { onChangeFormAdd(\"first_name\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Nom d'utilisateur</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"ben foulen\" onChange={(e) => { onChangeFormAdd(\"username\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Accordion defaultActiveKey=\"0\">\r\n\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                        Informations de facturation\r\n      </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Nom</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"ben foulen\" onChange={(e) => { onChangeFormAddBilling(\"last_name\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Prénom</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"foulen\" onChange={(e) => { onChangeFormAddBilling(\"first_name\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Tél</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"216 xx xxx xxx\" onChange={(e) => { onChangeFormAddBilling(\"phone\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Adresse électronique</Form.Label>\r\n                                                <Form.Control type=\"email\" placeholder=\"foulen.benfoulen@gmail.com\" onChange={(e) => { onChangeFormAddBilling(\"email\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Pays</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Tunisie\" onChange={(e) => { onChangeFormAddBilling(\"country\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Gouvernaurat</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Tunis\" onChange={(e) => { onChangeFormAddBilling(\"city\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Code postal</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"3062\" onChange={(e) => { onChangeFormAddBilling(\"postcode\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Adresse 1</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"chotrana rue ..\" onChange={(e) => { onChangeFormAddBilling(\"address_1\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>adresse 2</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"votre adresse\" onChange={(e) => { onChangeFormAddBilling(\"address_2\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Société</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"\" onChange={(e) => { onChangeFormAddBilling(\"company\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n\r\n\r\n\r\n                        <Accordion defaultActiveKey=\"0\">\r\n\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                        Informations de livraison\r\n      </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Nom</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"ben foulen\" onChange={(e) => { onChangeFormAddShipping(\"last_name\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Prénom</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"foulen\" onChange={(e) => { onChangeFormAddShipping(\"first_name\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Pays</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Tunisie\" onChange={(e) => { onChangeFormAddShipping(\"country\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Gouvernaurat</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Tunis\" onChange={(e) => { onChangeFormAddShipping(\"city\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Code postal</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"3062\" onChange={(e) => { onChangeFormAddShipping(\"postcode\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Adresse 1</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"chotrana rue ..\" onChange={(e) => { onChangeFormAddShipping(\"address_1\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>adresse 2</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"votre adresse\" onChange={(e) => { onChangeFormAddShipping(\"address_2\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Société</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"\" onChange={(e) => { onChangeFormAddShipping(\"company\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n\r\n\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleAddCustomer(); }}>\r\n                        Annuler\r\n</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleAddCustomer(); console.log(customerAddData); props.addCustomer(customerAddData); getData() }}>\r\n                        Ajouter\r\n</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" scrollable=\"true\" onHide={() => setModalDetailsState(false)} show={ModalDetailsState}>\r\n                <Modal.Body>\r\n                    {selectedCustomer.hasOwnProperty(\"first_name\") ? (\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"customer-simple-infos-picture-data-modal col-md-6 \">\r\n                                    <img className=\"customer-simple-infos-picture-modal\" src={selectedCustomer.avatar_url}></img>\r\n                                    <div className=\"customer-simple-infos-data-modal\">\r\n                                        <div className=\"customer-simple-infos-data-username-modal\">{selectedCustomer.username}</div>\r\n                                        <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.email}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"customer-simple-infos-points-modal col-md-2 offset-4  \"> <div>{selectedCustomer.hasOwnProperty(\"meta_data\") ? selectedCustomer.meta_data[0].value : 0}</div>\r\n                                    <div> points</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-4\">\r\n                                <div className=\"customer-personal-info-modal col-md-12\">\r\n                                    <div className=\"modal-section-title\">Informations personelles</div>\r\n                                    <div className=\"customer-personal-info-modal-row \">\r\n                                        <div className=\"customer-simple-infos-data-username-modal\">Nom:</div>\r\n                                        <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.last_name}</div>\r\n                                    </div>\r\n                                    <div className=\"customer-personal-info-modal-row \">\r\n                                        <div className=\"customer-simple-infos-data-username-modal\">Prénom:</div>\r\n                                        <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.first_name}</div>\r\n                                    </div>\r\n                                    <div className=\"customer-personal-info-modal-row\">\r\n                                        <div className=\"customer-simple-infos-data-username-modal\">Email:</div>\r\n                                        <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.email}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\" col-md-6\">\r\n                                    <div className=\"customer-billing-shipping\">\r\n                                        <div className=\"modal-section-title\">Information de livraison</div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Nom:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.last_name}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Prénom:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.first_name}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Email:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.email}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Tél:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.phone}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Pays:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.country}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Gouvernaurat:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.state}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Adresse 1:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.address_1}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Adresse 2:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.address_2}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Société:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.shipping.company}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\" col-md-6\">\r\n                                    <div className=\"customer-billing-shipping \">\r\n                                        <div className=\"modal-section-title\">Information de facturation</div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Nom:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.last_name}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Prénom:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.first_name}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Email:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.email}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Tél:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.phone}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Pays:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.country}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Gouvernaurat:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.state}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Adresse 1:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.address_1}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Adresse 2:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.address_2}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Code postal:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.postcode}</div>\r\n                                        </div>\r\n                                        <div className=\"customer-personal-info-modal-row\">\r\n                                            <div className=\"customer-simple-infos-data-username-modal\">Société:</div>\r\n                                            <div className=\"customer-simple-infos-data-email-modal\">{selectedCustomer.billing.company}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    ) : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleDetailsCustomer({}); }}>\r\n                        Fermer\r\n</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleDetailsCustomer(selectedCustomer); toggleUpdateCustomer(selectedCustomer) }}>\r\n                        Modifier\r\n</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal onHide={() => toggleDeleteCustomer()} show={ModalDeleteState}>\r\n                <Modal.Header><Modal.Title>suppression d'un client</Modal.Title></Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Voulez vous vraiment supprimer {selectedCustomer.username} ?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleDeleteCustomer({}); }}>\r\n                        Annuler\r\n</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleDeleteCustomer({}); props.deleteCustomer(selectedCustomer.id, rowsPerPage, page); setSelectedCustomer({}); getData(); }}>\r\n                        supprimer\r\n</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" scrollable=\"true\" onHide={() => setModalUpdateState(false)} show={ModalUpdateState}>\r\n                <Modal.Header><Modal.Title>Modification des informations client</Modal.Title></Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Adresse électronique</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"foulen.benfoulen@gmail.com\"   defaultValue={customerDataUpdate.email} onChange={(e) => { onChangeFormUpdate(\"email\", e.target.value) }} />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Nom</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"ben foulen\" defaultValue={customerDataUpdate.last_name} onChange={(e) => { onChangeFormUpdate(\"last_name\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Prenom</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"foulen\" defaultValue={customerDataUpdate.first_name} onChange={(e) => { onChangeFormUpdate(\"first_name\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Nom d'utilisateur</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"ben foulen\" defaultValue={customerDataUpdate.username} onChange={(e) => { onChangeFormUpdate(\"username\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Accordion defaultActiveKey=\"0\">\r\n\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                        Informations de facturation\r\n      </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Nom</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"ben foulen\" defaultValue={customerDataUpdate.billing.last_name} onChange={(e) => { onChangeFormUpdateBilling(\"last_name\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Prénom</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"foulen\" defaultValue={customerDataUpdate.billing.first_name} onChange={(e) => { onChangeFormUpdateBilling(\"first_name\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Tél</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"216 xx xxx xxx\" defaultValue={customerDataUpdate.billing.phone} onChange={(e) => { onChangeFormUpdateBilling(\"phone\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Adresse électronique</Form.Label>\r\n                                                <Form.Control type=\"email\" placeholder=\"foulen.benfoulen@gmail.com\" defaultValue={customerDataUpdate.billing.email} onChange={(e) => { onChangeFormUpdateBilling(\"email\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Pays</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Tunisie\" defaultValue={customerDataUpdate.billing.country} onChange={(e) => { onChangeFormUpdateBilling(\"country\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Gouvernaurat</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Tunis\" defaultValue={customerDataUpdate.billing.city} onChange={(e) => { onChangeFormUpdateBilling(\"city\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Code postal</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"3062\" defaultValue={customerDataUpdate.billing.postcode} onChange={(e) => { onChangeFormUpdateBilling(\"postcode\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Adresse 1</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"chotrana rue ..\" defaultValue={customerDataUpdate.billing.address_1} onChange={(e) => { onChangeFormUpdateBilling(\"address_1\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>adresse 2</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"votre adresse\" defaultValue={customerDataUpdate.billing.address_2} onChange={(e) => { onChangeFormUpdateBilling(\"address_2\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Société</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"\" defaultValue={customerDataUpdate.billing.company} onChange={(e) => { onChangeFormUpdateBilling(\"company\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n\r\n\r\n\r\n                        <Accordion defaultActiveKey=\"0\">\r\n\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                        Informations de livraison\r\n      </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Nom</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"ben foulen\" defaultValue={customerDataUpdate.shipping.last_name} onChange={(e) => { onChangeFormUpdateShipping(\"last_name\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Prénom</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"foulen\" defaultValue={customerDataUpdate.shipping.first_name} onChange={(e) => { onChangeFormUpdateShipping(\"first_name\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Pays</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Tunisie\" defaultValue={customerDataUpdate.shipping.country} onChange={(e) => { onChangeFormUpdateShipping(\"country\", e.target.value) }} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Gouvernaurat</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"Tunis\" defaultValue={customerDataUpdate.shipping.city} onChange={(e) => { onChangeFormUpdateShipping(\"city\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Code postal</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"3062\" defaultValue={customerDataUpdate.shipping.postcode} onChange={(e) => { onChangeFormUpdateShipping(\"postcode\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Adresse 1</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"chotrana rue ..\" defaultValue={customerDataUpdate.shipping.address_1} onChange={(e) => { onChangeFormUpdateShipping(\"address_1\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>adresse 2</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"votre adresse\" defaultValue={customerDataUpdate.shipping.address_2} onChange={(e) => { onChangeFormUpdateShipping(\"address_2\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Société</Form.Label>\r\n                                                <Form.Control type=\"text\" placeholder=\"\" defaultValue={customerDataUpdate.shipping.company} onChange={(e) => { onChangeFormUpdateShipping(\"company\", e.target.value) }} />\r\n                                            </Form.Group>\r\n\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleUpdateCustomer({}); }}>\r\n                        Annuler\r\n</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { console.log(customerDataUpdate);props.updateCustomer(customerDataUpdate.id, customerDataUpdate, rowsPerPage, page);  toggleUpdateCustomer({}); setSelectedCustomer({}); getData(); }}>\r\n                        Modifier\r\n</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(\"in state\",state);\r\n    return { user: state.Auth.current_user, customers: state.Customer.customers, total_customers: state.Customer.total, total_customer_pages: state.Customer.total_pages };\r\n};\r\n\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        getCustomers: (per_page, page) => {\r\n            dispatch(GetAllCustomers(per_page, page))\r\n        },\r\n        deleteCustomer: (id, per_page, page) => { dispatch(DeleteCustomer(id, per_page, page)) },\r\n        addCustomer: (customer) => {\r\n            dispatch(AddCustomer(customer))\r\n        },\r\n        updateCustomer: (id, customer) => {\r\n            dispatch(UpdateCustomer(id, customer))\r\n        },\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(CustomersList)\r\n\r\n\r\n","D:\\Agence 2i works\\front\\src\\Pages\\CategoryPages\\CategoryList\\CategoryList.js",["426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"import React, { useEffect, useState } from 'react'\r\nimport \"./CategoryList.css\"\r\nimport * as IConAi from \"react-icons/ai\"\r\nimport * as IConBi from \"react-icons/bi\"\r\nimport * as IConBs from \"react-icons/bs\"\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Accordion, Button, Card, Form, Modal } from 'react-bootstrap';\r\nimport { render } from '@testing-library/react';\r\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow } from '@material-ui/core';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport * as IoiIcons from \"react-icons/io\";\r\nimport {  ClientGetAllCategories } from '../../../Actions/Category'\r\nimport { RequestTokenuploadPictureToServer } from '../../../Actions/PictureWordPress'\r\n\r\nfunction TablePaginationActions(props) {\r\n    // const classes = useStyles1();\r\n    // const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"première page\"\r\n            >\r\n                {<LastPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"page précédente\">\r\n                {<KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"page suivante\"\r\n            >\r\n                {<KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {/*theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />*/}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    /* count: propTypes.number.isRequired,\r\n     onChangePage: propTypes.func.isRequired,\r\n     page: propTypes.number.isRequired,\r\n     rowsPerPage: propTypes.number.isRequired,\r\n     */\r\n};\r\n\r\n\r\nfunction CategoryList(props) {\r\n\r\n    const [categories, setcategories] = useState([]);\r\n    const [ModalAddState, setModalAddState] = useState(false);\r\n    const [CategoryDataUpdate, setCategoryDataUpdate] = useState({  });\r\n    const [CategoryAddData, setCategoryAddData] = useState({});\r\n    const [ModalDetailsState, setModalDetailsState] = useState(false);\r\n    const [ModalDeleteState, setModalDeleteState] = useState(false);\r\n    const [ModalUpdateState, setModalUpdateState] = useState(false);\r\n    const [totalpages, setTotalPages] = useState(1);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(1);\r\n    const [selectedCategory, setselectedCategory] = useState({});\r\n    const toggleDeleteCategory = (Category) => { setModalDeleteState(!ModalDeleteState); setselectedCategory(Category); };\r\n    const toggleUpdateCategory = (Category) => { setModalUpdateState(!ModalUpdateState); setCategoryDataUpdate(Category); };\r\n\r\n    const toggleAddCategory = () => { setModalAddState(!ModalAddState) };\r\n    const toggleDetailsCategory = (Category) => {\r\n        setModalDetailsState(!ModalDetailsState);\r\n        setselectedCategory(Category)\r\n    };\r\n    const [resultImageAdd, setResultImageAdd] = React.useState(\"\");\r\n    const [imageAddCategory, setImageAddCategory] = React.useState(\"\");\r\n        const [result, setResult] = React.useState(\"\");\r\n    \r\n    function uploader(e) {\r\n        const imageFile = e.target.files[0];\r\n  \r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", (e) => {\r\n          setResult(e.target.result);\r\n          let caption=\"test image from front\";\r\n          let title=\"titleFromFront\";\r\n          props.uploadPictureToServer(\"anissa\",\"Poimlknbv13785\",imageFile,title,caption)\r\n        });\r\n  \r\n        reader.readAsDataURL(imageFile);\r\n      //  props.uploadPictureToServer(e.target.files[0],title,caption)\r\n      }\r\n  \r\n    //  return { result, uploader };\r\n    \r\n\r\n    useEffect(() => {\r\n        getData();\r\n        setRowsPerPage(10);\r\n    }, []);\r\n    const getData = () => {\r\n        props.getCategories(\"\",page,rowsPerPage);\r\n        setcategories(props.categories);\r\n        setTotalPages(props.total_category_pages);\r\n    };\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, categories.length - page * rowsPerPage);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(1);\r\n        props.getCategories(\"\",page,rowsPerPage);\r\n        setcategories((props.categories));\r\n    };\r\n\r\n    const onChangeFormAdd = (attribute, value) => {\r\n        let Category1 = CategoryAddData;\r\n        Category1[attribute] = value;\r\n        setCategoryAddData(Category1);\r\n    };\r\n    const onChangeFormAddImage = (attribute, value) => {\r\n        let Category1 = CategoryAddData;\r\n        Category1.image[attribute]= value;\r\n        setCategoryAddData(Category1);\r\n    };\r\n    const onChangeFormAddShipping = (attribute, value) => {\r\n        let Category1 = CategoryAddData;\r\n        Category1.shipping[attribute] = value;\r\n        setCategoryAddData(Category1);\r\n    };\r\n\r\n    const onChangeFormUpdate = (attribute, value) => {\r\n        let Category1 = CategoryDataUpdate;\r\n        Category1[attribute] = value;\r\n        setCategoryDataUpdate(Category1);\r\n    };\r\n    const onChangeFormUpdateBilling = (attribute, value) => {\r\n        let Category1 = CategoryDataUpdate;\r\n        Category1.billing[attribute] = value;\r\n        setCategoryDataUpdate(Category1);\r\n    };\r\n    const onChangeFormUpdateShipping = (attribute, value) => {\r\n        let Category1 = CategoryDataUpdate;\r\n        Category1.shipping[attribute] = value;\r\n        setCategoryDataUpdate(Category1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <button type=\"button\" className=\"btn btn-outline-primary col-md-2 offset-9 mt-5\" data-toggle=\"modal\" onClick={() => { toggleAddCategory(); }}>\r\n                    Ajouter une catégorie\r\n            </button>\r\n            </div>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell style={{ width: 160 }} align=\"left\">Nom</TableCell>\r\n                            <TableCell style={{ width: 160 }} align=\"left\">Slug</TableCell>\r\n                            <TableCell style={{ width: 160 }} align=\"left\">Categorie parent</TableCell>\r\n                            <TableCell style={{ width: 160 }} align=\"left\">description</TableCell>\r\n                            <TableCell style={{ width: 190 }} align=\"left\">Nombre de produits</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            categories.map((Category) => (\r\n                                <TableRow key={categories.lastname}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {Category.name}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 160 }} align=\"left\">\r\n                                        {Category.slug}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 160 }} align=\"left\">\r\n                                        {Category.parent ==0? \"pas de categorie parente\":Category.parent}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 160 }} align=\"left\">\r\n                                        {Category.description}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 160 }} align=\"left\">\r\n                                        {Category.count}\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 50 }} align=\"left\" onClick={() => { toggleDetailsCategory(Category); console.log(Category) }}>\r\n                                        <IConBi.BiDetail color=\"#013264\" size=\"20\" />\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 50 }} align=\"left\">\r\n                                        <IConBs.BsTrash color=\"#b90000\" size=\"20\" onClick={() => { toggleDeleteCategory(Category); }} />\r\n\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 50 }} align=\"left\">\r\n                                        <IConBi.BiEdit onClick={() => { toggleUpdateCategory(Category); }} color=\"#ffc31f\" size=\"20\" className=\"icon-edit-hover \" />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n\r\n                        {emptyRows > 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                    <TableFooter>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25]}\r\n                                colSpan={3}\r\n                                count={categories.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                    native: true,\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Modal dialogClassName=\"dialog-right\" scrollable=\"true\" onHide={() => setModalAddState(false)} show={ModalAddState}>\r\n                <Modal.Header><Modal.Title>Ajout d'une catégorie</Modal.Title></Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Nom</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"exemple\" onChange={(e) => { onChangeFormAdd(\"name\", e.target.value) }} />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"exemple\" onChange={(e) => { onChangeFormAdd(\"description\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Slug</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"exemple\" onChange={(e) => { onChangeFormAdd(\"slug\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>catégorie mère</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"ben foulen\" onChange={(e) => { onChangeFormAdd(\"parent\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Accordion defaultActiveKey=\"0\">\r\n\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                        Images\r\n      </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>image</Form.Label>\r\n                                                <input type=\"file\" onChange={(e) => { setImageAddCategory(e.target.files[0]); uploader(e);  }}/>\r\n                                            </Form.Group>\r\n                                          \r\n\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n\r\n\r\n\r\n                      \r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleAddCategory(); }}>\r\n                        Annuler\r\n</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleAddCategory(); console.log(CategoryAddData); props.addCategory(CategoryAddData); getData() }}>\r\n                        Ajouter\r\n</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" scrollable=\"true\" onHide={() => setModalDetailsState(false)} show={ModalDetailsState}>\r\n                <Modal.Body>\r\n                    {selectedCategory.hasOwnProperty(\"name\") ? (\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"Category-simple-infos-picture-data-modal col-md-6 \">\r\n                                  {selectedCategory.image!=null?  <img className=\"Category-simple-infos-picture-modal\" src={selectedCategory.image.src}></img>:null}\r\n                                    <div className=\"Category-simple-infos-data-modal\">\r\n                                        <div className=\"Category-simple-infos-data-username-modal\">{selectedCategory.name}</div>\r\n                                        <div className=\"Category-simple-infos-data-email-modal\">{selectedCategory.description}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"Category-simple-infos-points-modal col-md-2 offset-4  \"> <div>{selectedCategory.count }</div>\r\n                                    <div> produits</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-4\">\r\n                                <div className=\"Category-personal-info-modal col-md-12\">\r\n                                    <div className=\"modal-section-title\">Informations Générales</div>\r\n                                    <div className=\"Category-personal-info-modal-row \">\r\n                                        <div className=\"Category-simple-infos-data-username-modal\">Nom:</div>\r\n                                        <div className=\"Category-simple-infos-data-email-modal\">{selectedCategory.name}</div>\r\n                                    </div>\r\n                                    <div className=\"Category-personal-info-modal-row \">\r\n                                        <div className=\"Category-simple-infos-data-username-modal\">Description:</div>\r\n                                        <div className=\"Category-simple-infos-data-email-modal\">{selectedCategory.description}</div>\r\n                                    </div>\r\n                                    <div className=\"Category-personal-info-modal-row\">\r\n                                        <div className=\"Category-simple-infos-data-username-modal\">Catégorie mère:</div>\r\n                                        <div className=\"Category-simple-infos-data-email-modal\">{selectedCategory.parent}</div>\r\n                                    </div>\r\n                                    <div className=\"Category-personal-info-modal-row\">\r\n                                        <div className=\"Category-simple-infos-data-username-modal\">ordre dans le menu:</div>\r\n                                        <div className=\"Category-simple-infos-data-email-modal\">{selectedCategory.menu_order}</div>\r\n                                    </div>\r\n                                </div>\r\n                          \r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    ) : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleDetailsCategory({}); }}>\r\n                        Fermer\r\n</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleDetailsCategory(selectedCategory); toggleUpdateCategory(selectedCategory) }}>\r\n                        Modifier\r\n</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal onHide={() => toggleDeleteCategory()} show={ModalDeleteState}>\r\n                <Modal.Header><Modal.Title>suppression d'une Catégorie</Modal.Title></Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Voulez vous vraiment supprimer {selectedCategory.name} ?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleDeleteCategory({}); }}>\r\n                        Annuler\r\n</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleDeleteCategory({}); props.deleteCategory(selectedCategory.id, rowsPerPage, page); setselectedCategory({}); getData(); }}>\r\n                        supprimer\r\n</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" scrollable=\"true\" onHide={() => setModalUpdateState(false)} show={ModalUpdateState}>\r\n                <Modal.Header><Modal.Title>Modification des informations d'une catégorie</Modal.Title></Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Nom</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"exemple\"   defaultValue={CategoryDataUpdate.name} onChange={(e) => { onChangeFormUpdate(\"name\", e.target.value) }} />\r\n\r\n                        </Form.Group> \r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Slug</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"exemple\"   defaultValue={CategoryDataUpdate.slug} onChange={(e) => { onChangeFormUpdate(\"slug\", e.target.value) }} />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"exemple\" defaultValue={CategoryDataUpdate.description} onChange={(e) => { onChangeFormUpdate(\"description\", e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Catégorie mère</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"foulen\" defaultValue={CategoryDataUpdate.first_name} onChange={(e) => { onChangeFormUpdate(\"parent\", e.target.value) }} />\r\n                        </Form.Group>\r\n                       \r\n                        <Accordion defaultActiveKey=\"0\">\r\n\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                                       Images\r\n      </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                          \r\n\r\n                                          \r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { toggleUpdateCategory({}); }}>\r\n                        Annuler\r\n</button>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" onClick={() => { console.log(CategoryDataUpdate);props.updateCategory(CategoryDataUpdate.id, CategoryDataUpdate, rowsPerPage, page);  toggleUpdateCategory({}); setselectedCategory({}); getData(); }}>\r\n                        Modifier\r\n</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(\"in state\",state);\r\n    return { user: state.Auth.current_user, categories: state.Category.allCategories, total_categories: state.Category.totalCategory, total_category_pages: state.Category.totalPagesCategory };\r\n};\r\n\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        getCategories: (auth,page, per_page) => {\r\n            dispatch(ClientGetAllCategories(auth,page, per_page))\r\n        },\r\n        uploadPictureToServer: (username,password,file,title, caption) => {\r\n            dispatch(RequestTokenuploadPictureToServer(username,password,file,title, caption))\r\n        },\r\n       /* deleteCategory: (id, per_page, page) => { dispatch(DeleteCategory(id, per_page, page)) },\r\n        addCategory: (Category) => {\r\n            dispatch(AddCategory(Category))\r\n        },\r\n        updateCategory: (id, Category) => {\r\n            dispatch(UpdateCategory(id, Category))\r\n        },*/\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(CategoryList)\r\n\r\n\r\n\r\n","D:\\Agence 2i works\\front\\src\\Components\\CartCaisse\\CartCaisse.js",["443","444","445"],"D:\\Agence 2i works\\front\\src\\Components\\AllProductsCaisse\\AllProductsCaisse.js",["446"],"D:\\Agence 2i works\\front\\src\\Components\\AllUsersCardCaisse\\AllUsersListCaisse.js",[],"D:\\Agence 2i works\\front\\src\\Actions\\PictureWordPress.js",[],"D:\\Agence 2i works\\front\\src\\Components\\ProductCaisse\\ProductCaisse.js",["447","448","449"],"D:\\Agence 2i works\\front\\src\\Components\\ProductCart\\ProductCart.js",[],"D:\\Agence 2i works\\front\\src\\Actions\\Customer.js",["450","451"],"import * as ActionTypes from \"./index\";\r\nimport { WP_JSON } from \"../constants/BackendConstants\";\r\nimport OAuth from \"oauth-1.0a\";\r\nimport axios from \"axios\";\r\nimport crypto from \"crypto\";\r\n\r\nexport const GetAllCustomers = (per_page, page) => {\r\n  return async (dispatch) => {\r\n    //   console.log(\"in reQUEST GET ALL FEATURES\");\r\n    const token = {\r\n      key: \"ck_2a88c024105b75fccb82d8252bcfe1060286007d\",\r\n      secret: \"cs_7debf8ce3c6856df60415ecb2c130c1c6b60f022\",\r\n    };\r\n\r\n    try {\r\n      axios\r\n        .get(\r\n          WP_JSON +\r\n            \"wc/v3/customers?consumer_key=\" +\r\n            token.key +\r\n            \"&consumer_secret=\" +\r\n            token.secret +\r\n            \"&per_page=\" +\r\n            per_page +\r\n            \"&page=\" +\r\n            page,\r\n          {}\r\n        )\r\n        .then((response) => {\r\n          console.log(\"GetAllFeatures success data :\", response);\r\n          dispatch({\r\n            type: ActionTypes.GET_ALL_CUSTOMERS_SUCCESS,\r\n            payload: response,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.GET_ALL_CUSTOMERS_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.GET_ALL_CUSTOMERS_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const DeleteCustomer = (id, per_page, page) => {\r\n  return async (dispatch) => {\r\n    //   console.log(\"in reQUEST GET ALL FEATURES\");\r\n    const token = {\r\n      key: \"ck_2a88c024105b75fccb82d8252bcfe1060286007d\",\r\n      secret: \"cs_7debf8ce3c6856df60415ecb2c130c1c6b60f022\",\r\n    };\r\n\r\n    try {\r\n      axios\r\n        .delete(\r\n          WP_JSON +\r\n            \"wc/v3/customers/\" +\r\n            id +\r\n            \"?force=true&consumer_key=\" +\r\n            token.key +\r\n            \"&consumer_secret=\" +\r\n            token.secret,\r\n          {}\r\n        )\r\n        .then((response) => {\r\n          console.log(\"Delete customer data :\", response);\r\n          dispatch({\r\n            type: ActionTypes.DELETE_CUSTOMER_SUCCESS,\r\n            payload: response,\r\n          });\r\n          dispatch(GetAllCustomers(per_page, page));\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.DELETE_CUSTOMER_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.DELETE_CUSTOMER_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const AddCustomer = (customer) => {\r\n  return async (dispatch) => {\r\n    //   console.log(\"in reQUEST GET ALL FEATURES\");\r\n    const token = {\r\n      key: \"ck_2a88c024105b75fccb82d8252bcfe1060286007d\",\r\n      secret: \"cs_7debf8ce3c6856df60415ecb2c130c1c6b60f022\",\r\n    };\r\n\r\n    try {\r\n      axios\r\n        .post(\r\n          WP_JSON +\r\n            \"wc/v3/customers?consumer_key=\" +\r\n            token.key +\r\n            \"&consumer_secret=\" +\r\n            token.secret,\r\n          customer\r\n        )\r\n        .then((response) => {\r\n          console.log(\"add customer data :\", response);\r\n          dispatch({\r\n            type: ActionTypes.ADD_CUSTOMER_SUCCESS,\r\n            payload: response,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.ADD_CUSTOMER_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.ADD_CUSTOMER_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const UpdateCustomer = (id, customer) => {\r\n  return async (dispatch) => {\r\n    //   console.log(\"in reQUEST GET ALL FEATURES\");\r\n    const token = {\r\n      key: \"ck_2a88c024105b75fccb82d8252bcfe1060286007d\",\r\n      secret: \"cs_7debf8ce3c6856df60415ecb2c130c1c6b60f022\",\r\n    };\r\n\r\n    try {\r\n      axios\r\n        .put(\r\n          WP_JSON +\r\n            \"wc/v3/customers/\" +\r\n            id +\r\n            \"?consumer_key=\" +\r\n            token.key +\r\n            \"&consumer_secret=\" +\r\n            token.secret,\r\n          customer\r\n        )\r\n        .then((response) => {\r\n          console.log(\"add customer data :\", response);\r\n          dispatch({\r\n            type: ActionTypes.UPDATE_CUSTOMER_SUCCESS,\r\n            payload: response,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error :\", error);\r\n          dispatch({\r\n            type: ActionTypes.UPDATE_CUSTOMER_FAILURE,\r\n            payload: { errors: error },\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error :\", error);\r\n      dispatch({\r\n        type: ActionTypes.UPDATE_CUSTOMER_FAILURE,\r\n        payload: { errors: error },\r\n      });\r\n    }\r\n  };\r\n};\r\n",{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","severity":1,"message":"457","line":2,"column":17,"nodeType":"458","messageId":"459","endLine":2,"endColumn":21},{"ruleId":"456","severity":1,"message":"460","line":3,"column":3,"nodeType":"458","messageId":"459","endLine":3,"endColumn":19},{"ruleId":"456","severity":1,"message":"461","line":15,"column":3,"nodeType":"458","messageId":"459","endLine":15,"endColumn":15},{"ruleId":"456","severity":1,"message":"462","line":19,"column":8,"nodeType":"458","messageId":"459","endLine":19,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":30,"column":19,"nodeType":"465","messageId":"466","endLine":30,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":30,"column":39,"nodeType":"465","messageId":"466","endLine":30,"endColumn":41},{"ruleId":"463","severity":1,"message":"464","line":30,"column":59,"nodeType":"465","messageId":"466","endLine":30,"endColumn":61},{"ruleId":"463","severity":1,"message":"464","line":34,"column":19,"nodeType":"465","messageId":"466","endLine":34,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":34,"column":38,"nodeType":"465","messageId":"466","endLine":34,"endColumn":40},{"ruleId":"456","severity":1,"message":"467","line":2,"column":23,"nodeType":"458","messageId":"459","endLine":2,"endColumn":29},{"ruleId":"463","severity":1,"message":"464","line":162,"column":26,"nodeType":"465","messageId":"466","endLine":162,"endColumn":28},{"ruleId":"456","severity":1,"message":"468","line":8,"column":20,"nodeType":"458","messageId":"459","endLine":8,"endColumn":34},{"ruleId":"469","severity":1,"message":"470","line":26,"column":46,"nodeType":"471","endLine":26,"endColumn":181},{"ruleId":"456","severity":1,"message":"472","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":20},{"ruleId":"456","severity":1,"message":"472","line":1,"column":10,"nodeType":"458","messageId":"459","endLine":1,"endColumn":20},{"ruleId":"473","severity":1,"message":"474","line":61,"column":7,"nodeType":"475","messageId":"476","endLine":61,"endColumn":13},{"ruleId":"456","severity":1,"message":"472","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":20},{"ruleId":"456","severity":1,"message":"468","line":23,"column":24,"nodeType":"458","messageId":"459","endLine":23,"endColumn":38},{"ruleId":"469","severity":1,"message":"470","line":29,"column":17,"nodeType":"471","endLine":29,"endColumn":90},{"ruleId":"456","severity":1,"message":"477","line":9,"column":14,"nodeType":"458","messageId":"459","endLine":9,"endColumn":18},{"ruleId":"456","severity":1,"message":"478","line":10,"column":8,"nodeType":"458","messageId":"459","endLine":10,"endColumn":17},{"ruleId":"456","severity":1,"message":"479","line":10,"column":18,"nodeType":"458","messageId":"459","endLine":10,"endColumn":30},{"ruleId":"480","severity":1,"message":"481","line":15,"column":6,"nodeType":"482","endLine":15,"endColumn":8,"suggestions":"483"},{"ruleId":"469","severity":1,"message":"470","line":21,"column":5,"nodeType":"471","endLine":21,"endColumn":10},{"ruleId":"469","severity":1,"message":"470","line":24,"column":5,"nodeType":"471","endLine":24,"endColumn":57},{"ruleId":"456","severity":1,"message":"484","line":3,"column":8,"nodeType":"458","messageId":"459","endLine":3,"endColumn":15},{"ruleId":"456","severity":1,"message":"485","line":33,"column":5,"nodeType":"458","messageId":"459","endLine":33,"endColumn":18},{"ruleId":"456","severity":1,"message":"486","line":34,"column":5,"nodeType":"458","messageId":"459","endLine":34,"endColumn":23},{"ruleId":"456","severity":1,"message":"487","line":36,"column":5,"nodeType":"458","messageId":"459","endLine":36,"endColumn":14},{"ruleId":"456","severity":1,"message":"488","line":37,"column":5,"nodeType":"458","messageId":"459","endLine":37,"endColumn":19},{"ruleId":"456","severity":1,"message":"489","line":39,"column":5,"nodeType":"458","messageId":"459","endLine":39,"endColumn":18},{"ruleId":"456","severity":1,"message":"490","line":40,"column":5,"nodeType":"458","messageId":"459","endLine":40,"endColumn":15},{"ruleId":"456","severity":1,"message":"491","line":54,"column":9,"nodeType":"458","messageId":"459","endLine":54,"endColumn":27},{"ruleId":"480","severity":1,"message":"492","line":69,"column":6,"nodeType":"482","endLine":69,"endColumn":8,"suggestions":"493"},{"ruleId":"456","severity":1,"message":"494","line":91,"column":9,"nodeType":"458","messageId":"459","endLine":91,"endColumn":20},{"ruleId":"456","severity":1,"message":"495","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":18},{"ruleId":"456","severity":1,"message":"496","line":4,"column":10,"nodeType":"458","messageId":"459","endLine":4,"endColumn":13},{"ruleId":"456","severity":1,"message":"497","line":4,"column":15,"nodeType":"458","messageId":"459","endLine":4,"endColumn":19},{"ruleId":"456","severity":1,"message":"498","line":4,"column":21,"nodeType":"458","messageId":"459","endLine":4,"endColumn":31},{"ruleId":"456","severity":1,"message":"499","line":5,"column":8,"nodeType":"458","messageId":"459","endLine":5,"endColumn":21},{"ruleId":"456","severity":1,"message":"500","line":7,"column":13,"nodeType":"458","messageId":"459","endLine":7,"endColumn":20},{"ruleId":"456","severity":1,"message":"501","line":11,"column":10,"nodeType":"458","messageId":"459","endLine":11,"endColumn":21},{"ruleId":"456","severity":1,"message":"502","line":16,"column":3,"nodeType":"458","messageId":"459","endLine":16,"endColumn":23},{"ruleId":"456","severity":1,"message":"503","line":20,"column":8,"nodeType":"458","messageId":"459","endLine":20,"endColumn":15},{"ruleId":"456","severity":1,"message":"504","line":26,"column":21,"nodeType":"458","messageId":"459","endLine":26,"endColumn":33},{"ruleId":"456","severity":1,"message":"505","line":32,"column":24,"nodeType":"458","messageId":"459","endLine":32,"endColumn":39},{"ruleId":"456","severity":1,"message":"506","line":40,"column":10,"nodeType":"458","messageId":"459","endLine":40,"endColumn":16},{"ruleId":"480","severity":1,"message":"507","line":47,"column":6,"nodeType":"482","endLine":47,"endColumn":8,"suggestions":"508"},{"ruleId":"456","severity":1,"message":"509","line":2,"column":16,"nodeType":"458","messageId":"459","endLine":2,"endColumn":27},{"ruleId":"456","severity":1,"message":"510","line":5,"column":10,"nodeType":"458","messageId":"459","endLine":5,"endColumn":28},{"ruleId":"456","severity":1,"message":"511","line":7,"column":17,"nodeType":"458","messageId":"459","endLine":7,"endColumn":26},{"ruleId":"456","severity":1,"message":"512","line":10,"column":30,"nodeType":"458","messageId":"459","endLine":10,"endColumn":37},{"ruleId":"463","severity":1,"message":"464","line":67,"column":45,"nodeType":"465","messageId":"466","endLine":67,"endColumn":47},{"ruleId":"463","severity":1,"message":"464","line":70,"column":39,"nodeType":"465","messageId":"466","endLine":70,"endColumn":41},{"ruleId":"456","severity":1,"message":"509","line":9,"column":3,"nodeType":"458","messageId":"459","endLine":9,"endColumn":14},{"ruleId":"456","severity":1,"message":"511","line":16,"column":17,"nodeType":"458","messageId":"459","endLine":16,"endColumn":26},{"ruleId":"463","severity":1,"message":"464","line":40,"column":43,"nodeType":"465","messageId":"466","endLine":40,"endColumn":45},{"ruleId":"463","severity":1,"message":"464","line":44,"column":37,"nodeType":"465","messageId":"466","endLine":44,"endColumn":39},{"ruleId":"456","severity":1,"message":"513","line":5,"column":3,"nodeType":"458","messageId":"459","endLine":5,"endColumn":17},{"ruleId":"456","severity":1,"message":"509","line":10,"column":3,"nodeType":"458","messageId":"459","endLine":10,"endColumn":14},{"ruleId":"456","severity":1,"message":"511","line":14,"column":17,"nodeType":"458","messageId":"459","endLine":14,"endColumn":26},{"ruleId":"456","severity":1,"message":"514","line":17,"column":3,"nodeType":"458","messageId":"459","endLine":17,"endColumn":15},{"ruleId":"456","severity":1,"message":"515","line":18,"column":3,"nodeType":"458","messageId":"459","endLine":18,"endColumn":16},{"ruleId":"456","severity":1,"message":"516","line":19,"column":3,"nodeType":"458","messageId":"459","endLine":19,"endColumn":16},{"ruleId":"473","severity":1,"message":"474","line":22,"column":7,"nodeType":"475","messageId":"476","endLine":22,"endColumn":13},{"ruleId":"473","severity":1,"message":"474","line":26,"column":7,"nodeType":"475","messageId":"476","endLine":26,"endColumn":13},{"ruleId":"456","severity":1,"message":"472","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":20},{"ruleId":"469","severity":1,"message":"470","line":13,"column":7,"nodeType":"471","endLine":13,"endColumn":60},{"ruleId":"469","severity":1,"message":"470","line":15,"column":7,"nodeType":"471","endLine":21,"endColumn":8},{"ruleId":"456","severity":1,"message":"477","line":7,"column":11,"nodeType":"458","messageId":"459","endLine":7,"endColumn":15},{"ruleId":"469","severity":1,"message":"470","line":24,"column":13,"nodeType":"471","endLine":24,"endColumn":67},{"ruleId":"463","severity":1,"message":"464","line":23,"column":34,"nodeType":"465","messageId":"466","endLine":23,"endColumn":36},{"ruleId":"463","severity":1,"message":"464","line":28,"column":34,"nodeType":"465","messageId":"466","endLine":28,"endColumn":36},{"ruleId":"469","severity":1,"message":"470","line":33,"column":7,"nodeType":"471","endLine":36,"endColumn":8},{"ruleId":"456","severity":1,"message":"517","line":8,"column":7,"nodeType":"458","messageId":"459","endLine":8,"endColumn":9},{"ruleId":"480","severity":1,"message":"481","line":22,"column":6,"nodeType":"482","endLine":22,"endColumn":8,"suggestions":"518"},{"ruleId":"480","severity":1,"message":"481","line":39,"column":6,"nodeType":"482","endLine":39,"endColumn":8,"suggestions":"519"},{"ruleId":"456","severity":1,"message":"520","line":5,"column":3,"nodeType":"458","messageId":"459","endLine":5,"endColumn":12},{"ruleId":"456","severity":1,"message":"521","line":9,"column":3,"nodeType":"458","messageId":"459","endLine":9,"endColumn":23},{"ruleId":"456","severity":1,"message":"522","line":10,"column":3,"nodeType":"458","messageId":"459","endLine":10,"endColumn":17},{"ruleId":"456","severity":1,"message":"523","line":11,"column":3,"nodeType":"458","messageId":"459","endLine":11,"endColumn":15},{"ruleId":"456","severity":1,"message":"524","line":12,"column":3,"nodeType":"458","messageId":"459","endLine":12,"endColumn":15},{"ruleId":"456","severity":1,"message":"525","line":18,"column":3,"nodeType":"458","messageId":"459","endLine":18,"endColumn":13},{"ruleId":"456","severity":1,"message":"526","line":19,"column":3,"nodeType":"458","messageId":"459","endLine":19,"endColumn":18},{"ruleId":"456","severity":1,"message":"527","line":20,"column":3,"nodeType":"458","messageId":"459","endLine":20,"endColumn":8},{"ruleId":"456","severity":1,"message":"528","line":21,"column":3,"nodeType":"458","messageId":"459","endLine":21,"endColumn":9},{"ruleId":"456","severity":1,"message":"529","line":34,"column":20,"nodeType":"458","messageId":"459","endLine":34,"endColumn":25},{"ruleId":"456","severity":1,"message":"530","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":13},{"ruleId":"456","severity":1,"message":"472","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":20},{"ruleId":"456","severity":1,"message":"531","line":3,"column":10,"nodeType":"458","messageId":"459","endLine":3,"endColumn":20},{"ruleId":"456","severity":1,"message":"501","line":4,"column":10,"nodeType":"458","messageId":"459","endLine":4,"endColumn":21},{"ruleId":"456","severity":1,"message":"530","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":13},{"ruleId":"456","severity":1,"message":"472","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":20},{"ruleId":"456","severity":1,"message":"531","line":3,"column":10,"nodeType":"458","messageId":"459","endLine":3,"endColumn":20},{"ruleId":"456","severity":1,"message":"532","line":8,"column":7,"nodeType":"458","messageId":"459","endLine":8,"endColumn":20},{"ruleId":"456","severity":1,"message":"530","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":13},{"ruleId":"456","severity":1,"message":"472","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":20},{"ruleId":"456","severity":1,"message":"531","line":3,"column":10,"nodeType":"458","messageId":"459","endLine":3,"endColumn":20},{"ruleId":"456","severity":1,"message":"501","line":4,"column":10,"nodeType":"458","messageId":"459","endLine":4,"endColumn":21},{"ruleId":"456","severity":1,"message":"533","line":22,"column":13,"nodeType":"458","messageId":"459","endLine":22,"endColumn":17},{"ruleId":"473","severity":1,"message":"474","line":14,"column":13,"nodeType":"475","messageId":"476","endLine":14,"endColumn":19},{"ruleId":"473","severity":1,"message":"474","line":18,"column":13,"nodeType":"475","messageId":"476","endLine":18,"endColumn":19},{"ruleId":"473","severity":1,"message":"474","line":21,"column":17,"nodeType":"475","messageId":"476","endLine":21,"endColumn":23},{"ruleId":"473","severity":1,"message":"474","line":25,"column":17,"nodeType":"475","messageId":"476","endLine":25,"endColumn":23},{"ruleId":"473","severity":1,"message":"474","line":29,"column":21,"nodeType":"475","messageId":"476","endLine":29,"endColumn":27},{"ruleId":"473","severity":1,"message":"474","line":33,"column":21,"nodeType":"475","messageId":"476","endLine":33,"endColumn":27},{"ruleId":"473","severity":1,"message":"474","line":36,"column":25,"nodeType":"475","messageId":"476","endLine":36,"endColumn":31},{"ruleId":"473","severity":1,"message":"474","line":40,"column":25,"nodeType":"475","messageId":"476","endLine":40,"endColumn":31},{"ruleId":"456","severity":1,"message":"530","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":13},{"ruleId":"456","severity":1,"message":"534","line":4,"column":13,"nodeType":"458","messageId":"459","endLine":4,"endColumn":19},{"ruleId":"456","severity":1,"message":"535","line":10,"column":10,"nodeType":"458","messageId":"459","endLine":10,"endColumn":16},{"ruleId":"456","severity":1,"message":"536","line":14,"column":8,"nodeType":"458","messageId":"459","endLine":14,"endColumn":21},{"ruleId":"456","severity":1,"message":"537","line":15,"column":10,"nodeType":"458","messageId":"459","endLine":15,"endColumn":19},{"ruleId":"456","severity":1,"message":"538","line":16,"column":13,"nodeType":"458","messageId":"459","endLine":16,"endColumn":21},{"ruleId":"456","severity":1,"message":"539","line":87,"column":12,"nodeType":"458","messageId":"459","endLine":87,"endColumn":22},{"ruleId":"480","severity":1,"message":"540","line":103,"column":8,"nodeType":"482","endLine":103,"endColumn":10,"suggestions":"541"},{"ruleId":"469","severity":1,"message":"470","line":394,"column":37,"nodeType":"471","endLine":394,"endColumn":124},{"ruleId":"456","severity":1,"message":"534","line":3,"column":13,"nodeType":"458","messageId":"459","endLine":3,"endColumn":19},{"ruleId":"456","severity":1,"message":"535","line":9,"column":10,"nodeType":"458","messageId":"459","endLine":9,"endColumn":16},{"ruleId":"456","severity":1,"message":"536","line":13,"column":8,"nodeType":"458","messageId":"459","endLine":13,"endColumn":21},{"ruleId":"456","severity":1,"message":"537","line":14,"column":10,"nodeType":"458","messageId":"459","endLine":14,"endColumn":19},{"ruleId":"456","severity":1,"message":"538","line":15,"column":13,"nodeType":"458","messageId":"459","endLine":15,"endColumn":21},{"ruleId":"456","severity":1,"message":"539","line":88,"column":12,"nodeType":"458","messageId":"459","endLine":88,"endColumn":22},{"ruleId":"456","severity":1,"message":"542","line":100,"column":12,"nodeType":"458","messageId":"459","endLine":100,"endColumn":26},{"ruleId":"456","severity":1,"message":"543","line":100,"column":28,"nodeType":"458","messageId":"459","endLine":100,"endColumn":45},{"ruleId":"456","severity":1,"message":"544","line":101,"column":12,"nodeType":"458","messageId":"459","endLine":101,"endColumn":28},{"ruleId":"456","severity":1,"message":"545","line":102,"column":16,"nodeType":"458","messageId":"459","endLine":102,"endColumn":22},{"ruleId":"480","severity":1,"message":"540","line":125,"column":8,"nodeType":"482","endLine":125,"endColumn":10,"suggestions":"546"},{"ruleId":"456","severity":1,"message":"547","line":150,"column":11,"nodeType":"458","messageId":"459","endLine":150,"endColumn":31},{"ruleId":"456","severity":1,"message":"548","line":155,"column":11,"nodeType":"458","messageId":"459","endLine":155,"endColumn":34},{"ruleId":"456","severity":1,"message":"549","line":166,"column":11,"nodeType":"458","messageId":"459","endLine":166,"endColumn":36},{"ruleId":"456","severity":1,"message":"550","line":171,"column":11,"nodeType":"458","messageId":"459","endLine":171,"endColumn":37},{"ruleId":"463","severity":1,"message":"464","line":207,"column":58,"nodeType":"465","messageId":"466","endLine":207,"endColumn":60},{"ruleId":"469","severity":1,"message":"470","line":320,"column":67,"nodeType":"471","endLine":320,"endColumn":153},{"ruleId":"456","severity":1,"message":"551","line":2,"column":8,"nodeType":"458","messageId":"459","endLine":2,"endColumn":21},{"ruleId":"456","severity":1,"message":"552","line":7,"column":11,"nodeType":"458","messageId":"459","endLine":7,"endColumn":26},{"ruleId":"456","severity":1,"message":"553","line":7,"column":27,"nodeType":"458","messageId":"459","endLine":7,"endColumn":45},{"ruleId":"456","severity":1,"message":"552","line":5,"column":8,"nodeType":"458","messageId":"459","endLine":5,"endColumn":23},{"ruleId":"456","severity":1,"message":"554","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":13},{"ruleId":"456","severity":1,"message":"555","line":6,"column":9,"nodeType":"458","messageId":"459","endLine":6,"endColumn":16},{"ruleId":"469","severity":1,"message":"470","line":18,"column":17,"nodeType":"471","endLine":18,"endColumn":161},{"ruleId":"456","severity":1,"message":"556","line":3,"column":8,"nodeType":"458","messageId":"459","endLine":3,"endColumn":13},{"ruleId":"456","severity":1,"message":"557","line":5,"column":8,"nodeType":"458","messageId":"459","endLine":5,"endColumn":14},"no-native-reassign",["558"],"no-negated-in-lhs",["559"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'CustomButton' is defined but never used.","'CustomformInput' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Router' is defined but never used.","'setCurrentUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'user' is assigned a value but never used.","'MyCompany' is assigned a value but never used.","'setMyCompany' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["560"],"'FormAdd' is defined but never used.","'totalCategory' is assigned a value but never used.","'totalPagesCategory' is assigned a value but never used.","'totalTags' is assigned a value but never used.","'totalPagesTags' is assigned a value but never used.","'totalProducts' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'handleAddAttribute' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product', 'props', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["561"],"'handleReset' is assigned a value but never used.","'Fragment' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Typography' is defined but never used.","'ImageListView' is defined but never used.","'BsIcons' is defined but never used.","'productData' is defined but never used.","'ClientGetAllProducts' is defined but never used.","'Product' is defined but never used.","'setpageSizes' is assigned a value but never used.","'setorderOptions' is assigned a value but never used.","'search' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props', 'selectedPageSize', 'token', and 'totalProducts'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["562"],"'CustomInput' is defined but never used.","'ContextMenuTrigger' is defined but never used.","'Separator' is defined but never used.","'collect' is assigned a value but never used.","'ButtonDropdown' is defined but never used.","'DataListIcon' is defined but never used.","'ThumbListIcon' is defined but never used.","'ImageListIcon' is defined but never used.","'gg' is assigned a value but never used.",["563"],["564"],"'CardTitle' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","'React' is defined but never used.","'SERVER_URL' is defined but never used.","'wp_server_url' is assigned a value but never used.","'data' is assigned a value but never used.","'IConAi' is defined but never used.","'render' is defined but never used.","'FirstPageIcon' is defined but never used.","'propTypes' is defined but never used.","'IoiIcons' is defined but never used.","'totalpages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["565"],"'resultImageAdd' is assigned a value but never used.","'setResultImageAdd' is assigned a value but never used.","'imageAddCategory' is assigned a value but never used.","'result' is assigned a value but never used.",["566"],"'onChangeFormAddImage' is assigned a value but never used.","'onChangeFormAddShipping' is assigned a value but never used.","'onChangeFormUpdateBilling' is assigned a value but never used.","'onChangeFormUpdateShipping' is assigned a value but never used.","'ProductCaisse' is defined but never used.","'Selectedproduct' is assigned a value but never used.","'setSelectedproduct' is assigned a value but never used.","'Row' is defined but never used.","'instock' is assigned a value but never used.","'OAuth' is defined but never used.","'crypto' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"567","fix":"573"},{"desc":"567","fix":"574"},{"desc":"575","fix":"576"},{"desc":"575","fix":"577"},"Update the dependencies array to be: [props, token]",{"range":"578","text":"579"},"Update the dependencies array to be: [product, props, token]",{"range":"580","text":"581"},"Update the dependencies array to be: [props, selectedPageSize, token, totalProducts]",{"range":"582","text":"583"},{"range":"584","text":"579"},{"range":"585","text":"579"},"Update the dependencies array to be: [getData]",{"range":"586","text":"587"},{"range":"588","text":"587"},[529,531],"[props, token]",[2376,2378],"[product, props, token]",[1926,1928],"[props, selectedPageSize, token, totalProducts]",[760,762],[1071,1073],[4190,4192],"[getData]",[4966,4968]]