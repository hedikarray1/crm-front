[{"D:\\Projects\\front\\src\\index.js":"1","D:\\Projects\\front\\src\\App.js":"2","D:\\Projects\\front\\src\\reportWebVitals.js":"3","D:\\Projects\\front\\src\\Pages\\Login.js":"4","D:\\Projects\\front\\src\\Store\\ConfigureStore.js":"5","D:\\Projects\\front\\src\\Pages\\AdminPages\\Home\\Home.js":"6","D:\\Projects\\front\\src\\Pages\\AdminPages\\CLientsManagment\\AddClient\\AddClient.js":"7","D:\\Projects\\front\\src\\Actions\\Auth.js":"8","D:\\Projects\\front\\src\\Reducers\\RootReducer.js":"9","D:\\Projects\\front\\src\\Pages\\NotFoundPage\\NotFound.js":"10","D:\\Projects\\front\\src\\Components\\Buttons\\CustomButton.js":"11","D:\\Projects\\front\\src\\Components\\NavBar\\AdminNavBar.js":"12","D:\\Projects\\front\\src\\Components\\Inputs\\Inputs.js":"13","D:\\Projects\\front\\src\\Components\\forms\\FormAdd.js":"14","D:\\Projects\\front\\src\\Actions\\index.js":"15","D:\\Projects\\front\\src\\Reducers\\Auth.js":"16","D:\\Projects\\front\\src\\constants\\BackendConstants.js":"17","D:\\Projects\\front\\src\\Components\\UserTopNav\\UserTopNav.js":"18","D:\\Projects\\front\\src\\Pages\\CompanyPages\\AllCompanyPage\\AllCompanyPage.js":"19","D:\\Projects\\front\\src\\Pages\\CompanyPages\\AddCompanyPage\\AddCompanyPage.js":"20","D:\\Projects\\front\\src\\Pages\\FeaturePages\\AddFeaturePage\\AddFeaturePage.js":"21","D:\\Projects\\front\\src\\Pages\\PackPages\\AddPack\\AddPack.js":"22","D:\\Projects\\front\\src\\Components\\Tables\\CustomTable.js":"23","D:\\Projects\\front\\src\\Components\\Tables\\CollapsibleTable.js":"24","D:\\Projects\\front\\src\\Pages\\PackPages\\AllPackPage\\AllPackPage.js":"25"},{"size":620,"mtime":1616161181136,"results":"26","hashOfConfig":"27"},{"size":951,"mtime":1616161304360,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1616161181136,"results":"29","hashOfConfig":"27"},{"size":2132,"mtime":1616161304368,"results":"30","hashOfConfig":"27"},{"size":1198,"mtime":1616161304371,"results":"31","hashOfConfig":"27"},{"size":453,"mtime":1616161304366,"results":"32","hashOfConfig":"27"},{"size":1469,"mtime":1616161304365,"results":"33","hashOfConfig":"27"},{"size":1711,"mtime":1616161304360,"results":"34","hashOfConfig":"27"},{"size":115,"mtime":1616161304371,"results":"35","hashOfConfig":"27"},{"size":819,"mtime":1616161304369,"results":"36","hashOfConfig":"27"},{"size":595,"mtime":1616161304361,"results":"37","hashOfConfig":"27"},{"size":3983,"mtime":1616662074881,"results":"38","hashOfConfig":"27"},{"size":479,"mtime":1616161181102,"results":"39","hashOfConfig":"27"},{"size":281,"mtime":1616161304364,"results":"40","hashOfConfig":"27"},{"size":298,"mtime":1616161304360,"results":"41","hashOfConfig":"27"},{"size":2159,"mtime":1616422082002,"results":"42","hashOfConfig":"27"},{"size":48,"mtime":1616161304380,"results":"43","hashOfConfig":"27"},{"size":1874,"mtime":1616161304364,"results":"44","hashOfConfig":"27"},{"size":1052,"mtime":1616161181108,"results":"45","hashOfConfig":"27"},{"size":2668,"mtime":1616161304366,"results":"46","hashOfConfig":"27"},{"size":2720,"mtime":1616161304367,"results":"47","hashOfConfig":"27"},{"size":5592,"mtime":1616161304370,"results":"48","hashOfConfig":"27"},{"size":10769,"mtime":1616161181104,"results":"49","hashOfConfig":"27"},{"size":4981,"mtime":1616492561165,"results":"50","hashOfConfig":"27"},{"size":6525,"mtime":1616511596767,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"1fzr55f",{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\front\\src\\index.js",["112"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactTable from \"react-table-6/react-table.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["113","114"],"D:\\Projects\\front\\src\\App.js",["115","116"],"import \"./App.css\";\r\nimport { Route, Link, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport Login from \"./Pages/Login\";\r\nimport Home from \"./Pages/AdminPages/Home/Home\";\r\nimport AddClient from \"./Pages/AdminPages/CLientsManagment/AddClient/AddClient\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./Store/ConfigureStore\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/home\" component={Home}></Route>\r\n              <Route path=\"/\" exact component={Home}></Route>\r\n              <Route path=\"/login\" exact component={Login}></Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Projects\\front\\src\\reportWebVitals.js",[],"D:\\Projects\\front\\src\\Pages\\Login.js",["117","118"],"import React, { useState } from 'react'\r\nimport './Login.css'\r\nimport Logo from \"../assets/pictures/logo-ilis.svg\"\r\nimport { connect } from 'react-redux';\r\nimport {LoginAuthAction} from \"../Actions/Auth\"\r\nfunction Login(props) {\r\nconst {user,login}=props;\r\nconst [userState,setUserState]=useState({});\r\n\r\nconst  login1=()=>{\r\nlogin(userState)\r\n}\r\nconst onChange = (attribute, value) => {\r\n   let user1=userState;\r\n   user1[attribute]=value;\r\n    \r\n    setUserState(user1);\r\n  };\r\n    return (\r\n        <div className=\"login\">\r\n         <div className=\"login_container\">\r\n\r\n         <div className=\"login_side\">\r\n             <div className=\"login_side_data\" >\r\n                <img className=\"login_side_data_picture\" src={Logo} />\r\n                 <p className=\"login_side_slogan\">salut sqfq  sqfsqf qs dsqsq qsdfsqf qssq f salut sqfq  sqfsqf qs dsqsq qsdfsqf qssq f salut sqfq  sqfsqf qs dsqsq qsdfsqf qssq f </p>\r\n                 \r\n             </div>\r\n         </div>\r\n            <div className=\"login_form\">\r\n                <label className=\"label_form_title\" >Se connecter</label>\r\n                <label className=\"label_field_indicator\" >Adresse électronique:</label>\r\n                <input type=\"email\" className=\"form-control\" value={userState.email} placeholder=\"Adresse électronique\" onChange={(e)=>{onChange(\"email\",e.target.value);}}></input>\r\n                <label className=\"label_field_indicator\" >Mot de passe:</label>\r\n                <input type=\"password\" className=\"form-control\"  value={userState.password} placeholder=\"Mot de passe\" onChange={(e)=>{onChange(\"password\",e.target.value);}} ></input>\r\n                <button type=\"submit\" className=\"login_button\" onClick={()=>{login1();}} >Se connecter</button>\r\n            </div>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    console.log(\"in state\",state);\r\nreturn {user:state};\r\n};\r\n\r\n\r\nconst mapDispatchProps=(dispatch)=>{\r\nreturn {login: (userState)=>{\r\n//console.log(\"userstate\",userState);\r\ndispatch(LoginAuthAction(userState))\r\n}\r\n}\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchProps)(Login)\r\n","D:\\Projects\\front\\src\\Store\\ConfigureStore.js",[],"D:\\Projects\\front\\src\\Pages\\AdminPages\\Home\\Home.js",[],"D:\\Projects\\front\\src\\Pages\\AdminPages\\CLientsManagment\\AddClient\\AddClient.js",[],"D:\\Projects\\front\\src\\Actions\\Auth.js",["119"],"import axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SERVER_URL } from \"../constants/BackendConstants\";\r\nimport * as ActionTypes from \"./index\";\r\n\r\nexport const LoginAuthAction =(userState)=>{\r\n return async (dispatch)=>{\r\n\r\n    try {\r\n        let data=new FormData();\r\n        data.append(\"email\",userState.email);\r\n        data.append(\"password\",userState.password);\r\n        axios.post(SERVER_URL+\"login\",data).then((response)=>{\r\nconsole.log(\"login response: \",response.data.Authorization);\r\ndispatch({type:ActionTypes.LOGIN_SUCCESS,payload:{authorization:response.data.Authorization}});\r\ndispatch(GetCurrentUserDataWithToken(response.data.Authorization))\r\n        }).catch((error)=>{\r\n            dispatch({type:ActionTypes.LOGIN_FAILURE,payload:{errors:\"addresse électronique ou mot de passe incorrect\"}});\r\n        }); \r\n        \r\n       } catch (error) {\r\n           dispatch({type:ActionTypes.LOGIN_FAILURE,payload:{errors:\"addresse électronique ou mot de passe incorrect\"}});\r\n       }\r\n }\r\n\r\n}\r\n\r\n\r\n\r\nexport const LogoutAuth=()=>{\r\n  \r\n    return (dispatch)=>{\r\n       \r\n     dispatch({type:ActionTypes.LOGOUT})   ;\r\n    }\r\n}\r\n\r\n\r\nexport const GetCurrentUserDataWithToken=(auth)=>{\r\nreturn async (dispatch)=>{\r\n    try {\r\n        axios.get(SERVER_URL+\"api/users/profile\",{headers:{\"Authorization\":auth}}).then((response)=>{\r\n            dispatch({type:ActionTypes.GET_CURRENT_USER_SUCCESS,payload:response.data})\r\n        }).catch((error)=>{\r\n            dispatch({type:ActionTypes.GET_CURRENT_USER_FAILURE,payload:{errors:error}});\r\n\r\n        })\r\n    } catch (error) {\r\n        dispatch({type:ActionTypes.GET_CURRENT_USER_FAILURE,payload:{errors:error}});\r\n    }\r\n}\r\n};","D:\\Projects\\front\\src\\Reducers\\RootReducer.js",[],"D:\\Projects\\front\\src\\Pages\\NotFoundPage\\NotFound.js",["120","121","122"],"import React from 'react'\r\nimport \"./NotFound.css\"\r\nimport BACKGROUND from \"../../assets/pictures/login_background_blurred.png\";\r\nimport LOGO_ILIS from \"../../assets/pictures/logo-ilis.svg\";\r\nimport { Link } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction NotFound() {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"my-page-container\">\r\n        <img src={BACKGROUND} className=\"background-picture\" ></img>\r\n     \r\n            <img src={LOGO_ILIS} className=\"logo-picture\"  onClick={()=>{\r\n           history.push(\"/login\")\r\n         }}></img>\r\n            <p className=\"not-found-number\">404</p>\r\n            <p className=\"not-found-description\">Désolé, la page que vous cherchez est introuvable</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","D:\\Projects\\front\\src\\Components\\Buttons\\CustomButton.js",[],"D:\\Projects\\front\\src\\Components\\NavBar\\AdminNavBar.js",["123"],"D:\\Projects\\front\\src\\Components\\Inputs\\Inputs.js",[],"D:\\Projects\\front\\src\\Components\\forms\\FormAdd.js",[],"D:\\Projects\\front\\src\\Actions\\index.js",[],"D:\\Projects\\front\\src\\Reducers\\Auth.js",["124","125"],"D:\\Projects\\front\\src\\constants\\BackendConstants.js",[],"D:\\Projects\\front\\src\\Components\\UserTopNav\\UserTopNav.js",["126","127"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { LogoutAuth } from '../../Actions/Auth';\r\nimport \"./UserTopNav.css\"\r\nfunction UserTopNav(props) {\r\nconst [AccountDropDown,setAccountDropDown]=useState(false);\r\nconst [CurrentUser,setCurrentUser]=useState({firstname:\"hedi\",lastname:\"karray\",role:\"admin\"});\r\n\r\nconst history=useHistory();\r\n\r\n    const showAccountDropDown=()=>{\r\n       setAccountDropDown(!AccountDropDown);\r\n      \r\n    }\r\n    return (\r\n       <>\r\n             <div className=\"account-component\" onClick={()=>{\r\n            \r\n             showAccountDropDown();\r\n            }}>\r\n            \r\n            <div className=\"username\">\r\n            {CurrentUser.firstname+\" \"+CurrentUser.lastname}\r\n            </div>\r\n            <div className=\"account-picture\"><img className=\"user-picture\" src=\"https://www.atlassian.com/fr/dam/jcr:ba03a215-2f45-40f5-8540-b2015223c918/Max-R_Headshot%20(1).jpg\"></img> </div>\r\n         \r\n             \r\n            \r\n        </div> \r\n           <ul className={AccountDropDown? 'drop-down': \"drop-down hidden\"}>\r\n           <li className=\"drop-down-choices\">Mon profil</li>\r\n           <li className=\"drop-down-choices\">Déconnexion</li>\r\n           <li className=\"drop-down-choices\">Mon profil</li>\r\n           <li className=\"drop-down-choices big\"  onClick={()=>{\r\n             \r\n               props.logout()\r\n               history.push(\"/login\");\r\n               }}>Déconnexion</li>\r\n       </ul>\r\n       </>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchProps=(dispatch)=>{\r\n    return {\r\n        logout: ()=>{\r\n   \r\n    dispatch(LogoutAuth())\r\n    }\r\n    }\r\n    };\r\n\r\n    const mapStateToProps=(state)=>{\r\n       // console.log(\"in state\",state);\r\n    return {};\r\n    };\r\n    \r\nexport default connect(mapStateToProps,mapDispatchProps)(UserTopNav) \r\n","D:\\Projects\\front\\src\\Pages\\CompanyPages\\AllCompanyPage\\AllCompanyPage.js",[],"D:\\Projects\\front\\src\\Pages\\CompanyPages\\AddCompanyPage\\AddCompanyPage.js",[],"D:\\Projects\\front\\src\\Pages\\FeaturePages\\AddFeaturePage\\AddFeaturePage.js",["128"],"import React, { useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormAdd from \"../../../Components/forms/FormAdd\";\r\n\r\nconst groupeTitles = [\r\n  \"gestion user\",\r\n  \"gestion produits\",\r\n  \"gestion commande\",\r\n  \"gestion stock\",\r\n];\r\n\r\nexport default function AddFeaturePage(props) {\r\n  const [feature, setFeature] = useState({});\r\n  const widh = \"col-md-6 form-content\";\r\n  const onChange = (attribute, value) => {\r\n    let feature1 = feature;\r\n    feature1[attribute] = value;\r\n    setFeature(feature1);\r\n  };\r\n\r\n  return (\r\n    <FormAdd Title=\"Ajout d'une fonctionnalité\" className=\"col-md-6\">\r\n      <div>\r\n        <TextField\r\n          id=\"title\"\r\n          required\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Nom\"\r\n          value={feature.title}\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"title\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Autocomplete\r\n          id=\"free-solo-demo\"\r\n          style={{ width: \"100%\" }}\r\n          freeSolo\r\n          value={feature.groupe_title}\r\n          onChange={(event) => {\r\n            onChange(\"groupe_title\", event.target.value);\r\n          }}\r\n          options={groupeTitles.map((option) => option)}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              required\r\n              label=\"Nom du groupe\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"title\"\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Prix\"\r\n          value={feature.prix}\r\n          type=\"number\"\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"title\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"description\"\r\n          style={{ width: \"100%\" }}\r\n          label=\"Description\"\r\n          margin=\"normal\"\r\n          multiline\r\n          variant=\"outlined\"\r\n          value={feature.description}\r\n          onChange={(event) => {\r\n            onChange(\"discription\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"submit\"\r\n          style={{ width: \"70%\" }}\r\n          className=\"button\"\r\n          onClick={() => {\r\n            console.log(\"feature jouter :\", feature);\r\n          }}\r\n        >\r\n          ajouter\r\n        </button>\r\n      </div>\r\n    </FormAdd>\r\n  );\r\n}\r\n","D:\\Projects\\front\\src\\Pages\\PackPages\\AddPack\\AddPack.js",["129"],"import React, { useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { CustomFormButton } from \"../../../Components/Buttons/CustomButton\";\r\nimport FormAdd from \"../../../Components/forms/FormAdd\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst groupeTitles = [\r\n  {\r\n    title: \"gestion user\",\r\n    features: [\r\n      { title: \"add user\", checked: true },\r\n      { title: \"edit user\", checked: false },\r\n      { title: \"all user\", checked: false },\r\n    ],\r\n  },\r\n  {\r\n    title: \"gestion produit\",\r\n    features: [\r\n      { title: \"add produit\", checked: false },\r\n      { title: \"edit produit\", checked: false },\r\n    ],\r\n  },\r\n  {\r\n    title: \"gestion commande\",\r\n    features: [\r\n      { title: \"all commande\", checked: false },\r\n      { title: \"add commande\", checked: false },\r\n    ],\r\n  },\r\n  {\r\n    title: \"gestion stock\",\r\n    features: [\r\n      { title: \"add stock\", checked: false },\r\n      { title: \"edit stock\", checked: false },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function AddPack() {\r\n  const [pack, setPack] = useState({});\r\n  const [features, setFeatures] = useState([]);\r\n\r\n  const onChange = (attribute, value) => {\r\n    let pack1 = pack;\r\n    pack1[attribute] = value;\r\n    setPack(pack1);\r\n  };\r\n\r\n  const handleChangeFeature = (event, index1, index2) => {\r\n    console.log(\r\n      \" handleChangeFeature : name:\",\r\n      event.target.name,\r\n      \" checked :\",\r\n      event.target.checked\r\n    );\r\n    console.log(\"feature modifier :\", features[index1].features[index2]);\r\n    let features1 = features;\r\n    features1[index1].features[index2].checked = event.target.checked;\r\n    setFeatures(features1);\r\n  };\r\n\r\n  return (\r\n    <FormAdd Title=\"Ajout d'un pack\" className=\"col-md-6\">\r\n      <div>\r\n        <TextField\r\n          id=\"title\"\r\n          required\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Nom\"\r\n          value={pack.title}\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"title\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"description\"\r\n          style={{ width: \"100%\" }}\r\n          label=\"Description\"\r\n          margin=\"normal\"\r\n          multiline\r\n          variant=\"outlined\"\r\n          value={pack.description}\r\n          onChange={(event) => {\r\n            onChange(\"discription\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"checkboxes-tags-demo\"\r\n          options={groupeTitles}\r\n          onChange={(event, value) => {\r\n            setFeatures(value);\r\n            console.log(\"Autocomplete :\", value);\r\n          }}\r\n          getOptionLabel={(option) => option.title}\r\n          renderOption={(option, { selected }) => (\r\n            <React.Fragment>\r\n              <Checkbox\r\n                icon={icon}\r\n                checkedIcon={checkedIcon}\r\n                style={{ marginRight: 8 }}\r\n                //color=\"pramiry\"\r\n                checked={selected}\r\n              />\r\n              {option.title}\r\n            </React.Fragment>\r\n          )}\r\n          style={{ width: \"100%\" }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              label=\"Fonctionnalités\"\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n\r\n      {features.map((feature, index1) => {\r\n        return (\r\n          <div>\r\n            <FormLabel component=\"legend\">{feature.title}</FormLabel>\r\n            <FormGroup row>\r\n              {feature.features.map((fea, index2) => {\r\n                return (\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        //checked={fea.checked}\r\n                        value={fea.checked}\r\n                        onChange={(event) => {\r\n                          handleChangeFeature(event, index1, index2);\r\n                        }}\r\n                        name={fea.title}\r\n                      />\r\n                    }\r\n                    label={fea.title}\r\n                  />\r\n                );\r\n              })}\r\n            </FormGroup>\r\n          </div>\r\n        );\r\n      })}\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"prix\"\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n          label=\"Prix\"\r\n          value={pack.prix}\r\n          type=\"number\"\r\n          margin=\"normal\"\r\n          onChange={(event) => {\r\n            onChange(\"prix\", event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <CustomFormButton\r\n          value=\"Ajouter\"\r\n          width=\"50%\"\r\n          onClick={() => {\r\n            console.log(\"clicked pack jouter : \", pack);\r\n            console.log(\"clicked feature: \", features);\r\n          }}\r\n        ></CustomFormButton>\r\n      </div>\r\n    </FormAdd>\r\n  );\r\n}\r\n","D:\\Projects\\front\\src\\Components\\Tables\\CustomTable.js",["130"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./CustomTable.css\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    headCells,\r\n    alignhead,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={alignhead}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className=\"visuallyHidden\"></span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { numSelected, title } = props;\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar\r\n        className={\r\n          numSelected > 0 ? \" highlight\" : \"root-EnhancedTableToolbar \"\r\n        }\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography\r\n            className=\"title\"\r\n            color=\"inherit\"\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n          >\r\n            {numSelected} sélectionné\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            className=\"title\"\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n        )}\r\n\r\n        {numSelected > 0 ? (\r\n          <div className=\"containerBtn\">\r\n            <Tooltip title=\"Supprimer\">\r\n              <IconButton aria-label=\"supprimer\" onClick={handleClickOpen}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {numSelected == 1 ? (\r\n              <Tooltip title=\"Modifier\">\r\n                <IconButton aria-label=\"modifier\">\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </Toolbar>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable(props) {\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const { rows, headCells, title, alignRow, alignhead } = props;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Paper className=\"paper\">\r\n        <EnhancedTableToolbar numSelected={selected.length} title={title} />\r\n        <TableContainer>\r\n          <Table className=\"table\" size={\"medium\"}>\r\n            <EnhancedTableHead\r\n              alignhead={alignhead}\r\n              headCells={headCells}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      className=\"tableRow\"\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      {headCells.map((cell) => {\r\n                        return (\r\n                          <TableCell align={alignRow}>{row[cell.id]}</TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 75, 100]}\r\n          labelRowsPerPage=\"Lignes par page\"\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\front\\src\\Components\\Tables\\CollapsibleTable.js",[],"D:\\Projects\\front\\src\\Pages\\PackPages\\AllPackPage\\AllPackPage.js",["131"],{"ruleId":"132","severity":1,"message":"133","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":18},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"132","severity":1,"message":"140","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"141","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":17},{"ruleId":"132","severity":1,"message":"142","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":25,"column":17,"nodeType":"145","endLine":25,"endColumn":71},{"ruleId":"132","severity":1,"message":"146","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":20},{"ruleId":"132","severity":1,"message":"140","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":13,"column":9,"nodeType":"145","endLine":13,"endColumn":63},{"ruleId":"143","severity":1,"message":"144","line":15,"column":13,"nodeType":"145","endLine":17,"endColumn":13},{"ruleId":"132","severity":1,"message":"147","line":2,"column":23,"nodeType":"134","messageId":"135","endLine":2,"endColumn":29},{"ruleId":"132","severity":1,"message":"146","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":69,"column":13,"nodeType":"150","messageId":"151","endLine":69,"endColumn":19},{"ruleId":"132","severity":1,"message":"152","line":8,"column":20,"nodeType":"134","messageId":"135","endLine":8,"endColumn":34},{"ruleId":"143","severity":1,"message":"144","line":26,"column":46,"nodeType":"145","endLine":26,"endColumn":181},{"ruleId":"132","severity":1,"message":"153","line":15,"column":9,"nodeType":"134","messageId":"135","endLine":15,"endColumn":13},{"ruleId":"132","severity":1,"message":"154","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":162,"column":26,"nodeType":"157","messageId":"158","endLine":162,"endColumn":28},{"ruleId":"132","severity":1,"message":"159","line":14,"column":8,"nodeType":"134","messageId":"135","endLine":14,"endColumn":24},"no-unused-vars","'ReactTable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'Link' is defined but never used.","'AddClient' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'Router' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'setCurrentUser' is assigned a value but never used.","'widh' is assigned a value but never used.","'FormControl' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CollapsibleTable' is defined but never used.","no-global-assign","no-unsafe-negation"]