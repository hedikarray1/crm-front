[{"D:\\Agence 2i works\\front\\src\\index.js":"1","D:\\Agence 2i works\\front\\src\\reportWebVitals.js":"2","D:\\Agence 2i works\\front\\src\\App.js":"3","D:\\Agence 2i works\\front\\src\\Pages\\Login.js":"4","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\Home\\Home.js":"5","D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\CLientsManagment\\AddClient\\AddClient.js":"6","D:\\Agence 2i works\\front\\src\\Components\\forms\\FormAdd.js":"7","D:\\Agence 2i works\\front\\src\\Components\\Inputs\\Inputs.js":"8","D:\\Agence 2i works\\front\\src\\Components\\NavBar\\AdminNavBar.js":"9","D:\\Agence 2i works\\front\\src\\Components\\Buttons\\CustomButton.js":"10","D:\\Agence 2i works\\front\\src\\Pages\\CompanyPages\\AllCompanyPage\\AllCompanyPage.js":"11","D:\\Agence 2i works\\front\\src\\Components\\Tables\\CustomTable.js":"12","D:\\Agence 2i works\\front\\src\\Pages\\CompanyPages\\AddCompanyPage\\AddCompanyPage.js":"13","D:\\Agence 2i works\\front\\src\\Components\\UserTopNav\\UserTopNav.js":"14","D:\\Agence 2i works\\front\\src\\Pages\\FeaturePages\\AddFeaturePage\\AddFeaturePage.js":"15","D:\\Agence 2i works\\front\\src\\Pages\\PackPages\\AddPack\\AddPack.js":"16","D:\\Agence 2i works\\front\\src\\Store\\ConfigureStore.js":"17","D:\\Agence 2i works\\front\\src\\Actions\\Auth.js":"18","D:\\Agence 2i works\\front\\src\\Pages\\NotFoundPage\\NotFound.js":"19","D:\\Agence 2i works\\front\\src\\Reducers\\RootReducer.js":"20","D:\\Agence 2i works\\front\\src\\Actions\\index.js":"21","D:\\Agence 2i works\\front\\src\\constants\\BackendConstants.js":"22","D:\\Agence 2i works\\front\\src\\Reducers\\Auth.js":"23"},{"size":620,"mtime":1615899702888,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1615899702889,"results":"26","hashOfConfig":"25"},{"size":951,"mtime":1616153940624,"results":"27","hashOfConfig":"25"},{"size":2132,"mtime":1616153509004,"results":"28","hashOfConfig":"25"},{"size":453,"mtime":1616153508993,"results":"29","hashOfConfig":"25"},{"size":1469,"mtime":1616152674756,"results":"30","hashOfConfig":"25"},{"size":281,"mtime":1616152649327,"results":"31","hashOfConfig":"25"},{"size":479,"mtime":1615904945865,"results":"32","hashOfConfig":"25"},{"size":3577,"mtime":1615975196296,"results":"33","hashOfConfig":"25"},{"size":595,"mtime":1616152339447,"results":"34","hashOfConfig":"25"},{"size":1052,"mtime":1615901201393,"results":"35","hashOfConfig":"25"},{"size":10769,"mtime":1615903381010,"results":"36","hashOfConfig":"25"},{"size":2668,"mtime":1616152666091,"results":"37","hashOfConfig":"25"},{"size":1874,"mtime":1616153508991,"results":"38","hashOfConfig":"25"},{"size":2720,"mtime":1616152716900,"results":"39","hashOfConfig":"25"},{"size":5592,"mtime":1616154012571,"results":"40","hashOfConfig":"25"},{"size":1198,"mtime":1616153509103,"results":"41","hashOfConfig":"25"},{"size":1711,"mtime":1616153508940,"results":"42","hashOfConfig":"25"},{"size":819,"mtime":1616153509100,"results":"43","hashOfConfig":"25"},{"size":115,"mtime":1616153509102,"results":"44","hashOfConfig":"25"},{"size":298,"mtime":1616153508940,"results":"45","hashOfConfig":"25"},{"size":48,"mtime":1616153509163,"results":"46","hashOfConfig":"25"},{"size":2159,"mtime":1616153509102,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"17ck4og",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Agence 2i works\\front\\src\\index.js",["98"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactTable from \"react-table-6/react-table.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["99","100"],"D:\\Agence 2i works\\front\\src\\reportWebVitals.js",[],"D:\\Agence 2i works\\front\\src\\App.js",["101","102"],"D:\\Agence 2i works\\front\\src\\Pages\\Login.js",["103","104"],"D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\Home\\Home.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\AdminPages\\CLientsManagment\\AddClient\\AddClient.js",[],"D:\\Agence 2i works\\front\\src\\Components\\forms\\FormAdd.js",[],"D:\\Agence 2i works\\front\\src\\Components\\Inputs\\Inputs.js",[],"D:\\Agence 2i works\\front\\src\\Components\\NavBar\\AdminNavBar.js",["105"],"import React, { useState } from \"react\";\r\nimport { Link, Route, Router, Switch } from \"react-router-dom\";\r\nimport \"./AdminNavBar.css\";\r\nimport * as IoiIcons from \"react-icons/io\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport AddClient from \"../../Pages/AdminPages/CLientsManagment/AddClient/AddClient\";\r\nimport Login from \"../../Pages/Login\";\r\nimport UserTopNav from \"../UserTopNav/UserTopNav\";\r\nimport AllCompanyPage from \"../../Pages/CompanyPages/AllCompanyPage/AllCompanyPage\";\r\nimport AddCompanyPage from \"../../Pages/CompanyPages/AddCompanyPage/AddCompanyPage\";\r\nimport AddFeaturePage from \"../../Pages/FeaturePages/AddFeaturePage/AddFeaturePage\";\r\nimport AddPack from \"../../Pages/PackPages/AddPack/AddPack\";\r\nfunction AdminNavBar() {\r\n  const [AdminSideBar, setAdminSideBar] = useState(false);\r\n  const showSideBar = () => {\r\n    setAdminSideBar(!AdminSideBar);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"top-bar-menu\">\r\n        <Link to=\"#\" className=\"\">\r\n          <IoiIcons.IoIosMenu\r\n            size=\"25\"\r\n            className=\"toggle_menu_sidebar\"\r\n            onClick={() => {\r\n              showSideBar();\r\n            }}\r\n          ></IoiIcons.IoIosMenu>\r\n        </Link>\r\n        <UserTopNav></UserTopNav>\r\n      </div>\r\n\r\n      <nav className={AdminSideBar ? \"nav-menu active\" : \"nav-menu\"}>\r\n        <ul className=\"menu-bars-ul\">\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/addClient\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>Clients</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AllCompany\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>Sociétés</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AddCompanyPage\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>add Sociétés</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AddFeaturePage\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>AddFeaturePage</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/AddPack\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />\r\n              <span>AddPack</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"menu-bars-item\">\r\n            <Link to=\"/home/login\" className=\"menu-bars\">\r\n              <GiIcons.GiFactory size=\"40\" className=\"item-icon\" />{\" \"}\r\n              <span>login</span>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <div\r\n        className={AdminSideBar ? \"pages-content\" : \"pages-content hiddenslide\"}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/home/addClient\" component={AddClient}></Route>\r\n          <Route path=\"/home/login\" component={Login}></Route>\r\n          <Route path=\"/home/AllCompany\" component={AllCompanyPage}></Route>\r\n          <Route path=\"/home/AddCompanyPage\" component={AddCompanyPage}></Route>\r\n          <Route path=\"/home/AddFeaturePage\" component={AddFeaturePage}></Route>\r\n          <Route path=\"/home/AddPack\" component={AddPack}></Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminNavBar;\r\n","D:\\Agence 2i works\\front\\src\\Components\\Buttons\\CustomButton.js",[],"D:\\Agence 2i works\\front\\src\\Pages\\CompanyPages\\AllCompanyPage\\AllCompanyPage.js",[],"D:\\Agence 2i works\\front\\src\\Components\\Tables\\CustomTable.js",["106"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./CustomTable.css\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    headCells,\r\n    alignhead,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={alignhead}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className=\"visuallyHidden\"></span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { numSelected, title } = props;\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar\r\n        className={\r\n          numSelected > 0 ? \" highlight\" : \"root-EnhancedTableToolbar \"\r\n        }\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography\r\n            className=\"title\"\r\n            color=\"inherit\"\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n          >\r\n            {numSelected} sélectionné\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            className=\"title\"\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n        )}\r\n\r\n        {numSelected > 0 ? (\r\n          <div className=\"containerBtn\">\r\n            <Tooltip title=\"Supprimer\">\r\n              <IconButton aria-label=\"supprimer\" onClick={handleClickOpen}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {numSelected == 1 ? (\r\n              <Tooltip title=\"Modifier\">\r\n                <IconButton aria-label=\"modifier\">\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </Toolbar>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable(props) {\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const { rows, headCells, title, alignRow, alignhead } = props;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <Paper className=\"paper\">\r\n        <EnhancedTableToolbar numSelected={selected.length} title={title} />\r\n        <TableContainer>\r\n          <Table className=\"table\" size={\"medium\"}>\r\n            <EnhancedTableHead\r\n              alignhead={alignhead}\r\n              headCells={headCells}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      className=\"tableRow\"\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      {headCells.map((cell) => {\r\n                        return (\r\n                          <TableCell align={alignRow}>{row[cell.id]}</TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 75, 100]}\r\n          labelRowsPerPage=\"Lignes par page\"\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Agence 2i works\\front\\src\\Pages\\CompanyPages\\AddCompanyPage\\AddCompanyPage.js",[],"D:\\Agence 2i works\\front\\src\\Components\\UserTopNav\\UserTopNav.js",["107","108"],"D:\\Agence 2i works\\front\\src\\Pages\\FeaturePages\\AddFeaturePage\\AddFeaturePage.js",["109"],"D:\\Agence 2i works\\front\\src\\Pages\\PackPages\\AddPack\\AddPack.js",["110"],"D:\\Agence 2i works\\front\\src\\Store\\ConfigureStore.js",[],"D:\\Agence 2i works\\front\\src\\Actions\\Auth.js",["111"],"D:\\Agence 2i works\\front\\src\\Pages\\NotFoundPage\\NotFound.js",["112","113","114"],"D:\\Agence 2i works\\front\\src\\Reducers\\RootReducer.js",[],"D:\\Agence 2i works\\front\\src\\Actions\\index.js",[],"D:\\Agence 2i works\\front\\src\\constants\\BackendConstants.js",[],"D:\\Agence 2i works\\front\\src\\Reducers\\Auth.js",["115","116"],{"ruleId":"117","severity":1,"message":"118","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":18},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"117","severity":1,"message":"125","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":21},{"ruleId":"117","severity":1,"message":"126","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":17},{"ruleId":"117","severity":1,"message":"127","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":12},{"ruleId":"128","severity":1,"message":"129","line":25,"column":17,"nodeType":"130","endLine":25,"endColumn":71},{"ruleId":"117","severity":1,"message":"131","line":2,"column":23,"nodeType":"119","messageId":"120","endLine":2,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":162,"column":26,"nodeType":"134","messageId":"135","endLine":162,"endColumn":28},{"ruleId":"117","severity":1,"message":"136","line":8,"column":20,"nodeType":"119","messageId":"120","endLine":8,"endColumn":34},{"ruleId":"128","severity":1,"message":"129","line":26,"column":46,"nodeType":"130","endLine":26,"endColumn":181},{"ruleId":"117","severity":1,"message":"137","line":15,"column":9,"nodeType":"119","messageId":"120","endLine":15,"endColumn":13},{"ruleId":"117","severity":1,"message":"138","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":19},{"ruleId":"117","severity":1,"message":"139","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":20},{"ruleId":"117","severity":1,"message":"125","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":13,"column":9,"nodeType":"130","endLine":13,"endColumn":63},{"ruleId":"128","severity":1,"message":"129","line":15,"column":13,"nodeType":"130","endLine":17,"endColumn":13},{"ruleId":"117","severity":1,"message":"139","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":69,"column":13,"nodeType":"142","messageId":"143","endLine":69,"endColumn":19},"no-unused-vars","'ReactTable' is defined but never used.","Identifier","unusedVar","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"'Link' is defined but never used.","'AddClient' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCurrentUser' is assigned a value but never used.","'widh' is assigned a value but never used.","'FormControl' is defined but never used.","'useHistory' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]